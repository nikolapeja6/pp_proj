INFO  00:15:57,370 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\class2.mj
INFO  00:15:57,425 - #40 program
INFO  00:15:57,425 - #45 BBB
INFO  00:15:57,426 - #38 class
INFO  00:15:57,426 - #45 A
INFO  00:15:57,426 - #34 {
INFO  00:15:57,426 - #34 {
INFO  00:15:57,426 - #45 int
INFO  00:15:57,426 - #45 op
INFO  00:15:57,426 - #32 (
INFO  00:15:57,427 - #45 int
INFO  00:15:57,427 - #45 a
INFO  00:15:57,427 - #33 )
INFO  00:15:57,427 - #34 {
INFO  00:15:57,427 - #8 return
INFO  00:15:57,428 - #45 a
INFO  00:15:57,428 - #17 *
INFO  00:15:57,428 - #45 a
INFO  00:15:57,429 - #13 ;
INFO  00:15:57,430 - #35 }
INFO  00:15:57,430 - #35 }
INFO  00:15:57,431 - #35 }
INFO  00:15:57,431 - #38 class
INFO  00:15:57,432 - #45 B
INFO  00:15:57,432 - #39 extends
INFO  00:15:57,433 - #45 A
INFO  00:15:57,433 - #34 {
INFO  00:15:57,433 - #34 {
INFO  00:15:57,433 - #45 int
INFO  00:15:57,433 - #45 po
INFO  00:15:57,433 - #32 (
INFO  00:15:57,433 - #45 int
INFO  00:15:57,433 - #45 a
INFO  00:15:57,433 - #33 )
INFO  00:15:57,433 - #34 {
INFO  00:15:57,433 - #41 print
INFO  00:15:57,433 - #32 (
INFO  00:15:57,433 - #10 -
INFO  00:15:57,433 - #33 )
INFO  00:15:57,434 - #13 ;
INFO  00:15:57,434 - #8 return
INFO  00:15:57,434 - #9 111
INFO  00:15:57,434 - #13 ;
INFO  00:15:57,434 - #35 }
INFO  00:15:57,434 - #35 }
INFO  00:15:57,434 - #35 }
INFO  00:15:57,434 - #38 class
INFO  00:15:57,435 - #45 C
INFO  00:15:57,435 - #39 extends
INFO  00:15:57,435 - #45 B
INFO  00:15:57,435 - #34 {
INFO  00:15:57,435 - #34 {
INFO  00:15:57,435 - #45 int
INFO  00:15:57,435 - #45 op
INFO  00:15:57,435 - #32 (
INFO  00:15:57,435 - #45 int
INFO  00:15:57,435 - #45 a
INFO  00:15:57,435 - #33 )
INFO  00:15:57,435 - #34 {
INFO  00:15:57,435 - #8 return
INFO  00:15:57,435 - #45 a
INFO  00:15:57,435 - #15 +
INFO  00:15:57,435 - #45 a
INFO  00:15:57,436 - #13 ;
INFO  00:15:57,436 - #35 }
INFO  00:15:57,436 - #35 }
INFO  00:15:57,437 - #35 }
INFO  00:15:57,437 - #34 {
INFO  00:15:57,437 - #43 void
INFO  00:15:57,437 - #45 main
INFO  00:15:57,439 - #32 (
INFO  00:15:57,439 - #33 )
INFO  00:15:57,439 - #45 A
INFO  00:15:57,439 - #45 a
INFO  00:15:57,439 - #13 ;
INFO  00:15:57,440 - #34 {
INFO  00:15:57,440 - #45 a
INFO  00:15:57,440 - #28 =
INFO  00:15:57,440 - #31 new
INFO  00:15:57,440 - #45 A
INFO  00:15:57,440 - #13 ;
INFO  00:15:57,441 - #41 print
INFO  00:15:57,441 - #32 (
INFO  00:15:57,441 - #45 a
INFO  00:15:57,441 - #14 .
INFO  00:15:57,441 - #45 op
INFO  00:15:57,441 - #32 (
INFO  00:15:57,441 - #9 5
INFO  00:15:57,441 - #33 )
INFO  00:15:57,442 - #33 )
INFO  00:15:57,442 - #13 ;
INFO  00:15:57,442 - #41 print
INFO  00:15:57,442 - #32 (
INFO  00:15:57,442 - #45 eol
INFO  00:15:57,442 - #33 )
INFO  00:15:57,442 - #13 ;
INFO  00:15:57,442 - #45 a
INFO  00:15:57,442 - #28 =
INFO  00:15:57,442 - #31 new
INFO  00:15:57,442 - #45 B
INFO  00:15:57,442 - #13 ;
INFO  00:15:57,442 - #41 print
INFO  00:15:57,442 - #32 (
INFO  00:15:57,442 - #45 a
INFO  00:15:57,442 - #14 .
INFO  00:15:57,442 - #45 op
INFO  00:15:57,442 - #32 (
INFO  00:15:57,443 - #9 5
INFO  00:15:57,443 - #33 )
INFO  00:15:57,443 - #33 )
INFO  00:15:57,443 - #13 ;
INFO  00:15:57,443 - #41 print
INFO  00:15:57,443 - #32 (
INFO  00:15:57,443 - #45 eol
INFO  00:15:57,443 - #33 )
INFO  00:15:57,443 - #13 ;
INFO  00:15:57,443 - #45 a
INFO  00:15:57,443 - #28 =
INFO  00:15:57,443 - #31 new
INFO  00:15:57,443 - #45 C
INFO  00:15:57,443 - #13 ;
INFO  00:15:57,443 - #41 print
INFO  00:15:57,443 - #32 (
INFO  00:15:57,443 - #45 a
INFO  00:15:57,443 - #14 .
INFO  00:15:57,443 - #45 op
INFO  00:15:57,443 - #32 (
INFO  00:15:57,443 - #9 5
INFO  00:15:57,443 - #33 )
INFO  00:15:57,443 - #33 )
INFO  00:15:57,443 - #13 ;
INFO  00:15:57,443 - #41 print
INFO  00:15:57,444 - #32 (
INFO  00:15:57,444 - #45 eol
INFO  00:15:57,444 - #33 )
INFO  00:15:57,444 - #13 ;
INFO  00:15:57,444 - #45 a
INFO  00:15:57,444 - #28 =
INFO  00:15:57,444 - #31 new
INFO  00:15:57,444 - #45 A
INFO  00:15:57,444 - #13 ;
INFO  00:15:57,444 - #41 print
INFO  00:15:57,444 - #32 (
INFO  00:15:57,444 - #45 a
INFO  00:15:57,444 - #14 .
INFO  00:15:57,444 - #45 op
INFO  00:15:57,444 - #32 (
INFO  00:15:57,444 - #9 5
INFO  00:15:57,444 - #33 )
INFO  00:15:57,444 - #33 )
INFO  00:15:57,444 - #13 ;
INFO  00:15:57,444 - #41 print
INFO  00:15:57,445 - #32 (
INFO  00:15:57,445 - #45 eol
INFO  00:15:57,445 - #33 )
INFO  00:15:57,445 - #13 ;
INFO  00:15:57,445 - #35 }
INFO  00:15:57,445 - #35 }
INFO  00:15:57,446 - ***Abstract tree****
INFO  00:15:57,446 - #0
DEBUG 00:15:57,454 - program name
DEBUG 00:15:57,454 - ClassBegin
DEBUG 00:15:57,455 - designator simple at line 6: a
DEBUG 00:15:57,455 - designator simple at line 6: a
DEBUG 00:15:57,455 - term element is type 1
DEBUG 00:15:57,455 - term list single is type 1
DEBUG 00:15:57,455 - term MultiFactorTerm is type 1
DEBUG 00:15:57,455 - exprWithNoMinus is type 1
DEBUG 00:15:57,455 - class decl end
DEBUG 00:15:57,455 - class decl 2
DEBUG 00:15:57,456 - derived ClassBegin
DEBUG 00:15:57,456 - found constant with value *****of type 2
DEBUG 00:15:57,456 - found constant with value 45of type 2
DEBUG 00:15:57,456 - constant factor is type 2
DEBUG 00:15:57,456 - term SingleFactorterm is type 2
DEBUG 00:15:57,456 - exprWithNoMinus is type 2
DEBUG 00:15:57,456 - print statement has arg of type 2
DEBUG 00:15:57,456 - found constant with value 111of type 1
DEBUG 00:15:57,456 - constant factor is type 1
DEBUG 00:15:57,456 - term SingleFactorterm is type 1
DEBUG 00:15:57,456 - exprWithNoMinus is type 1
DEBUG 00:15:57,456 - class decl end
DEBUG 00:15:57,456 - class decl 2
DEBUG 00:15:57,456 - derived ClassBegin
DEBUG 00:15:57,456 - designator simple at line 25: a
DEBUG 00:15:57,456 - term SingleFactorterm is type 1
DEBUG 00:15:57,456 - designator simple at line 25: a
DEBUG 00:15:57,456 - term SingleFactorterm is type 1
DEBUG 00:15:57,456 - exprWithNoMinus is type 1
DEBUG 00:15:57,456 - class decl end
DEBUG 00:15:57,456 - class decl 2
DEBUG 00:15:57,457 - program begin
DEBUG 00:15:57,457 - Variable with name a has the address of 0
DEBUG 00:15:57,457 - designator simple at line 32: a
DEBUG 00:15:57,457 - term SingleFactorterm is type 4
DEBUG 00:15:57,457 - exprWithNoMinus is type 4
DEBUG 00:15:57,457 - designator simple at line 34: a
DEBUG 00:15:57,457 - designator simple at line 34: op
DEBUG 00:15:57,457 - found constant with value 5of type 1
DEBUG 00:15:57,457 - constant factor is type 1
DEBUG 00:15:57,457 - term SingleFactorterm is type 1
DEBUG 00:15:57,457 - exprWithNoMinus is type 1
DEBUG 00:15:57,457 - term SingleFactorterm is type 1
DEBUG 00:15:57,457 - exprWithNoMinus is type 1
DEBUG 00:15:57,457 - print statement has arg of type 1
DEBUG 00:15:57,457 - designator simple at line 35: eol
DEBUG 00:15:57,457 - term SingleFactorterm is type 2
DEBUG 00:15:57,457 - exprWithNoMinus is type 2
DEBUG 00:15:57,457 - print statement has arg of type 2
DEBUG 00:15:57,457 - designator simple at line 37: a
DEBUG 00:15:57,457 - term SingleFactorterm is type 4
DEBUG 00:15:57,457 - exprWithNoMinus is type 4
DEBUG 00:15:57,458 - designator simple at line 38: a
DEBUG 00:15:57,458 - designator simple at line 38: op
DEBUG 00:15:57,458 - found constant with value 5of type 1
DEBUG 00:15:57,458 - constant factor is type 1
DEBUG 00:15:57,458 - term SingleFactorterm is type 1
DEBUG 00:15:57,458 - exprWithNoMinus is type 1
DEBUG 00:15:57,458 - term SingleFactorterm is type 1
DEBUG 00:15:57,458 - exprWithNoMinus is type 1
DEBUG 00:15:57,458 - print statement has arg of type 1
DEBUG 00:15:57,458 - designator simple at line 39: eol
DEBUG 00:15:57,458 - term SingleFactorterm is type 2
DEBUG 00:15:57,458 - exprWithNoMinus is type 2
DEBUG 00:15:57,458 - print statement has arg of type 2
DEBUG 00:15:57,458 - designator simple at line 41: a
DEBUG 00:15:57,458 - term SingleFactorterm is type 4
DEBUG 00:15:57,458 - exprWithNoMinus is type 4
DEBUG 00:15:57,458 - designator simple at line 42: a
DEBUG 00:15:57,458 - designator simple at line 42: op
DEBUG 00:15:57,458 - found constant with value 5of type 1
DEBUG 00:15:57,458 - constant factor is type 1
DEBUG 00:15:57,458 - term SingleFactorterm is type 1
DEBUG 00:15:57,458 - exprWithNoMinus is type 1
DEBUG 00:15:57,458 - term SingleFactorterm is type 1
DEBUG 00:15:57,458 - exprWithNoMinus is type 1
DEBUG 00:15:57,458 - print statement has arg of type 1
DEBUG 00:15:57,458 - designator simple at line 43: eol
DEBUG 00:15:57,458 - term SingleFactorterm is type 2
DEBUG 00:15:57,458 - exprWithNoMinus is type 2
DEBUG 00:15:57,458 - print statement has arg of type 2
DEBUG 00:15:57,458 - designator simple at line 45: a
DEBUG 00:15:57,458 - term SingleFactorterm is type 4
DEBUG 00:15:57,458 - exprWithNoMinus is type 4
DEBUG 00:15:57,459 - designator simple at line 46: a
DEBUG 00:15:57,459 - designator simple at line 46: op
DEBUG 00:15:57,459 - found constant with value 5of type 1
DEBUG 00:15:57,459 - constant factor is type 1
DEBUG 00:15:57,459 - term SingleFactorterm is type 1
DEBUG 00:15:57,459 - exprWithNoMinus is type 1
DEBUG 00:15:57,459 - term SingleFactorterm is type 1
DEBUG 00:15:57,459 - exprWithNoMinus is type 1
DEBUG 00:15:57,459 - print statement has arg of type 1
DEBUG 00:15:57,459 - designator simple at line 47: eol
DEBUG 00:15:57,459 - term SingleFactorterm is type 2
DEBUG 00:15:57,459 - exprWithNoMinus is type 2
DEBUG 00:15:57,459 - print statement has arg of type 2
INFO  00:15:57,459 - Print calls = 0
DEBUG 00:15:57,459 - A
	op(0); 
B
	op(0); po(0); 
C
	op(0); po(0); op(0); 

INFO  00:15:57,461 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
DEBUG 00:15:57,464 - updating vTableAddress by A class. OldValue =  1
DEBUG 00:15:57,464 - ^new value = 6
DEBUG 00:15:57,464 - updating vTableAddress by B class. OldValue =  6
DEBUG 00:15:57,464 - ^new value = 15
DEBUG 00:15:57,464 - updating vTableAddress by C class. OldValue =  15
DEBUG 00:15:57,464 - ^new value = 28
DEBUG 00:15:57,464 - new called with level = 0
DEBUG 00:15:57,464 - class is 4
DEBUG 00:15:57,464 - class methoad call op
DEBUG 00:15:57,464 - new called with level = 0
DEBUG 00:15:57,464 - class is 4
DEBUG 00:15:57,464 - class methoad call op
DEBUG 00:15:57,464 - new called with level = 0
DEBUG 00:15:57,464 - class is 4
DEBUG 00:15:57,465 - class methoad call op
DEBUG 00:15:57,465 - new called with level = 0
DEBUG 00:15:57,465 - class is 4
DEBUG 00:15:57,465 - class methoad call op
INFO  00:15:57,469 - Parsiranje uspesno zavrseno!
