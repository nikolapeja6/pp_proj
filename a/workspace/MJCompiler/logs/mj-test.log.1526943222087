INFO  00:51:49,243 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  00:51:49,309 - #40 program
INFO  00:51:49,309 - #45 test_303
INFO  00:51:49,309 - #44 const
INFO  00:51:49,309 - #45 int
INFO  00:51:49,309 - #45 cinilac
INFO  00:51:49,310 - #28 =
INFO  00:51:49,310 - #9 4
INFO  00:51:49,310 - #12 ,
INFO  00:51:49,310 - #45 delilac
INFO  00:51:49,310 - #28 =
INFO  00:51:49,310 - #9 3
INFO  00:51:49,310 - #13 ;
INFO  00:51:49,310 - #38 class
INFO  00:51:49,311 - #45 Predmet
INFO  00:51:49,311 - #34 {
INFO  00:51:49,311 - #45 int
INFO  00:51:49,311 - #45 tezina
INFO  00:51:49,311 - #13 ;
INFO  00:51:49,312 - #45 char
INFO  00:51:49,312 - #45 vrsta
INFO  00:51:49,312 - #13 ;
INFO  00:51:49,312 - #34 {
INFO  00:51:49,313 - #43 void
INFO  00:51:49,313 - #45 postaviTezinu
INFO  00:51:49,314 - #32 (
INFO  00:51:49,314 - #45 int
INFO  00:51:49,314 - #45 tezina
INFO  00:51:49,314 - #33 )
INFO  00:51:49,314 - #34 {
INFO  00:51:49,314 - #45 this
INFO  00:51:49,315 - #14 .
INFO  00:51:49,315 - #45 tezina
INFO  00:51:49,315 - #28 =
INFO  00:51:49,315 - #45 tezina
INFO  00:51:49,315 - #13 ;
INFO  00:51:49,316 - #35 }
INFO  00:51:49,317 - #43 void
INFO  00:51:49,318 - #45 ucitajTezinu
INFO  00:51:49,318 - #32 (
INFO  00:51:49,318 - #33 )
INFO  00:51:49,318 - #34 {
INFO  00:51:49,318 - #42 read
INFO  00:51:49,318 - #32 (
INFO  00:51:49,318 - #45 tezina
INFO  00:51:49,318 - #33 )
INFO  00:51:49,318 - #13 ;
INFO  00:51:49,318 - #35 }
INFO  00:51:49,318 - #45 int
INFO  00:51:49,318 - #45 zapremina
INFO  00:51:49,319 - #32 (
INFO  00:51:49,319 - #33 )
INFO  00:51:49,319 - #34 {
INFO  00:51:49,319 - #8 return
INFO  00:51:49,319 - #9 0
INFO  00:51:49,319 - #13 ;
INFO  00:51:49,319 - #35 }
INFO  00:51:49,319 - #45 int
INFO  00:51:49,319 - #45 Q
INFO  00:51:49,319 - #32 (
INFO  00:51:49,319 - #33 )
INFO  00:51:49,319 - #34 {
INFO  00:51:49,319 - #8 return
INFO  00:51:49,320 - #45 this
INFO  00:51:49,320 - #14 .
INFO  00:51:49,320 - #45 zapremina
INFO  00:51:49,320 - #32 (
INFO  00:51:49,320 - #33 )
INFO  00:51:49,320 - #17 *
INFO  00:51:49,320 - #45 tezina
INFO  00:51:49,321 - #13 ;
INFO  00:51:49,321 - #35 }
INFO  00:51:49,321 - #43 void
INFO  00:51:49,321 - #45 postaviVrstu
INFO  00:51:49,321 - #32 (
INFO  00:51:49,321 - #45 char
INFO  00:51:49,321 - #45 vrsta
INFO  00:51:49,321 - #33 )
INFO  00:51:49,321 - #34 {
INFO  00:51:49,321 - #45 this
INFO  00:51:49,321 - #14 .
INFO  00:51:49,321 - #45 vrsta
INFO  00:51:49,322 - #28 =
INFO  00:51:49,322 - #45 vrsta
INFO  00:51:49,322 - #13 ;
INFO  00:51:49,322 - #35 }
INFO  00:51:49,322 - #35 }
INFO  00:51:49,322 - #35 }
INFO  00:51:49,322 - #38 class
INFO  00:51:49,323 - #45 Sfera
INFO  00:51:49,323 - #39 extends
INFO  00:51:49,323 - #45 Predmet
INFO  00:51:49,323 - #34 {
INFO  00:51:49,323 - #45 int
INFO  00:51:49,323 - #45 r
INFO  00:51:49,323 - #13 ;
INFO  00:51:49,323 - #34 {
INFO  00:51:49,323 - #43 void
INFO  00:51:49,323 - #45 postaviTezinu
INFO  00:51:49,323 - #32 (
INFO  00:51:49,323 - #45 int
INFO  00:51:49,323 - #45 tezina
INFO  00:51:49,323 - #33 )
INFO  00:51:49,323 - #34 {
INFO  00:51:49,323 - #45 this
INFO  00:51:49,323 - #14 .
INFO  00:51:49,323 - #45 tezina
INFO  00:51:49,323 - #28 =
INFO  00:51:49,324 - #45 tezina
INFO  00:51:49,324 - #13 ;
INFO  00:51:49,324 - #45 vrsta
INFO  00:51:49,324 - #28 =
INFO  00:51:49,324 - #10 s
INFO  00:51:49,324 - #13 ;
INFO  00:51:49,324 - #35 }
INFO  00:51:49,324 - #43 void
INFO  00:51:49,324 - #45 postaviPoluprecnik
INFO  00:51:49,324 - #32 (
INFO  00:51:49,324 - #45 int
INFO  00:51:49,324 - #45 r
INFO  00:51:49,324 - #33 )
INFO  00:51:49,324 - #34 {
INFO  00:51:49,324 - #45 this
INFO  00:51:49,324 - #14 .
INFO  00:51:49,324 - #45 r
INFO  00:51:49,324 - #28 =
INFO  00:51:49,324 - #45 r
INFO  00:51:49,325 - #13 ;
INFO  00:51:49,325 - #45 postaviVrstu
INFO  00:51:49,325 - #32 (
INFO  00:51:49,325 - #10 s
INFO  00:51:49,325 - #33 )
INFO  00:51:49,325 - #13 ;
INFO  00:51:49,325 - #41 print
INFO  00:51:49,325 - #32 (
INFO  00:51:49,325 - #10 x
INFO  00:51:49,325 - #33 )
INFO  00:51:49,325 - #13 ;
INFO  00:51:49,325 - #41 print
INFO  00:51:49,325 - #32 (
INFO  00:51:49,326 - #45 r
INFO  00:51:49,326 - #12 ,
INFO  00:51:49,326 - #9 1
INFO  00:51:49,326 - #33 )
INFO  00:51:49,326 - #13 ;
INFO  00:51:49,326 - #41 print
INFO  00:51:49,326 - #32 (
INFO  00:51:49,326 - #10 :
INFO  00:51:49,326 - #33 )
INFO  00:51:49,326 - #13 ;
INFO  00:51:49,326 - #41 print
INFO  00:51:49,326 - #32 (
INFO  00:51:49,326 - #45 this
INFO  00:51:49,326 - #14 .
INFO  00:51:49,326 - #45 r
INFO  00:51:49,326 - #12 ,
INFO  00:51:49,326 - #9 1
INFO  00:51:49,326 - #33 )
INFO  00:51:49,326 - #13 ;
INFO  00:51:49,326 - #35 }
INFO  00:51:49,326 - #45 int
INFO  00:51:49,327 - #45 zapremina
INFO  00:51:49,327 - #32 (
INFO  00:51:49,327 - #33 )
INFO  00:51:49,327 - #45 int
INFO  00:51:49,327 - #45 z
INFO  00:51:49,327 - #13 ;
INFO  00:51:49,327 - #34 {
INFO  00:51:49,327 - #45 z
INFO  00:51:49,327 - #28 =
INFO  00:51:49,327 - #45 cinilac
INFO  00:51:49,327 - #13 ;
INFO  00:51:49,327 - #8 return
INFO  00:51:49,327 - #45 z
INFO  00:51:49,327 - #17 *
INFO  00:51:49,327 - #32 (
INFO  00:51:49,327 - #45 r
INFO  00:51:49,327 - #18 /
INFO  00:51:49,327 - #45 delilac
INFO  00:51:49,328 - #33 )
INFO  00:51:49,328 - #13 ;
INFO  00:51:49,328 - #35 }
INFO  00:51:49,328 - #35 }
INFO  00:51:49,328 - #35 }
INFO  00:51:49,328 - #38 class
INFO  00:51:49,328 - #45 Kvadar
INFO  00:51:49,328 - #39 extends
INFO  00:51:49,328 - #45 Predmet
INFO  00:51:49,328 - #34 {
INFO  00:51:49,328 - #45 int
INFO  00:51:49,328 - #45 a
INFO  00:51:49,328 - #12 ,
INFO  00:51:49,328 - #45 b
INFO  00:51:49,328 - #12 ,
INFO  00:51:49,329 - #45 c
INFO  00:51:49,329 - #13 ;
INFO  00:51:49,329 - #34 {
INFO  00:51:49,329 - #43 void
INFO  00:51:49,329 - #45 postaviTezinu
INFO  00:51:49,329 - #32 (
INFO  00:51:49,329 - #45 int
INFO  00:51:49,329 - #45 tezina
INFO  00:51:49,329 - #33 )
INFO  00:51:49,329 - #34 {
INFO  00:51:49,329 - #45 this
INFO  00:51:49,329 - #14 .
INFO  00:51:49,329 - #45 tezina
INFO  00:51:49,329 - #28 =
INFO  00:51:49,329 - #45 tezina
INFO  00:51:49,329 - #13 ;
INFO  00:51:49,329 - #45 vrsta
INFO  00:51:49,330 - #28 =
INFO  00:51:49,330 - #10 k
INFO  00:51:49,330 - #13 ;
INFO  00:51:49,330 - #35 }
INFO  00:51:49,330 - #43 void
INFO  00:51:49,330 - #45 postaviStranice
INFO  00:51:49,330 - #32 (
INFO  00:51:49,330 - #45 int
INFO  00:51:49,330 - #45 a
INFO  00:51:49,330 - #12 ,
INFO  00:51:49,330 - #45 int
INFO  00:51:49,330 - #45 b
INFO  00:51:49,330 - #12 ,
INFO  00:51:49,330 - #45 int
INFO  00:51:49,330 - #45 c
INFO  00:51:49,330 - #33 )
INFO  00:51:49,330 - #34 {
INFO  00:51:49,330 - #45 this
INFO  00:51:49,330 - #14 .
INFO  00:51:49,330 - #45 a
INFO  00:51:49,330 - #28 =
INFO  00:51:49,330 - #45 a
INFO  00:51:49,330 - #13 ;
INFO  00:51:49,331 - #45 this
INFO  00:51:49,331 - #14 .
INFO  00:51:49,331 - #45 b
INFO  00:51:49,331 - #28 =
INFO  00:51:49,331 - #45 b
INFO  00:51:49,331 - #13 ;
INFO  00:51:49,331 - #45 this
INFO  00:51:49,331 - #14 .
INFO  00:51:49,331 - #45 c
INFO  00:51:49,331 - #28 =
INFO  00:51:49,331 - #45 c
INFO  00:51:49,331 - #13 ;
INFO  00:51:49,331 - #45 vrsta
INFO  00:51:49,331 - #28 =
INFO  00:51:49,331 - #10 k
INFO  00:51:49,331 - #13 ;
INFO  00:51:49,331 - #35 }
INFO  00:51:49,331 - #45 int
INFO  00:51:49,331 - #45 zapremina
INFO  00:51:49,332 - #32 (
INFO  00:51:49,332 - #33 )
INFO  00:51:49,332 - #45 int
INFO  00:51:49,332 - #45 z
INFO  00:51:49,332 - #13 ;
INFO  00:51:49,332 - #34 {
INFO  00:51:49,332 - #45 z
INFO  00:51:49,332 - #28 =
INFO  00:51:49,332 - #45 a
INFO  00:51:49,332 - #17 *
INFO  00:51:49,332 - #45 b
INFO  00:51:49,332 - #17 *
INFO  00:51:49,332 - #45 c
INFO  00:51:49,332 - #13 ;
INFO  00:51:49,332 - #8 return
INFO  00:51:49,332 - #45 z
INFO  00:51:49,332 - #13 ;
INFO  00:51:49,332 - #35 }
INFO  00:51:49,332 - #35 }
INFO  00:51:49,333 - #35 }
INFO  00:51:49,333 - #45 int
INFO  00:51:49,333 - #45 zapreminaK
INFO  00:51:49,333 - #12 ,
INFO  00:51:49,333 - #45 zapreminaS
INFO  00:51:49,333 - #13 ;
INFO  00:51:49,333 - #45 int
INFO  00:51:49,333 - #45 tezinaK
INFO  00:51:49,333 - #12 ,
INFO  00:51:49,333 - #45 tezinaS
INFO  00:51:49,333 - #13 ;
INFO  00:51:49,333 - #34 {
INFO  00:51:49,333 - #43 void
INFO  00:51:49,334 - #45 ispis
INFO  00:51:49,334 - #32 (
INFO  00:51:49,334 - #45 Predmet
INFO  00:51:49,334 - #45 p
INFO  00:51:49,334 - #33 )
INFO  00:51:49,334 - #34 {
INFO  00:51:49,334 - #41 print
INFO  00:51:49,334 - #32 (
INFO  00:51:49,334 - #45 p
INFO  00:51:49,334 - #14 .
INFO  00:51:49,334 - #45 vrsta
INFO  00:51:49,334 - #33 )
INFO  00:51:49,335 - #13 ;
INFO  00:51:49,335 - #41 print
INFO  00:51:49,335 - #32 (
INFO  00:51:49,335 - #45 p
INFO  00:51:49,335 - #14 .
INFO  00:51:49,335 - #45 tezina
INFO  00:51:49,335 - #33 )
INFO  00:51:49,335 - #13 ;
INFO  00:51:49,335 - #41 print
INFO  00:51:49,335 - #32 (
INFO  00:51:49,335 - #45 eol
INFO  00:51:49,335 - #33 )
INFO  00:51:49,335 - #13 ;
INFO  00:51:49,335 - #35 }
INFO  00:51:49,335 - #43 void
INFO  00:51:49,335 - #45 main
INFO  00:51:49,335 - #32 (
INFO  00:51:49,335 - #33 )
INFO  00:51:49,335 - #45 Predmet
INFO  00:51:49,335 - #45 predmeti
INFO  00:51:49,335 - #36 [
INFO  00:51:49,335 - #37 ]
INFO  00:51:49,335 - #13 ;
INFO  00:51:49,336 - #45 int
INFO  00:51:49,336 - #45 i
INFO  00:51:49,336 - #13 ;
INFO  00:51:49,336 - #45 Sfera
INFO  00:51:49,336 - #45 s1
INFO  00:51:49,336 - #12 ,
INFO  00:51:49,336 - #45 s2
INFO  00:51:49,336 - #12 ,
INFO  00:51:49,336 - #45 s3
INFO  00:51:49,336 - #13 ;
INFO  00:51:49,336 - #45 Kvadar
INFO  00:51:49,336 - #45 k1
INFO  00:51:49,336 - #12 ,
INFO  00:51:49,336 - #45 k2
INFO  00:51:49,336 - #12 ,
INFO  00:51:49,336 - #45 k3
INFO  00:51:49,336 - #13 ;
INFO  00:51:49,336 - #45 int
INFO  00:51:49,336 - #45 t
INFO  00:51:49,336 - #13 ;
INFO  00:51:49,336 - #34 {
INFO  00:51:49,336 - #45 predmeti
INFO  00:51:49,336 - #28 =
INFO  00:51:49,336 - #31 new
INFO  00:51:49,336 - #45 Predmet
INFO  00:51:49,336 - #36 [
INFO  00:51:49,336 - #9 6
INFO  00:51:49,336 - #37 ]
INFO  00:51:49,336 - #13 ;
INFO  00:51:49,337 - #45 s1
INFO  00:51:49,337 - #28 =
INFO  00:51:49,337 - #31 new
INFO  00:51:49,337 - #45 Sfera
INFO  00:51:49,337 - #13 ;
INFO  00:51:49,337 - #45 s2
INFO  00:51:49,337 - #28 =
INFO  00:51:49,337 - #31 new
INFO  00:51:49,337 - #45 Sfera
INFO  00:51:49,337 - #13 ;
INFO  00:51:49,337 - #45 s3
INFO  00:51:49,337 - #28 =
INFO  00:51:49,337 - #31 new
INFO  00:51:49,337 - #45 Sfera
INFO  00:51:49,337 - #13 ;
INFO  00:51:49,337 - #45 k1
INFO  00:51:49,337 - #28 =
INFO  00:51:49,337 - #31 new
INFO  00:51:49,337 - #45 Kvadar
INFO  00:51:49,337 - #13 ;
INFO  00:51:49,337 - #45 k2
INFO  00:51:49,337 - #28 =
INFO  00:51:49,337 - #31 new
INFO  00:51:49,337 - #45 Kvadar
INFO  00:51:49,337 - #13 ;
INFO  00:51:49,338 - #45 k3
INFO  00:51:49,338 - #28 =
INFO  00:51:49,338 - #31 new
INFO  00:51:49,338 - #45 Kvadar
INFO  00:51:49,338 - #13 ;
INFO  00:51:49,338 - #45 s1
INFO  00:51:49,338 - #14 .
INFO  00:51:49,338 - #45 postaviPoluprecnik
INFO  00:51:49,338 - #32 (
INFO  00:51:49,338 - #9 1
INFO  00:51:49,338 - #33 )
INFO  00:51:49,338 - #13 ;
INFO  00:51:49,338 - #45 s2
INFO  00:51:49,338 - #14 .
INFO  00:51:49,338 - #45 postaviPoluprecnik
INFO  00:51:49,338 - #32 (
INFO  00:51:49,338 - #9 2
INFO  00:51:49,338 - #33 )
INFO  00:51:49,339 - #13 ;
INFO  00:51:49,339 - #45 s3
INFO  00:51:49,339 - #14 .
INFO  00:51:49,339 - #45 postaviPoluprecnik
INFO  00:51:49,339 - #32 (
INFO  00:51:49,339 - #9 3
INFO  00:51:49,339 - #33 )
INFO  00:51:49,339 - #13 ;
INFO  00:51:49,339 - #45 k1
INFO  00:51:49,339 - #14 .
INFO  00:51:49,339 - #45 postaviStranice
INFO  00:51:49,339 - #32 (
INFO  00:51:49,339 - #9 1
INFO  00:51:49,339 - #12 ,
INFO  00:51:49,339 - #9 2
INFO  00:51:49,339 - #12 ,
INFO  00:51:49,339 - #9 3
INFO  00:51:49,339 - #33 )
INFO  00:51:49,339 - #13 ;
INFO  00:51:49,339 - #45 k2
INFO  00:51:49,339 - #14 .
INFO  00:51:49,339 - #45 postaviStranice
INFO  00:51:49,339 - #32 (
INFO  00:51:49,339 - #9 2
INFO  00:51:49,340 - #12 ,
INFO  00:51:49,340 - #9 3
INFO  00:51:49,340 - #12 ,
INFO  00:51:49,340 - #9 4
INFO  00:51:49,340 - #33 )
INFO  00:51:49,340 - #13 ;
INFO  00:51:49,340 - #45 k3
INFO  00:51:49,340 - #14 .
INFO  00:51:49,340 - #45 postaviStranice
INFO  00:51:49,340 - #32 (
INFO  00:51:49,340 - #9 3
INFO  00:51:49,340 - #12 ,
INFO  00:51:49,340 - #9 4
INFO  00:51:49,340 - #12 ,
INFO  00:51:49,340 - #9 5
INFO  00:51:49,340 - #33 )
INFO  00:51:49,340 - #13 ;
INFO  00:51:49,340 - #41 print
INFO  00:51:49,340 - #32 (
INFO  00:51:49,340 - #45 s1
INFO  00:51:49,340 - #14 .
INFO  00:51:49,340 - #45 zapremina
INFO  00:51:49,340 - #32 (
INFO  00:51:49,340 - #33 )
INFO  00:51:49,340 - #33 )
INFO  00:51:49,340 - #13 ;
INFO  00:51:49,340 - #41 print
INFO  00:51:49,340 - #32 (
INFO  00:51:49,340 - #45 s2
INFO  00:51:49,340 - #14 .
INFO  00:51:49,340 - #45 zapremina
INFO  00:51:49,340 - #32 (
INFO  00:51:49,340 - #33 )
INFO  00:51:49,340 - #33 )
INFO  00:51:49,340 - #13 ;
INFO  00:51:49,340 - #41 print
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #45 s3
INFO  00:51:49,341 - #14 .
INFO  00:51:49,341 - #45 zapremina
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #13 ;
INFO  00:51:49,341 - #41 print
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #45 k1
INFO  00:51:49,341 - #14 .
INFO  00:51:49,341 - #45 zapremina
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #13 ;
INFO  00:51:49,341 - #41 print
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #45 k2
INFO  00:51:49,341 - #14 .
INFO  00:51:49,341 - #45 zapremina
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #13 ;
INFO  00:51:49,341 - #41 print
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #45 k3
INFO  00:51:49,341 - #14 .
INFO  00:51:49,341 - #45 zapremina
INFO  00:51:49,341 - #32 (
INFO  00:51:49,341 - #33 )
INFO  00:51:49,341 - #33 )
INFO  00:51:49,342 - #13 ;
INFO  00:51:49,342 - #41 print
INFO  00:51:49,342 - #32 (
INFO  00:51:49,342 - #45 eol
INFO  00:51:49,342 - #33 )
INFO  00:51:49,342 - #13 ;
INFO  00:51:49,342 - #41 print
INFO  00:51:49,342 - #32 (
INFO  00:51:49,342 - #45 s1
INFO  00:51:49,342 - #14 .
INFO  00:51:49,342 - #45 r
INFO  00:51:49,342 - #33 )
INFO  00:51:49,342 - #13 ;
INFO  00:51:49,342 - #41 print
INFO  00:51:49,342 - #32 (
INFO  00:51:49,342 - #45 s2
INFO  00:51:49,342 - #14 .
INFO  00:51:49,342 - #45 r
INFO  00:51:49,342 - #33 )
INFO  00:51:49,342 - #13 ;
INFO  00:51:49,342 - #41 print
INFO  00:51:49,342 - #32 (
INFO  00:51:49,342 - #45 s3
INFO  00:51:49,342 - #14 .
INFO  00:51:49,342 - #45 r
INFO  00:51:49,342 - #33 )
INFO  00:51:49,342 - #13 ;
INFO  00:51:49,342 - #45 predmeti
INFO  00:51:49,342 - #36 [
INFO  00:51:49,342 - #9 0
INFO  00:51:49,342 - #37 ]
INFO  00:51:49,342 - #28 =
INFO  00:51:49,343 - #45 s1
INFO  00:51:49,343 - #13 ;
INFO  00:51:49,343 - #45 predmeti
INFO  00:51:49,343 - #36 [
INFO  00:51:49,343 - #9 2
INFO  00:51:49,343 - #37 ]
INFO  00:51:49,343 - #28 =
INFO  00:51:49,343 - #45 s2
INFO  00:51:49,343 - #13 ;
INFO  00:51:49,343 - #45 predmeti
INFO  00:51:49,343 - #36 [
INFO  00:51:49,343 - #9 4
INFO  00:51:49,343 - #37 ]
INFO  00:51:49,343 - #28 =
INFO  00:51:49,343 - #45 s3
INFO  00:51:49,343 - #13 ;
INFO  00:51:49,343 - #45 predmeti
INFO  00:51:49,343 - #36 [
INFO  00:51:49,343 - #9 1
INFO  00:51:49,343 - #37 ]
INFO  00:51:49,343 - #28 =
INFO  00:51:49,343 - #45 k1
INFO  00:51:49,343 - #13 ;
INFO  00:51:49,343 - #45 predmeti
INFO  00:51:49,343 - #36 [
INFO  00:51:49,343 - #9 3
INFO  00:51:49,343 - #37 ]
INFO  00:51:49,343 - #28 =
INFO  00:51:49,343 - #45 k2
INFO  00:51:49,343 - #13 ;
INFO  00:51:49,343 - #45 predmeti
INFO  00:51:49,344 - #36 [
INFO  00:51:49,344 - #9 5
INFO  00:51:49,344 - #37 ]
INFO  00:51:49,344 - #28 =
INFO  00:51:49,344 - #45 k3
INFO  00:51:49,344 - #13 ;
INFO  00:51:49,344 - #42 read
INFO  00:51:49,344 - #32 (
INFO  00:51:49,344 - #45 t
INFO  00:51:49,344 - #33 )
INFO  00:51:49,344 - #13 ;
INFO  00:51:49,344 - #45 i
INFO  00:51:49,344 - #28 =
INFO  00:51:49,344 - #9 0
INFO  00:51:49,344 - #13 ;
INFO  00:51:49,344 - #5 do
INFO  00:51:49,344 - #34 {
INFO  00:51:49,345 - #45 predmeti
INFO  00:51:49,345 - #36 [
INFO  00:51:49,345 - #45 i
INFO  00:51:49,345 - #37 ]
INFO  00:51:49,345 - #14 .
INFO  00:51:49,345 - #45 postaviTezinu
INFO  00:51:49,345 - #32 (
INFO  00:51:49,345 - #45 t
INFO  00:51:49,345 - #33 )
INFO  00:51:49,345 - #13 ;
INFO  00:51:49,345 - #45 i
INFO  00:51:49,346 - #29 ++
INFO  00:51:49,346 - #13 ;
INFO  00:51:49,346 - #35 }
INFO  00:51:49,346 - #6 while
INFO  00:51:49,346 - #32 (
INFO  00:51:49,346 - #45 i
INFO  00:51:49,346 - #23 <
INFO  00:51:49,346 - #9 6
INFO  00:51:49,347 - #33 )
INFO  00:51:49,347 - #13 ;
INFO  00:51:49,347 - #45 i
INFO  00:51:49,348 - #28 =
INFO  00:51:49,348 - #9 0
INFO  00:51:49,348 - #13 ;
INFO  00:51:49,348 - #45 zapreminaS
INFO  00:51:49,348 - #28 =
INFO  00:51:49,348 - #9 0
INFO  00:51:49,348 - #13 ;
INFO  00:51:49,348 - #45 tezinaS
INFO  00:51:49,348 - #28 =
INFO  00:51:49,348 - #9 0
INFO  00:51:49,348 - #13 ;
INFO  00:51:49,348 - #5 do
INFO  00:51:49,348 - #34 {
INFO  00:51:49,348 - #45 i
INFO  00:51:49,348 - #29 ++
INFO  00:51:49,348 - #13 ;
INFO  00:51:49,348 - #2 if
INFO  00:51:49,348 - #32 (
INFO  00:51:49,348 - #45 i
INFO  00:51:49,348 - #19 %
INFO  00:51:49,348 - #9 2
INFO  00:51:49,349 - #20 ==
INFO  00:51:49,349 - #9 0
INFO  00:51:49,349 - #33 )
INFO  00:51:49,349 - #7 continue
INFO  00:51:49,349 - #13 ;
INFO  00:51:49,349 - #45 zapreminaS
INFO  00:51:49,350 - #28 =
INFO  00:51:49,350 - #45 zapreminaS
INFO  00:51:49,350 - #15 +
INFO  00:51:49,350 - #45 predmeti
INFO  00:51:49,351 - #36 [
INFO  00:51:49,351 - #45 i
INFO  00:51:49,351 - #16 -
INFO  00:51:49,351 - #9 1
INFO  00:51:49,352 - #37 ]
INFO  00:51:49,352 - #14 .
INFO  00:51:49,352 - #45 zapremina
INFO  00:51:49,352 - #32 (
INFO  00:51:49,352 - #33 )
INFO  00:51:49,352 - #13 ;
INFO  00:51:49,352 - #45 tezinaS
INFO  00:51:49,352 - #28 =
INFO  00:51:49,352 - #45 tezinaS
INFO  00:51:49,352 - #15 +
INFO  00:51:49,352 - #45 predmeti
INFO  00:51:49,352 - #36 [
INFO  00:51:49,352 - #45 i
INFO  00:51:49,352 - #16 -
INFO  00:51:49,353 - #9 1
INFO  00:51:49,353 - #37 ]
INFO  00:51:49,353 - #14 .
INFO  00:51:49,353 - #45 Q
INFO  00:51:49,353 - #32 (
INFO  00:51:49,353 - #33 )
INFO  00:51:49,353 - #13 ;
INFO  00:51:49,353 - #45 ispis
INFO  00:51:49,353 - #32 (
INFO  00:51:49,353 - #45 predmeti
INFO  00:51:49,353 - #36 [
INFO  00:51:49,353 - #45 i
INFO  00:51:49,353 - #16 -
INFO  00:51:49,353 - #9 1
INFO  00:51:49,353 - #37 ]
INFO  00:51:49,353 - #33 )
INFO  00:51:49,353 - #13 ;
INFO  00:51:49,353 - #35 }
INFO  00:51:49,353 - #6 while
INFO  00:51:49,353 - #32 (
INFO  00:51:49,353 - #45 i
INFO  00:51:49,353 - #23 <
INFO  00:51:49,353 - #9 6
INFO  00:51:49,353 - #33 )
INFO  00:51:49,353 - #13 ;
INFO  00:51:49,353 - #45 i
INFO  00:51:49,353 - #28 =
INFO  00:51:49,353 - #9 0
INFO  00:51:49,353 - #13 ;
INFO  00:51:49,353 - #45 zapreminaK
INFO  00:51:49,353 - #28 =
INFO  00:51:49,353 - #9 0
INFO  00:51:49,353 - #13 ;
INFO  00:51:49,353 - #45 tezinaK
INFO  00:51:49,353 - #28 =
INFO  00:51:49,353 - #9 0
INFO  00:51:49,353 - #13 ;
INFO  00:51:49,353 - #5 do
INFO  00:51:49,353 - #34 {
INFO  00:51:49,354 - #45 i
INFO  00:51:49,354 - #29 ++
INFO  00:51:49,354 - #13 ;
INFO  00:51:49,354 - #2 if
INFO  00:51:49,354 - #32 (
INFO  00:51:49,354 - #45 i
INFO  00:51:49,354 - #19 %
INFO  00:51:49,354 - #9 2
INFO  00:51:49,354 - #20 ==
INFO  00:51:49,354 - #9 1
INFO  00:51:49,354 - #33 )
INFO  00:51:49,354 - #7 continue
INFO  00:51:49,354 - #13 ;
INFO  00:51:49,354 - #45 zapreminaK
INFO  00:51:49,354 - #28 =
INFO  00:51:49,357 - #45 zapreminaK
INFO  00:51:49,357 - #15 +
INFO  00:51:49,357 - #45 predmeti
INFO  00:51:49,357 - #36 [
INFO  00:51:49,357 - #45 i
INFO  00:51:49,357 - #16 -
INFO  00:51:49,357 - #9 1
INFO  00:51:49,357 - #37 ]
INFO  00:51:49,357 - #14 .
INFO  00:51:49,357 - #45 zapremina
INFO  00:51:49,357 - #32 (
INFO  00:51:49,357 - #33 )
INFO  00:51:49,357 - #13 ;
INFO  00:51:49,357 - #45 tezinaK
INFO  00:51:49,357 - #28 =
INFO  00:51:49,357 - #45 tezinaK
INFO  00:51:49,358 - #15 +
INFO  00:51:49,358 - #45 predmeti
INFO  00:51:49,358 - #36 [
INFO  00:51:49,358 - #45 i
INFO  00:51:49,358 - #16 -
INFO  00:51:49,358 - #9 1
INFO  00:51:49,358 - #37 ]
INFO  00:51:49,358 - #14 .
INFO  00:51:49,358 - #45 Q
INFO  00:51:49,358 - #32 (
INFO  00:51:49,358 - #33 )
INFO  00:51:49,358 - #13 ;
INFO  00:51:49,358 - #45 ispis
INFO  00:51:49,358 - #32 (
INFO  00:51:49,358 - #45 predmeti
INFO  00:51:49,358 - #36 [
INFO  00:51:49,358 - #45 i
INFO  00:51:49,358 - #16 -
INFO  00:51:49,358 - #9 1
INFO  00:51:49,358 - #37 ]
INFO  00:51:49,358 - #33 )
INFO  00:51:49,358 - #13 ;
INFO  00:51:49,359 - #35 }
INFO  00:51:49,359 - #6 while
INFO  00:51:49,359 - #32 (
INFO  00:51:49,359 - #45 i
INFO  00:51:49,359 - #23 <
INFO  00:51:49,359 - #9 6
INFO  00:51:49,359 - #33 )
INFO  00:51:49,359 - #13 ;
INFO  00:51:49,359 - #41 print
INFO  00:51:49,359 - #32 (
INFO  00:51:49,359 - #45 zapreminaS
INFO  00:51:49,359 - #33 )
INFO  00:51:49,359 - #13 ;
INFO  00:51:49,359 - #41 print
INFO  00:51:49,359 - #32 (
INFO  00:51:49,359 - #45 eol
INFO  00:51:49,359 - #33 )
INFO  00:51:49,359 - #13 ;
INFO  00:51:49,359 - #41 print
INFO  00:51:49,359 - #32 (
INFO  00:51:49,359 - #45 zapreminaK
INFO  00:51:49,359 - #33 )
INFO  00:51:49,359 - #13 ;
INFO  00:51:49,359 - #41 print
INFO  00:51:49,359 - #32 (
INFO  00:51:49,359 - #45 eol
INFO  00:51:49,359 - #33 )
INFO  00:51:49,359 - #13 ;
INFO  00:51:49,359 - #41 print
INFO  00:51:49,360 - #32 (
INFO  00:51:49,360 - #45 tezinaS
INFO  00:51:49,360 - #33 )
INFO  00:51:49,360 - #13 ;
INFO  00:51:49,360 - #41 print
INFO  00:51:49,360 - #32 (
INFO  00:51:49,360 - #45 eol
INFO  00:51:49,360 - #33 )
INFO  00:51:49,360 - #13 ;
INFO  00:51:49,360 - #41 print
INFO  00:51:49,360 - #32 (
INFO  00:51:49,360 - #45 tezinaK
INFO  00:51:49,360 - #33 )
INFO  00:51:49,360 - #13 ;
INFO  00:51:49,360 - #41 print
INFO  00:51:49,360 - #32 (
INFO  00:51:49,360 - #45 eol
INFO  00:51:49,360 - #33 )
INFO  00:51:49,360 - #13 ;
INFO  00:51:49,360 - #35 }
INFO  00:51:49,360 - #35 }
INFO  00:51:49,361 - ***Abstract tree****
INFO  00:51:49,362 - #0
DEBUG 00:51:49,392 - program name
DEBUG 00:51:49,392 - found constant with value 4of type 1
DEBUG 00:51:49,392 - found constant with value 3of type 1
DEBUG 00:51:49,392 - ClassBegin
DEBUG 00:51:49,396 - Variable with name tezina has the address of 1
DEBUG 00:51:49,396 - Variable with name vrsta has the address of 2
DEBUG 00:51:49,397 - designator simple at line 12: this
DEBUG 00:51:54,465 - designator simple at line 12: tezina
DEBUG 00:51:54,465 - designator simple at line 12: tezina
DEBUG 00:51:54,465 - term SingleFactorterm is type 1
DEBUG 00:51:54,465 - exprWithNoMinus
DEBUG 00:51:54,465 - designator simple at line 13: tezina
DEBUG 00:51:54,465 - found constant with value 0of type 1
DEBUG 00:51:54,465 - constant factor is type 1
DEBUG 00:51:54,465 - term SingleFactorterm is type 1
DEBUG 00:51:54,465 - exprWithNoMinus
DEBUG 00:51:54,465 - designator simple at line 15: this
DEBUG 00:51:54,465 - designator simple at line 15: zapremina
DEBUG 00:51:54,465 - designator simple at line 15: tezina
DEBUG 00:51:54,465 - term element is type 1
DEBUG 00:51:54,466 - term list single is type 1
DEBUG 00:51:54,466 - term MultiFactorTerm is type 1
DEBUG 00:51:54,466 - exprWithNoMinus
DEBUG 00:51:54,466 - designator simple at line 16: this
DEBUG 00:51:54,466 - designator simple at line 16: vrsta
DEBUG 00:51:54,466 - designator simple at line 16: vrsta
DEBUG 00:51:54,466 - term SingleFactorterm is type 2
DEBUG 00:51:54,466 - exprWithNoMinus
DEBUG 00:51:54,466 - class decl end
DEBUG 00:51:54,466 - class decl 1
DEBUG 00:51:54,466 - derived ClassBegin
DEBUG 00:53:10,589 - Variable with name r has the address of 3
DEBUG 00:53:10,589 - designator simple at line 24: this
DEBUG 00:53:10,589 - designator simple at line 24: tezina
DEBUG 00:53:10,589 - designator simple at line 24: tezina
DEBUG 00:53:10,589 - term SingleFactorterm is type 1
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - designator simple at line 24: vrsta
DEBUG 00:53:10,589 - found constant with value *****of type 2
DEBUG 00:53:10,589 - found constant with value 115of type 2
DEBUG 00:53:10,589 - constant factor is type 2
DEBUG 00:53:10,589 - term SingleFactorterm is type 2
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - designator simple at line 26: this
DEBUG 00:53:10,589 - designator simple at line 26: r
DEBUG 00:53:10,589 - designator simple at line 26: r
DEBUG 00:53:10,589 - term SingleFactorterm is type 1
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - designator simple at line 27: postaviVrstu
DEBUG 00:53:10,589 - found constant with value *****of type 2
DEBUG 00:53:10,589 - found constant with value 115of type 2
DEBUG 00:53:10,589 - constant factor is type 2
DEBUG 00:53:10,589 - term SingleFactorterm is type 2
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - found constant with value *****of type 2
DEBUG 00:53:10,589 - found constant with value 120of type 2
DEBUG 00:53:10,589 - constant factor is type 2
DEBUG 00:53:10,589 - term SingleFactorterm is type 2
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - print statement has arg of type 2
DEBUG 00:53:10,589 - designator simple at line 29: r
DEBUG 00:53:10,589 - term SingleFactorterm is type 1
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - found constant with value 1of type 1
DEBUG 00:53:10,589 - print statement has arg of type 1
DEBUG 00:53:10,589 - found constant with value *****of type 2
DEBUG 00:53:10,589 - found constant with value 58of type 2
DEBUG 00:53:10,589 - constant factor is type 2
DEBUG 00:53:10,589 - term SingleFactorterm is type 2
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - print statement has arg of type 2
DEBUG 00:53:10,589 - designator simple at line 31: this
DEBUG 00:53:10,589 - designator simple at line 31: r
DEBUG 00:53:10,589 - term SingleFactorterm is type 1
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - found constant with value 1of type 1
DEBUG 00:53:10,589 - print statement has arg of type 1
DEBUG 00:53:10,589 - Variable with name z has the address of 4
DEBUG 00:53:10,589 - designator simple at line 36: z
DEBUG 00:53:10,589 - designator simple at line 36: cinilac
DEBUG 00:53:10,589 - term SingleFactorterm is type 1
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,589 - designator simple at line 37: z
DEBUG 00:53:10,589 - designator simple at line 37: r
DEBUG 00:53:10,589 - designator simple at line 37: delilac
DEBUG 00:53:10,589 - term element is type 1
DEBUG 00:53:10,589 - term list single is type 1
DEBUG 00:53:10,589 - term MultiFactorTerm is type 1
DEBUG 00:53:10,589 - exprWithNoMinus
DEBUG 00:53:10,590 - term element is type 1
DEBUG 00:53:10,590 - term list single is type 1
DEBUG 00:53:10,590 - term MultiFactorTerm is type 1
DEBUG 00:53:10,590 - exprWithNoMinus
DEBUG 00:53:10,590 - class decl end
DEBUG 00:53:10,590 - class decl 1
DEBUG 00:53:10,590 - derived ClassBegin
