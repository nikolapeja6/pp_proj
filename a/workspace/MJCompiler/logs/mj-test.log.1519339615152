INFO  23:43:23,052 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  23:43:23,086 - #40 program
INFO  23:43:23,086 - #45 MJProgram
INFO  23:43:23,086 - #45 int
INFO  23:43:23,086 - #45 x
INFO  23:43:23,087 - #13 ;
INFO  23:43:23,087 - #45 int
INFO  23:43:23,087 - #45 z
INFO  23:43:23,087 - #36 [
INFO  23:43:23,087 - #37 ]
INFO  23:43:23,087 - #13 ;
INFO  23:43:23,088 - #34 {
INFO  23:43:23,088 - #45 int
INFO  23:43:23,089 - #45 main
INFO  23:43:23,089 - #32 (
INFO  23:43:23,089 - #33 )
INFO  23:43:23,089 - #45 int
INFO  23:43:23,089 - #45 y
INFO  23:43:23,089 - #13 ;
INFO  23:43:23,089 - #34 {
INFO  23:43:23,089 - #41 print
INFO  23:43:23,089 - #32 (
INFO  23:43:23,090 - #9 1
INFO  23:43:23,090 - #12 ,
INFO  23:43:23,091 - #9 1
INFO  23:43:23,091 - #33 )
INFO  23:43:23,091 - #13 ;
INFO  23:43:23,091 - #41 print
INFO  23:43:23,091 - #32 (
INFO  23:43:23,091 - #10 a
INFO  23:43:23,092 - #12 ,
INFO  23:43:23,092 - #9 1
INFO  23:43:23,092 - #33 )
INFO  23:43:23,092 - #13 ;
INFO  23:43:23,092 - #45 z
INFO  23:43:23,092 - #28 =
INFO  23:43:23,092 - #31 new
INFO  23:43:23,092 - #45 int
INFO  23:43:23,092 - #36 [
INFO  23:43:23,092 - #9 5
INFO  23:43:23,092 - #37 ]
INFO  23:43:23,092 - #13 ;
INFO  23:43:23,093 - #45 z
INFO  23:43:23,093 - #36 [
INFO  23:43:23,093 - #9 0
INFO  23:43:23,093 - #37 ]
INFO  23:43:23,093 - #28 =
INFO  23:43:23,093 - #9 0
INFO  23:43:23,093 - #13 ;
INFO  23:43:23,093 - #41 print
INFO  23:43:23,093 - #32 (
INFO  23:43:23,093 - #45 z
INFO  23:43:23,093 - #36 [
INFO  23:43:23,093 - #9 0
INFO  23:43:23,093 - #37 ]
INFO  23:43:23,093 - #33 )
INFO  23:43:23,094 - #13 ;
INFO  23:43:23,094 - #45 y
INFO  23:43:23,094 - #28 =
INFO  23:43:23,094 - #9 5
INFO  23:43:23,094 - #13 ;
INFO  23:43:23,094 - #45 x
INFO  23:43:23,094 - #28 =
INFO  23:43:23,094 - #45 y
INFO  23:43:23,094 - #15 +
INFO  23:43:23,094 - #9 3
INFO  23:43:23,095 - #13 ;
INFO  23:43:23,095 - #41 print
INFO  23:43:23,095 - #32 (
INFO  23:43:23,095 - #45 x
INFO  23:43:23,095 - #33 )
INFO  23:43:23,095 - #13 ;
INFO  23:43:23,095 - #45 y
INFO  23:43:23,095 - #28 =
INFO  23:43:23,095 - #32 (
INFO  23:43:23,095 - #45 x
INFO  23:43:23,095 - #33 )
INFO  23:43:23,095 - #13 ;
INFO  23:43:23,096 - #45 x
INFO  23:43:23,096 - #29 ++
INFO  23:43:23,096 - #13 ;
INFO  23:43:23,096 - #41 print
INFO  23:43:23,096 - #32 (
INFO  23:43:23,096 - #45 x
INFO  23:43:23,096 - #33 )
INFO  23:43:23,096 - #13 ;
INFO  23:43:23,096 - #45 x
INFO  23:43:23,096 - #30 --
INFO  23:43:23,096 - #13 ;
INFO  23:43:23,096 - #41 print
INFO  23:43:23,096 - #32 (
INFO  23:43:23,096 - #32 (
INFO  23:43:23,096 - #32 (
INFO  23:43:23,096 - #45 x
INFO  23:43:23,096 - #33 )
INFO  23:43:23,096 - #33 )
INFO  23:43:23,096 - #33 )
INFO  23:43:23,097 - #13 ;
INFO  23:43:23,097 - #45 x
INFO  23:43:23,097 - #28 =
INFO  23:43:23,097 - #45 x
INFO  23:43:23,097 - #15 +
INFO  23:43:23,097 - #32 (
INFO  23:43:23,097 - #16 -
INFO  23:43:23,097 - #9 2
INFO  23:43:23,097 - #33 )
INFO  23:43:23,097 - #13 ;
INFO  23:43:23,097 - #41 print
INFO  23:43:23,097 - #32 (
INFO  23:43:23,097 - #45 x
INFO  23:43:23,097 - #33 )
INFO  23:43:23,097 - #13 ;
INFO  23:43:23,097 - #45 x
INFO  23:43:23,097 - #28 =
INFO  23:43:23,097 - #45 y
INFO  23:43:23,097 - #17 *
INFO  23:43:23,098 - #9 2
INFO  23:43:23,098 - #13 ;
INFO  23:43:23,099 - #41 print
INFO  23:43:23,099 - #32 (
INFO  23:43:23,099 - #45 x
INFO  23:43:23,099 - #33 )
INFO  23:43:23,099 - #13 ;
INFO  23:43:23,099 - #45 y
INFO  23:43:23,099 - #28 =
INFO  23:43:23,099 - #45 x
INFO  23:43:23,099 - #18 /
INFO  23:43:23,099 - #9 4
INFO  23:43:23,099 - #13 ;
INFO  23:43:23,100 - #41 print
INFO  23:43:23,100 - #32 (
INFO  23:43:23,100 - #45 y
INFO  23:43:23,100 - #33 )
INFO  23:43:23,100 - #13 ;
INFO  23:43:23,100 - #45 x
INFO  23:43:23,100 - #28 =
INFO  23:43:23,100 - #45 y
INFO  23:43:23,100 - #19 %
INFO  23:43:23,100 - #9 3
INFO  23:43:23,100 - #13 ;
INFO  23:43:23,100 - #41 print
INFO  23:43:23,100 - #32 (
INFO  23:43:23,100 - #45 x
INFO  23:43:23,100 - #33 )
INFO  23:43:23,100 - #13 ;
INFO  23:43:23,101 - #42 read
INFO  23:43:23,101 - #32 (
INFO  23:43:23,101 - #45 x
INFO  23:43:23,101 - #33 )
INFO  23:43:23,101 - #13 ;
INFO  23:43:23,101 - #45 x
INFO  23:43:23,101 - #28 =
INFO  23:43:23,101 - #45 x
INFO  23:43:23,101 - #17 *
INFO  23:43:23,101 - #45 y
INFO  23:43:23,101 - #13 ;
INFO  23:43:23,101 - #41 print
INFO  23:43:23,101 - #32 (
INFO  23:43:23,101 - #45 x
INFO  23:43:23,101 - #33 )
INFO  23:43:23,101 - #13 ;
INFO  23:43:23,101 - #41 print
INFO  23:43:23,101 - #32 (
INFO  23:43:23,101 - #11 false
INFO  23:43:23,101 - #12 ,
INFO  23:43:23,101 - #9 20
INFO  23:43:23,101 - #33 )
INFO  23:43:23,101 - #13 ;
INFO  23:43:23,101 - #8 return
INFO  23:43:23,102 - #9 0
INFO  23:43:23,102 - #13 ;
INFO  23:43:23,102 - #35 }
INFO  23:43:23,102 - #35 }
INFO  23:43:23,104 - ***Abstract tree****
INFO  23:43:23,104 - #0
DEBUG 23:43:23,121 - Variable with name x has the address of 0
DEBUG 23:43:23,121 - Variable with name y has the address of 0
DEBUG 23:43:23,121 - found constant with value 1of type 1
DEBUG 23:43:23,121 - constant factor is type 1
DEBUG 23:43:23,121 - term SingleFactorterm is type 1
DEBUG 23:43:23,121 - exprWithNoMinus is type 1
DEBUG 23:43:23,121 - found constant with value 1of type 1
DEBUG 23:43:23,122 - print statement has arg of type 1
DEBUG 23:43:23,122 - found constant with value *****of type 2
DEBUG 23:43:23,122 - found constant with value 97of type 2
DEBUG 23:43:23,122 - constant factor is type 2
DEBUG 23:43:23,122 - term SingleFactorterm is type 2
DEBUG 23:43:23,122 - exprWithNoMinus is type 2
DEBUG 23:43:23,122 - found constant with value 1of type 1
DEBUG 23:43:23,122 - print statement has arg of type 2
DEBUG 23:43:23,122 - found constant with value 5of type 1
DEBUG 23:43:23,122 - constant factor is type 1
DEBUG 23:43:23,122 - term SingleFactorterm is type 1
DEBUG 23:43:23,122 - exprWithNoMinus is type 1
DEBUG 23:43:23,122 - term SingleFactorterm is type 3
DEBUG 23:43:23,122 - exprWithNoMinus is type 3
