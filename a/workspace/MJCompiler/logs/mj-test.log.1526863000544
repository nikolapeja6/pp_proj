INFO  02:31:45,588 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  02:31:45,650 - #40 program
INFO  02:31:45,650 - #45 test_303
INFO  02:31:45,650 - #44 const
INFO  02:31:45,650 - #45 int
INFO  02:31:45,650 - #45 cinilac
INFO  02:31:45,650 - #28 =
INFO  02:31:45,650 - #9 4
INFO  02:31:45,650 - #12 ,
INFO  02:31:45,651 - #45 delilac
INFO  02:31:45,651 - #28 =
INFO  02:31:45,651 - #9 3
INFO  02:31:45,651 - #13 ;
INFO  02:31:45,651 - #38 class
INFO  02:31:45,651 - #45 Predmet
INFO  02:31:45,651 - #34 {
INFO  02:31:45,652 - #45 int
INFO  02:31:45,652 - #45 tezina
INFO  02:31:45,652 - #13 ;
INFO  02:31:45,652 - #45 char
INFO  02:31:45,653 - #45 vrsta
INFO  02:31:45,653 - #13 ;
INFO  02:31:45,653 - #34 {
INFO  02:31:45,653 - #43 void
INFO  02:31:45,653 - #45 postaviTezinu
INFO  02:31:45,654 - #32 (
INFO  02:31:45,655 - #45 int
INFO  02:31:45,655 - #45 tezina
INFO  02:31:45,655 - #33 )
INFO  02:31:45,655 - #34 {
INFO  02:31:45,655 - #45 this
INFO  02:31:45,656 - #14 .
INFO  02:31:45,656 - #45 tezina
INFO  02:31:45,656 - #28 =
INFO  02:31:45,656 - #45 tezina
INFO  02:31:45,656 - #13 ;
INFO  02:31:45,657 - #35 }
INFO  02:31:45,658 - #43 void
INFO  02:31:45,659 - #45 ucitajTezinu
INFO  02:31:45,659 - #32 (
INFO  02:31:45,659 - #33 )
INFO  02:31:45,659 - #34 {
INFO  02:31:45,659 - #42 read
INFO  02:31:45,659 - #32 (
INFO  02:31:45,659 - #45 tezina
INFO  02:31:45,659 - #33 )
INFO  02:31:45,659 - #13 ;
INFO  02:31:45,659 - #35 }
INFO  02:31:45,659 - #45 int
INFO  02:31:45,660 - #45 zapremina
INFO  02:31:45,660 - #32 (
INFO  02:31:45,660 - #33 )
INFO  02:31:45,660 - #34 {
INFO  02:31:45,660 - #8 return
INFO  02:31:45,660 - #9 0
INFO  02:31:45,660 - #13 ;
INFO  02:31:45,660 - #35 }
INFO  02:31:45,660 - #45 int
INFO  02:31:45,660 - #45 Q
INFO  02:31:45,660 - #32 (
INFO  02:31:45,660 - #33 )
INFO  02:31:45,661 - #34 {
INFO  02:31:45,661 - #8 return
INFO  02:31:45,661 - #45 zapremina
INFO  02:31:45,661 - #32 (
INFO  02:31:45,661 - #33 )
INFO  02:31:45,661 - #17 *
INFO  02:31:45,661 - #45 tezina
INFO  02:31:45,662 - #13 ;
INFO  02:31:45,662 - #35 }
INFO  02:31:45,662 - #43 void
INFO  02:31:45,662 - #45 postaviVrstu
INFO  02:31:45,662 - #32 (
INFO  02:31:45,662 - #45 char
INFO  02:31:45,662 - #45 vrsta
INFO  02:31:45,662 - #33 )
INFO  02:31:45,663 - #34 {
INFO  02:31:45,663 - #45 this
INFO  02:31:45,663 - #14 .
INFO  02:31:45,663 - #45 vrsta
INFO  02:31:45,663 - #28 =
INFO  02:31:45,663 - #45 vrsta
INFO  02:31:45,663 - #13 ;
INFO  02:31:45,663 - #35 }
INFO  02:31:45,663 - #35 }
INFO  02:31:45,663 - #35 }
INFO  02:31:45,663 - #38 class
INFO  02:31:45,664 - #45 Sfera
INFO  02:31:45,664 - #39 extends
INFO  02:31:45,664 - #45 Predmet
INFO  02:31:45,664 - #34 {
INFO  02:31:45,664 - #45 int
INFO  02:31:45,664 - #45 r
INFO  02:31:45,664 - #13 ;
INFO  02:31:45,664 - #34 {
INFO  02:31:45,664 - #43 void
INFO  02:31:45,664 - #45 postaviTezinu
INFO  02:31:45,664 - #32 (
INFO  02:31:45,664 - #45 int
INFO  02:31:45,664 - #45 tezina
INFO  02:31:45,664 - #33 )
INFO  02:31:45,664 - #34 {
INFO  02:31:45,665 - #45 this
INFO  02:31:45,665 - #14 .
INFO  02:31:45,665 - #45 tezina
INFO  02:31:45,665 - #28 =
INFO  02:31:45,665 - #45 tezina
INFO  02:31:45,665 - #13 ;
INFO  02:31:45,665 - #45 vrsta
INFO  02:31:45,665 - #28 =
INFO  02:31:45,665 - #10 s
INFO  02:31:45,665 - #13 ;
INFO  02:31:45,665 - #35 }
INFO  02:31:45,665 - #43 void
INFO  02:31:45,665 - #45 postaviPoluprecnik
INFO  02:31:45,665 - #32 (
INFO  02:31:45,665 - #45 int
INFO  02:31:45,665 - #45 r
INFO  02:31:45,665 - #33 )
INFO  02:31:45,665 - #34 {
INFO  02:31:45,665 - #45 this
INFO  02:31:45,665 - #14 .
INFO  02:31:45,666 - #45 r
INFO  02:31:45,666 - #28 =
INFO  02:31:45,666 - #45 r
INFO  02:31:45,666 - #13 ;
INFO  02:31:45,666 - #45 postaviVrstu
INFO  02:31:45,666 - #32 (
INFO  02:31:45,666 - #10 s
INFO  02:31:45,666 - #33 )
INFO  02:31:45,666 - #13 ;
INFO  02:31:45,666 - #35 }
INFO  02:31:45,666 - #45 int
INFO  02:31:45,666 - #45 zapremina
INFO  02:31:45,666 - #32 (
INFO  02:31:45,666 - #33 )
INFO  02:31:45,666 - #45 int
INFO  02:31:45,667 - #45 z
INFO  02:31:45,667 - #13 ;
INFO  02:31:45,667 - #34 {
INFO  02:31:45,667 - #45 z
INFO  02:31:45,667 - #28 =
INFO  02:31:45,667 - #45 cinilac
INFO  02:31:45,667 - #13 ;
INFO  02:31:45,667 - #8 return
INFO  02:31:45,667 - #45 z
INFO  02:31:45,667 - #17 *
INFO  02:31:45,667 - #32 (
INFO  02:31:45,667 - #45 r
INFO  02:31:45,667 - #18 /
INFO  02:31:45,667 - #45 delilac
INFO  02:31:45,667 - #33 )
INFO  02:31:45,667 - #13 ;
INFO  02:31:45,667 - #35 }
INFO  02:31:45,668 - #35 }
INFO  02:31:45,668 - #35 }
INFO  02:31:45,668 - #38 class
INFO  02:31:45,668 - #45 Kvadar
INFO  02:31:45,668 - #39 extends
INFO  02:31:45,668 - #45 Predmet
INFO  02:31:45,668 - #34 {
INFO  02:31:45,668 - #45 int
INFO  02:31:45,668 - #45 a
INFO  02:31:45,668 - #12 ,
INFO  02:31:45,668 - #45 b
INFO  02:31:45,668 - #12 ,
INFO  02:31:45,668 - #45 c
INFO  02:31:45,668 - #13 ;
INFO  02:31:45,668 - #34 {
INFO  02:31:45,668 - #43 void
INFO  02:31:45,668 - #45 postaviTezinu
INFO  02:31:45,668 - #32 (
INFO  02:31:45,668 - #45 int
INFO  02:31:45,668 - #45 tezina
INFO  02:31:45,669 - #33 )
INFO  02:31:45,669 - #34 {
INFO  02:31:45,669 - #45 this
INFO  02:31:45,669 - #14 .
INFO  02:31:45,669 - #45 tezina
INFO  02:31:45,669 - #28 =
INFO  02:31:45,669 - #45 tezina
INFO  02:31:45,669 - #13 ;
INFO  02:31:45,669 - #45 vrsta
INFO  02:31:45,669 - #28 =
INFO  02:31:45,669 - #10 k
INFO  02:31:45,669 - #13 ;
INFO  02:31:45,669 - #35 }
INFO  02:31:45,669 - #43 void
INFO  02:31:45,669 - #45 postaviStranice
INFO  02:31:45,669 - #32 (
INFO  02:31:45,669 - #45 int
INFO  02:31:45,669 - #45 a
INFO  02:31:45,669 - #12 ,
INFO  02:31:45,669 - #45 int
INFO  02:31:45,669 - #45 b
INFO  02:31:45,669 - #12 ,
INFO  02:31:45,669 - #45 int
INFO  02:31:45,669 - #45 c
INFO  02:31:45,669 - #33 )
INFO  02:31:45,670 - #34 {
INFO  02:31:45,670 - #45 this
INFO  02:31:45,670 - #14 .
INFO  02:31:45,670 - #45 a
INFO  02:31:45,670 - #28 =
INFO  02:31:45,670 - #45 a
INFO  02:31:45,670 - #13 ;
INFO  02:31:45,670 - #45 this
INFO  02:31:45,670 - #14 .
INFO  02:31:45,670 - #45 b
INFO  02:31:45,670 - #28 =
INFO  02:31:45,670 - #45 b
INFO  02:31:45,670 - #13 ;
INFO  02:31:45,670 - #45 this
INFO  02:31:45,670 - #14 .
INFO  02:31:45,670 - #45 c
INFO  02:31:45,670 - #28 =
INFO  02:31:45,671 - #45 c
INFO  02:31:45,671 - #13 ;
INFO  02:31:45,671 - #45 vrsta
INFO  02:31:45,671 - #28 =
INFO  02:31:45,671 - #10 k
INFO  02:31:45,671 - #13 ;
INFO  02:31:45,671 - #35 }
INFO  02:31:45,671 - #45 int
INFO  02:31:45,671 - #45 zapremina
INFO  02:31:45,671 - #32 (
INFO  02:31:45,671 - #33 )
INFO  02:31:45,671 - #45 int
INFO  02:31:45,671 - #45 z
INFO  02:31:45,671 - #13 ;
INFO  02:31:45,671 - #34 {
INFO  02:31:45,671 - #45 z
INFO  02:31:45,671 - #28 =
INFO  02:31:45,671 - #45 a
INFO  02:31:45,671 - #17 *
INFO  02:31:45,671 - #45 b
INFO  02:31:45,671 - #17 *
INFO  02:31:45,672 - #45 c
INFO  02:31:45,672 - #13 ;
INFO  02:31:45,672 - #8 return
INFO  02:31:45,672 - #45 z
INFO  02:31:45,672 - #13 ;
INFO  02:31:45,672 - #35 }
INFO  02:31:45,672 - #35 }
INFO  02:31:45,672 - #35 }
INFO  02:31:45,672 - #45 int
INFO  02:31:45,672 - #45 zapreminaK
INFO  02:31:45,672 - #12 ,
INFO  02:31:45,672 - #45 zapreminaS
INFO  02:31:45,672 - #13 ;
INFO  02:31:45,672 - #45 int
INFO  02:31:45,672 - #45 tezinaK
INFO  02:31:45,672 - #12 ,
INFO  02:31:45,672 - #45 tezinaS
INFO  02:31:45,672 - #13 ;
INFO  02:31:45,673 - #34 {
INFO  02:31:45,673 - #43 void
INFO  02:31:45,673 - #45 ispis
INFO  02:31:45,673 - #32 (
INFO  02:31:45,673 - #45 Predmet
INFO  02:31:45,673 - #45 p
INFO  02:31:45,674 - #33 )
INFO  02:31:45,674 - #34 {
INFO  02:31:45,674 - #41 print
INFO  02:31:45,674 - #32 (
INFO  02:31:45,674 - #45 p
INFO  02:31:45,674 - #14 .
INFO  02:31:45,674 - #45 vrsta
INFO  02:31:45,674 - #33 )
INFO  02:31:45,674 - #13 ;
INFO  02:31:45,674 - #41 print
INFO  02:31:45,674 - #32 (
INFO  02:31:45,674 - #45 eol
INFO  02:31:45,674 - #33 )
INFO  02:31:45,674 - #13 ;
INFO  02:31:45,674 - #41 print
INFO  02:31:45,674 - #32 (
INFO  02:31:45,674 - #45 p
INFO  02:31:45,674 - #14 .
INFO  02:31:45,674 - #45 tezina
INFO  02:31:45,674 - #33 )
INFO  02:31:45,675 - #13 ;
INFO  02:31:45,675 - #35 }
INFO  02:31:45,675 - #43 void
INFO  02:31:45,675 - #45 main
INFO  02:31:45,675 - #32 (
INFO  02:31:45,675 - #33 )
INFO  02:31:45,675 - #45 Predmet
INFO  02:31:45,675 - #45 predmeti
INFO  02:31:45,675 - #36 [
INFO  02:31:45,675 - #37 ]
INFO  02:31:45,675 - #13 ;
INFO  02:31:45,675 - #45 int
INFO  02:31:45,675 - #45 i
INFO  02:31:45,675 - #13 ;
INFO  02:31:45,675 - #45 Sfera
INFO  02:31:45,675 - #45 s1
INFO  02:31:45,675 - #12 ,
INFO  02:31:45,675 - #45 s2
INFO  02:31:45,675 - #12 ,
INFO  02:31:45,675 - #45 s3
INFO  02:31:45,675 - #13 ;
INFO  02:31:45,675 - #45 Kvadar
INFO  02:31:45,675 - #45 k1
INFO  02:31:45,675 - #12 ,
INFO  02:31:45,675 - #45 k2
INFO  02:31:45,675 - #12 ,
INFO  02:31:45,675 - #45 k3
INFO  02:31:45,675 - #13 ;
INFO  02:31:45,675 - #45 int
INFO  02:31:45,676 - #45 t
INFO  02:31:45,676 - #13 ;
INFO  02:31:45,676 - #34 {
INFO  02:31:45,676 - #45 predmeti
INFO  02:31:45,676 - #28 =
INFO  02:31:45,676 - #31 new
INFO  02:31:45,676 - #45 Predmet
INFO  02:31:45,676 - #36 [
INFO  02:31:45,676 - #9 6
INFO  02:31:45,676 - #37 ]
INFO  02:31:45,676 - #13 ;
INFO  02:31:45,676 - #45 s1
INFO  02:31:45,676 - #28 =
INFO  02:31:45,676 - #31 new
INFO  02:31:45,676 - #45 Sfera
INFO  02:31:45,676 - #13 ;
INFO  02:31:45,676 - #45 s2
INFO  02:31:45,676 - #28 =
INFO  02:31:45,676 - #31 new
INFO  02:31:45,676 - #45 Sfera
INFO  02:31:45,676 - #13 ;
INFO  02:31:45,676 - #45 s3
INFO  02:31:45,676 - #28 =
INFO  02:31:45,676 - #31 new
INFO  02:31:45,676 - #45 Sfera
INFO  02:31:45,676 - #13 ;
INFO  02:31:45,676 - #45 k1
INFO  02:31:45,677 - #28 =
INFO  02:31:45,677 - #31 new
INFO  02:31:45,677 - #45 Kvadar
INFO  02:31:45,677 - #13 ;
INFO  02:31:45,677 - #45 k2
INFO  02:31:45,677 - #28 =
INFO  02:31:45,677 - #31 new
INFO  02:31:45,677 - #45 Kvadar
INFO  02:31:45,677 - #13 ;
INFO  02:31:45,677 - #45 k3
INFO  02:31:45,677 - #28 =
INFO  02:31:45,677 - #31 new
INFO  02:31:45,677 - #45 Kvadar
INFO  02:31:45,677 - #13 ;
INFO  02:31:45,677 - #45 s1
INFO  02:31:45,677 - #14 .
INFO  02:31:45,677 - #45 postaviPoluprecnik
INFO  02:31:45,677 - #32 (
INFO  02:31:45,677 - #9 1
INFO  02:31:45,677 - #33 )
INFO  02:31:45,677 - #13 ;
INFO  02:31:45,677 - #45 s2
INFO  02:31:45,677 - #14 .
INFO  02:31:45,677 - #45 postaviPoluprecnik
INFO  02:31:45,677 - #32 (
INFO  02:31:45,678 - #9 2
INFO  02:31:45,678 - #33 )
INFO  02:31:45,678 - #13 ;
INFO  02:31:45,678 - #45 s3
INFO  02:31:45,678 - #14 .
INFO  02:31:45,678 - #45 postaviPoluprecnik
INFO  02:31:45,678 - #32 (
INFO  02:31:45,678 - #9 3
INFO  02:31:45,678 - #33 )
INFO  02:31:45,678 - #13 ;
INFO  02:31:45,678 - #45 k1
INFO  02:31:45,678 - #14 .
INFO  02:31:45,678 - #45 postaviStranice
INFO  02:31:45,678 - #32 (
INFO  02:31:45,678 - #9 1
INFO  02:31:45,678 - #12 ,
INFO  02:31:45,678 - #9 2
INFO  02:31:45,678 - #12 ,
INFO  02:31:45,678 - #9 3
INFO  02:31:45,678 - #33 )
INFO  02:31:45,678 - #13 ;
INFO  02:31:45,678 - #45 k2
INFO  02:31:45,678 - #14 .
INFO  02:31:45,678 - #45 postaviStranice
INFO  02:31:45,678 - #32 (
INFO  02:31:45,679 - #9 2
INFO  02:31:45,679 - #12 ,
INFO  02:31:45,679 - #9 3
INFO  02:31:45,679 - #12 ,
INFO  02:31:45,679 - #9 4
INFO  02:31:45,679 - #33 )
INFO  02:31:45,679 - #13 ;
INFO  02:31:45,679 - #45 k3
INFO  02:31:45,679 - #14 .
INFO  02:31:45,679 - #45 postaviStranice
INFO  02:31:45,679 - #32 (
INFO  02:31:45,679 - #9 3
INFO  02:31:45,679 - #12 ,
INFO  02:31:45,679 - #9 4
INFO  02:31:45,679 - #12 ,
INFO  02:31:45,679 - #9 5
INFO  02:31:45,679 - #33 )
INFO  02:31:45,679 - #13 ;
INFO  02:31:45,679 - #45 predmeti
INFO  02:31:45,679 - #36 [
INFO  02:31:45,679 - #9 0
INFO  02:31:45,679 - #37 ]
INFO  02:31:45,679 - #28 =
INFO  02:31:45,680 - #45 s1
INFO  02:31:45,680 - #13 ;
INFO  02:31:45,680 - #45 predmeti
INFO  02:31:45,680 - #36 [
INFO  02:31:45,680 - #9 2
INFO  02:31:45,680 - #37 ]
INFO  02:31:45,680 - #28 =
INFO  02:31:45,680 - #45 s2
INFO  02:31:45,680 - #13 ;
INFO  02:31:45,680 - #45 predmeti
INFO  02:31:45,680 - #36 [
INFO  02:31:45,680 - #9 4
INFO  02:31:45,680 - #37 ]
INFO  02:31:45,680 - #28 =
INFO  02:31:45,680 - #45 s3
INFO  02:31:45,680 - #13 ;
INFO  02:31:45,680 - #45 predmeti
INFO  02:31:45,680 - #36 [
INFO  02:31:45,680 - #9 1
INFO  02:31:45,680 - #37 ]
INFO  02:31:45,680 - #28 =
INFO  02:31:45,680 - #45 k1
INFO  02:31:45,680 - #13 ;
INFO  02:31:45,680 - #45 predmeti
INFO  02:31:45,680 - #36 [
INFO  02:31:45,680 - #9 3
INFO  02:31:45,680 - #37 ]
INFO  02:31:45,680 - #28 =
INFO  02:31:45,680 - #45 k2
INFO  02:31:45,680 - #13 ;
INFO  02:31:45,680 - #45 predmeti
INFO  02:31:45,680 - #36 [
INFO  02:31:45,680 - #9 5
INFO  02:31:45,680 - #37 ]
INFO  02:31:45,681 - #28 =
INFO  02:31:45,681 - #45 k3
INFO  02:31:45,681 - #13 ;
INFO  02:31:45,681 - #42 read
INFO  02:31:45,681 - #32 (
INFO  02:31:45,681 - #45 t
INFO  02:31:45,681 - #33 )
INFO  02:31:45,681 - #13 ;
INFO  02:31:45,681 - #45 i
INFO  02:31:45,681 - #28 =
INFO  02:31:45,681 - #9 0
INFO  02:31:45,681 - #13 ;
INFO  02:31:45,681 - #5 do
INFO  02:31:45,681 - #34 {
INFO  02:31:45,682 - #45 predmeti
INFO  02:31:45,682 - #36 [
INFO  02:31:45,682 - #45 i
INFO  02:31:45,682 - #37 ]
INFO  02:31:45,682 - #14 .
INFO  02:31:45,682 - #45 postaviTezinu
INFO  02:31:45,682 - #32 (
INFO  02:31:45,682 - #45 t
INFO  02:31:45,682 - #33 )
INFO  02:31:45,682 - #13 ;
INFO  02:31:45,682 - #45 i
INFO  02:31:45,682 - #29 ++
INFO  02:31:45,682 - #13 ;
INFO  02:31:45,682 - #35 }
INFO  02:31:45,682 - #6 while
INFO  02:31:45,682 - #32 (
INFO  02:31:45,683 - #45 i
INFO  02:31:45,683 - #23 <
INFO  02:31:45,683 - #9 6
INFO  02:31:45,683 - #33 )
INFO  02:31:45,684 - #13 ;
INFO  02:31:45,684 - #45 i
INFO  02:31:45,684 - #28 =
INFO  02:31:45,684 - #9 0
INFO  02:31:45,684 - #13 ;
INFO  02:31:45,684 - #45 zapreminaS
INFO  02:31:45,684 - #28 =
INFO  02:31:45,684 - #9 0
INFO  02:31:45,684 - #13 ;
INFO  02:31:45,684 - #45 tezinaS
INFO  02:31:45,684 - #28 =
INFO  02:31:45,684 - #9 0
INFO  02:31:45,684 - #13 ;
INFO  02:31:45,684 - #5 do
INFO  02:31:45,684 - #34 {
INFO  02:31:45,684 - #45 i
INFO  02:31:45,684 - #29 ++
INFO  02:31:45,684 - #13 ;
INFO  02:31:45,684 - #2 if
INFO  02:31:45,684 - #32 (
INFO  02:31:45,685 - #45 i
INFO  02:31:45,685 - #19 %
INFO  02:31:45,685 - #9 2
INFO  02:31:45,685 - #20 ==
INFO  02:31:45,685 - #9 0
INFO  02:31:45,685 - #33 )
INFO  02:31:45,686 - #7 continue
INFO  02:31:45,686 - #13 ;
INFO  02:31:45,686 - #45 zapreminaS
INFO  02:31:45,686 - #28 =
INFO  02:31:45,686 - #45 zapreminaS
INFO  02:31:45,686 - #15 +
INFO  02:31:45,686 - #45 predmeti
INFO  02:31:45,687 - #36 [
INFO  02:31:45,687 - #45 i
INFO  02:31:45,687 - #16 -
INFO  02:31:45,687 - #9 1
INFO  02:31:45,688 - #37 ]
INFO  02:31:45,688 - #14 .
INFO  02:31:45,688 - #45 zapremina
INFO  02:31:45,688 - #32 (
INFO  02:31:45,688 - #33 )
INFO  02:31:45,688 - #13 ;
INFO  02:31:45,688 - #45 tezinaS
INFO  02:31:45,688 - #28 =
INFO  02:31:45,688 - #45 tezinaS
INFO  02:31:45,688 - #15 +
INFO  02:31:45,688 - #45 predmeti
INFO  02:31:45,688 - #36 [
INFO  02:31:45,688 - #45 i
INFO  02:31:45,688 - #16 -
INFO  02:31:45,688 - #9 1
INFO  02:31:45,688 - #37 ]
INFO  02:31:45,688 - #14 .
INFO  02:31:45,688 - #45 Q
INFO  02:31:45,688 - #32 (
INFO  02:31:45,688 - #33 )
INFO  02:31:45,688 - #13 ;
INFO  02:31:45,689 - #45 ispis
INFO  02:31:45,689 - #32 (
INFO  02:31:45,689 - #45 predmeti
INFO  02:31:45,689 - #36 [
INFO  02:31:45,689 - #45 i
INFO  02:31:45,689 - #16 -
INFO  02:31:45,689 - #9 1
INFO  02:31:45,689 - #37 ]
INFO  02:31:45,689 - #33 )
INFO  02:31:45,689 - #13 ;
INFO  02:31:45,689 - #35 }
INFO  02:31:45,689 - #6 while
INFO  02:31:45,689 - #32 (
INFO  02:31:45,689 - #45 i
INFO  02:31:45,689 - #23 <
INFO  02:31:45,689 - #9 6
INFO  02:31:45,689 - #33 )
INFO  02:31:45,689 - #13 ;
INFO  02:31:45,689 - #45 i
INFO  02:31:45,689 - #28 =
INFO  02:31:45,689 - #9 0
INFO  02:31:45,689 - #13 ;
INFO  02:31:45,689 - #45 zapreminaK
INFO  02:31:45,689 - #28 =
INFO  02:31:45,689 - #9 0
INFO  02:31:45,689 - #13 ;
INFO  02:31:45,689 - #45 tezinaK
INFO  02:31:45,689 - #28 =
INFO  02:31:45,689 - #9 0
INFO  02:31:45,689 - #13 ;
INFO  02:31:45,689 - #5 do
INFO  02:31:45,689 - #34 {
INFO  02:31:45,689 - #45 i
INFO  02:31:45,689 - #29 ++
INFO  02:31:45,689 - #13 ;
INFO  02:31:45,689 - #2 if
INFO  02:31:45,689 - #32 (
INFO  02:31:45,690 - #45 i
INFO  02:31:45,690 - #19 %
INFO  02:31:45,690 - #9 2
INFO  02:31:45,690 - #20 ==
INFO  02:31:45,690 - #9 1
INFO  02:31:45,690 - #33 )
INFO  02:31:45,690 - #7 continue
INFO  02:31:45,690 - #13 ;
INFO  02:31:45,690 - #45 zapreminaK
INFO  02:31:45,690 - #28 =
INFO  02:31:45,690 - #45 zapreminaK
INFO  02:31:45,690 - #15 +
INFO  02:31:45,690 - #45 predmeti
INFO  02:31:45,690 - #36 [
INFO  02:31:45,690 - #45 i
INFO  02:31:45,690 - #16 -
INFO  02:31:45,690 - #9 1
INFO  02:31:45,690 - #37 ]
INFO  02:31:45,690 - #14 .
INFO  02:31:45,690 - #45 zapremina
INFO  02:31:45,690 - #32 (
INFO  02:31:45,690 - #33 )
INFO  02:31:45,690 - #13 ;
INFO  02:31:45,690 - #45 tezinaK
INFO  02:31:45,690 - #28 =
INFO  02:31:45,690 - #45 tezinaK
INFO  02:31:45,690 - #15 +
INFO  02:31:45,690 - #45 predmeti
INFO  02:31:45,690 - #36 [
INFO  02:31:45,690 - #45 i
INFO  02:31:45,690 - #16 -
INFO  02:31:45,690 - #9 1
INFO  02:31:45,691 - #37 ]
INFO  02:31:45,691 - #14 .
INFO  02:31:45,691 - #45 Q
INFO  02:31:45,691 - #32 (
INFO  02:31:45,691 - #33 )
INFO  02:31:45,691 - #13 ;
INFO  02:31:45,691 - #45 ispis
INFO  02:31:45,691 - #32 (
INFO  02:31:45,691 - #45 predmeti
INFO  02:31:45,691 - #36 [
INFO  02:31:45,691 - #45 i
INFO  02:31:45,691 - #16 -
INFO  02:31:45,691 - #9 1
INFO  02:31:45,691 - #37 ]
INFO  02:31:45,691 - #33 )
INFO  02:31:45,691 - #13 ;
INFO  02:31:45,691 - #35 }
INFO  02:31:45,691 - #6 while
INFO  02:31:45,691 - #32 (
INFO  02:31:45,691 - #45 i
INFO  02:31:45,691 - #23 <
INFO  02:31:45,691 - #9 6
INFO  02:31:45,691 - #33 )
INFO  02:31:45,691 - #13 ;
INFO  02:31:45,691 - #41 print
INFO  02:31:45,691 - #32 (
INFO  02:31:45,691 - #45 zapreminaS
INFO  02:31:45,691 - #33 )
INFO  02:31:45,691 - #13 ;
INFO  02:31:45,691 - #41 print
INFO  02:31:45,691 - #32 (
INFO  02:31:45,691 - #45 eol
INFO  02:31:45,691 - #33 )
INFO  02:31:45,691 - #13 ;
INFO  02:31:45,691 - #41 print
INFO  02:31:45,691 - #32 (
INFO  02:31:45,692 - #45 zapreminaK
INFO  02:31:45,692 - #33 )
INFO  02:31:45,692 - #13 ;
INFO  02:31:45,692 - #41 print
INFO  02:31:45,692 - #32 (
INFO  02:31:45,692 - #45 eol
INFO  02:31:45,692 - #33 )
INFO  02:31:45,692 - #13 ;
INFO  02:31:45,692 - #41 print
INFO  02:31:45,692 - #32 (
INFO  02:31:45,692 - #45 tezinaS
INFO  02:31:45,692 - #33 )
INFO  02:31:45,692 - #13 ;
INFO  02:31:45,692 - #41 print
INFO  02:31:45,692 - #32 (
INFO  02:31:45,692 - #45 eol
INFO  02:31:45,692 - #33 )
INFO  02:31:45,692 - #13 ;
INFO  02:31:45,692 - #41 print
INFO  02:31:45,692 - #32 (
INFO  02:31:45,692 - #45 tezinaK
INFO  02:31:45,692 - #33 )
INFO  02:31:45,692 - #13 ;
INFO  02:31:45,692 - #41 print
INFO  02:31:45,692 - #32 (
INFO  02:31:45,692 - #45 eol
INFO  02:31:45,692 - #33 )
INFO  02:31:45,692 - #13 ;
INFO  02:31:45,692 - #35 }
INFO  02:31:45,692 - #35 }
INFO  02:31:45,693 - ***Abstract tree****
INFO  02:31:45,693 - #0
DEBUG 02:31:45,702 - program name
DEBUG 02:31:45,702 - found constant with value 4of type 1
DEBUG 02:31:45,703 - found constant with value 3of type 1
DEBUG 02:31:45,703 - ClassBegin
DEBUG 02:31:45,703 - Variable with name tezina has the address of 1
DEBUG 02:31:45,703 - Variable with name vrsta has the address of 2
DEBUG 02:31:45,704 - designator simple at line 12: this
DEBUG 02:31:45,704 - designator simple at line 12: tezina
DEBUG 02:31:45,704 - designator simple at line 12: tezina
DEBUG 02:31:45,705 - term SingleFactorterm is type 1
DEBUG 02:31:45,705 - exprWithNoMinus
DEBUG 02:31:45,705 - designator simple at line 13: tezina
DEBUG 02:31:45,705 - found constant with value 0of type 1
DEBUG 02:31:45,705 - constant factor is type 1
DEBUG 02:31:45,705 - term SingleFactorterm is type 1
DEBUG 02:31:45,705 - exprWithNoMinus
DEBUG 02:31:45,705 - designator simple at line 15: zapremina
DEBUG 02:31:45,708 - designator simple at line 15: tezina
DEBUG 02:31:45,708 - term element is type 1
DEBUG 02:31:45,708 - term list single is type 1
DEBUG 02:31:45,708 - term MultiFactorTerm is type 1
DEBUG 02:31:45,708 - exprWithNoMinus
DEBUG 02:31:45,708 - designator simple at line 16: this
DEBUG 02:31:45,708 - designator simple at line 16: vrsta
DEBUG 02:31:45,708 - designator simple at line 16: vrsta
DEBUG 02:31:45,708 - term SingleFactorterm is type 2
DEBUG 02:31:45,708 - exprWithNoMinus
DEBUG 02:31:45,708 - class decl end
DEBUG 02:31:45,708 - class decl 1
DEBUG 02:31:45,708 - derived ClassBegin
DEBUG 02:31:45,709 - Variable with name r has the address of 1
DEBUG 02:31:45,709 - designator simple at line 24: this
DEBUG 02:31:45,709 - designator simple at line 24: tezina
DEBUG 02:31:45,709 - designator simple at line 24: tezina
DEBUG 02:31:45,709 - term SingleFactorterm is type 1
DEBUG 02:31:45,709 - exprWithNoMinus
DEBUG 02:31:45,709 - designator simple at line 24: vrsta
DEBUG 02:31:45,709 - found constant with value *****of type 2
DEBUG 02:31:45,709 - found constant with value 115of type 2
DEBUG 02:31:45,709 - constant factor is type 2
DEBUG 02:31:45,709 - term SingleFactorterm is type 2
DEBUG 02:31:45,710 - exprWithNoMinus
DEBUG 02:31:45,710 - designator simple at line 25: this
DEBUG 02:31:45,710 - designator simple at line 25: r
DEBUG 02:31:45,710 - designator simple at line 25: r
DEBUG 02:31:45,710 - term SingleFactorterm is type 1
DEBUG 02:31:45,710 - exprWithNoMinus
DEBUG 02:31:45,710 - designator simple at line 26: postaviVrstu
DEBUG 02:31:45,710 - found constant with value *****of type 2
DEBUG 02:31:45,710 - found constant with value 115of type 2
DEBUG 02:31:45,710 - constant factor is type 2
DEBUG 02:31:45,710 - term SingleFactorterm is type 2
DEBUG 02:31:45,710 - exprWithNoMinus
DEBUG 02:31:45,710 - Variable with name z has the address of 2
DEBUG 02:31:45,710 - designator simple at line 31: z
DEBUG 02:31:45,711 - designator simple at line 31: cinilac
DEBUG 02:31:45,711 - term SingleFactorterm is type 1
DEBUG 02:31:45,711 - exprWithNoMinus
DEBUG 02:31:45,711 - designator simple at line 32: z
DEBUG 02:31:45,711 - designator simple at line 32: r
DEBUG 02:31:45,711 - designator simple at line 32: delilac
DEBUG 02:31:45,711 - term element is type 1
DEBUG 02:31:45,711 - term list single is type 1
DEBUG 02:31:45,711 - term MultiFactorTerm is type 1
DEBUG 02:31:45,711 - exprWithNoMinus
DEBUG 02:31:45,711 - term element is type 1
DEBUG 02:31:45,711 - term list single is type 1
DEBUG 02:31:45,711 - term MultiFactorTerm is type 1
DEBUG 02:31:45,711 - exprWithNoMinus
DEBUG 02:31:45,711 - class decl end
DEBUG 02:31:45,711 - class decl 1
DEBUG 02:31:45,711 - derived ClassBegin
DEBUG 02:31:45,711 - Variable with name a has the address of 1
DEBUG 02:31:45,711 - Variable with name b has the address of 2
DEBUG 02:31:45,711 - Variable with name c has the address of 3
DEBUG 02:31:45,712 - designator simple at line 41: this
DEBUG 02:31:45,712 - designator simple at line 41: tezina
DEBUG 02:31:45,712 - designator simple at line 41: tezina
DEBUG 02:31:45,712 - term SingleFactorterm is type 1
DEBUG 02:31:45,712 - exprWithNoMinus
DEBUG 02:31:45,712 - designator simple at line 41: vrsta
DEBUG 02:31:45,712 - found constant with value *****of type 2
DEBUG 02:31:45,712 - found constant with value 107of type 2
DEBUG 02:31:45,712 - constant factor is type 2
DEBUG 02:31:45,712 - term SingleFactorterm is type 2
DEBUG 02:31:45,712 - exprWithNoMinus
DEBUG 02:31:45,712 - designator simple at line 42: this
DEBUG 02:31:45,712 - designator simple at line 42: a
DEBUG 02:31:45,712 - designator simple at line 42: a
DEBUG 02:31:45,712 - term SingleFactorterm is type 1
DEBUG 02:31:45,712 - exprWithNoMinus
DEBUG 02:31:45,712 - designator simple at line 42: this
DEBUG 02:31:45,712 - designator simple at line 42: b
DEBUG 02:31:45,712 - designator simple at line 42: b
DEBUG 02:31:45,712 - term SingleFactorterm is type 1
DEBUG 02:31:45,712 - exprWithNoMinus
DEBUG 02:31:45,712 - designator simple at line 42: this
DEBUG 02:31:45,712 - designator simple at line 42: c
DEBUG 02:31:45,712 - designator simple at line 42: c
DEBUG 02:31:45,712 - term SingleFactorterm is type 1
DEBUG 02:31:45,712 - exprWithNoMinus
DEBUG 02:31:45,712 - designator simple at line 42: vrsta
DEBUG 02:31:45,712 - found constant with value *****of type 2
DEBUG 02:31:45,712 - found constant with value 107of type 2
DEBUG 02:31:45,712 - constant factor is type 2
DEBUG 02:31:45,712 - term SingleFactorterm is type 2
DEBUG 02:31:45,712 - exprWithNoMinus
ERROR 02:31:45,712 - Identifier z already used.
DEBUG 02:31:45,712 - designator simple at line 46: z
DEBUG 02:31:45,712 - designator simple at line 46: a
DEBUG 02:31:45,713 - designator simple at line 46: b
DEBUG 02:31:45,713 - term element is type 1
DEBUG 02:31:45,713 - term list single is type 1
DEBUG 02:31:45,713 - designator simple at line 46: c
DEBUG 02:31:45,713 - term element is type 1
DEBUG 02:31:45,713 - term list multiple is type 1
DEBUG 02:31:45,713 - term MultiFactorTerm is type 1
DEBUG 02:31:45,713 - exprWithNoMinus
DEBUG 02:31:45,713 - designator simple at line 47: z
DEBUG 02:31:45,713 - term SingleFactorterm is type 1
DEBUG 02:31:45,713 - exprWithNoMinus
DEBUG 02:31:45,713 - class decl end
DEBUG 02:31:45,713 - class decl 1
DEBUG 02:31:45,713 - Variable with name zapreminaK has the address of 1
DEBUG 02:31:45,713 - Variable with name zapreminaS has the address of 2
DEBUG 02:31:45,713 - Variable with name tezinaK has the address of 3
DEBUG 02:31:45,713 - Variable with name tezinaS has the address of 4
DEBUG 02:31:45,713 - program begin
DEBUG 02:31:45,714 - designator simple at line 58: p
DEBUG 02:31:45,714 - designator simple at line 58: vrsta
DEBUG 02:31:45,714 - term SingleFactorterm is type 2
DEBUG 02:31:45,714 - exprWithNoMinus
DEBUG 02:31:45,714 - print statement has arg of type 2
DEBUG 02:31:45,714 - designator simple at line 59: eol
DEBUG 02:31:45,714 - term SingleFactorterm is type 2
DEBUG 02:31:45,714 - exprWithNoMinus
DEBUG 02:31:45,714 - print statement has arg of type 2
DEBUG 02:31:45,714 - designator simple at line 60: p
DEBUG 02:31:45,714 - designator simple at line 60: tezina
DEBUG 02:31:45,714 - term SingleFactorterm is type 1
DEBUG 02:31:45,714 - exprWithNoMinus
DEBUG 02:31:45,714 - print statement has arg of type 1
DEBUG 02:31:45,714 - Variable with name i has the address of 1
DEBUG 02:31:45,714 - Variable with name s1 has the address of 2
DEBUG 02:31:45,714 - Variable with name s2 has the address of 3
DEBUG 02:31:45,714 - Variable with name s3 has the address of 4
DEBUG 02:31:45,714 - Variable with name k1 has the address of 5
DEBUG 02:31:45,714 - Variable with name k2 has the address of 6
DEBUG 02:31:45,714 - Variable with name k3 has the address of 7
DEBUG 02:31:45,714 - Variable with name t has the address of 8
DEBUG 02:31:45,714 - designator simple at line 66: predmeti
DEBUG 02:31:45,714 - found constant with value 6of type 1
DEBUG 02:31:45,714 - constant factor is type 1
DEBUG 02:31:45,714 - term SingleFactorterm is type 1
DEBUG 02:31:45,714 - exprWithNoMinus
DEBUG 02:31:45,714 - term SingleFactorterm is type 3
DEBUG 02:31:45,714 - exprWithNoMinus
DEBUG 02:31:45,714 - designator simple at line 67: s1
DEBUG 02:31:45,714 - term SingleFactorterm is type 4
DEBUG 02:31:45,714 - exprWithNoMinus
DEBUG 02:31:45,714 - designator simple at line 68: s2
DEBUG 02:31:45,715 - term SingleFactorterm is type 4
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 69: s3
DEBUG 02:31:45,715 - term SingleFactorterm is type 4
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 71: k1
DEBUG 02:31:45,715 - term SingleFactorterm is type 4
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 72: k2
DEBUG 02:31:45,715 - term SingleFactorterm is type 4
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 73: k3
DEBUG 02:31:45,715 - term SingleFactorterm is type 4
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 75: s1
DEBUG 02:31:45,715 - designator simple at line 75: postaviPoluprecnik
DEBUG 02:31:45,715 - found constant with value 1of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 76: s2
DEBUG 02:31:45,715 - designator simple at line 76: postaviPoluprecnik
DEBUG 02:31:45,715 - found constant with value 2of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 77: s3
DEBUG 02:31:45,715 - designator simple at line 77: postaviPoluprecnik
DEBUG 02:31:45,715 - found constant with value 3of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 79: k1
DEBUG 02:31:45,715 - designator simple at line 79: postaviStranice
DEBUG 02:31:45,715 - found constant with value 1of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - found constant with value 2of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - found constant with value 3of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,715 - designator simple at line 80: k2
DEBUG 02:31:45,715 - designator simple at line 80: postaviStranice
DEBUG 02:31:45,715 - found constant with value 2of type 1
DEBUG 02:31:45,715 - constant factor is type 1
DEBUG 02:31:45,715 - term SingleFactorterm is type 1
DEBUG 02:31:45,715 - exprWithNoMinus
DEBUG 02:31:45,716 - found constant with value 3of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - found constant with value 4of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - designator simple at line 81: k3
DEBUG 02:31:45,716 - designator simple at line 81: postaviStranice
DEBUG 02:31:45,716 - found constant with value 3of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - found constant with value 4of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - found constant with value 5of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - found constant with value 0of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - designator simple at line 83: s1
DEBUG 02:31:45,716 - term SingleFactorterm is type 4
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - found constant with value 2of type 1
DEBUG 02:31:45,716 - constant factor is type 1
DEBUG 02:31:45,716 - term SingleFactorterm is type 1
DEBUG 02:31:45,716 - exprWithNoMinus
DEBUG 02:31:45,716 - designator simple at line 84: s2
DEBUG 02:31:45,717 - term SingleFactorterm is type 4
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - found constant with value 4of type 1
DEBUG 02:31:45,717 - constant factor is type 1
DEBUG 02:31:45,717 - term SingleFactorterm is type 1
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 85: s3
DEBUG 02:31:45,717 - term SingleFactorterm is type 4
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - found constant with value 1of type 1
DEBUG 02:31:45,717 - constant factor is type 1
DEBUG 02:31:45,717 - term SingleFactorterm is type 1
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 86: k1
DEBUG 02:31:45,717 - term SingleFactorterm is type 4
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - found constant with value 3of type 1
DEBUG 02:31:45,717 - constant factor is type 1
DEBUG 02:31:45,717 - term SingleFactorterm is type 1
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 87: k2
DEBUG 02:31:45,717 - term SingleFactorterm is type 4
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - found constant with value 5of type 1
DEBUG 02:31:45,717 - constant factor is type 1
DEBUG 02:31:45,717 - term SingleFactorterm is type 1
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 88: k3
DEBUG 02:31:45,717 - term SingleFactorterm is type 4
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 90: t
DEBUG 02:31:45,717 - designator simple at line 91: i
DEBUG 02:31:45,717 - found constant with value 0of type 1
DEBUG 02:31:45,717 - constant factor is type 1
DEBUG 02:31:45,717 - term SingleFactorterm is type 1
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 94: i
DEBUG 02:31:45,717 - term SingleFactorterm is type 1
DEBUG 02:31:45,717 - exprWithNoMinus
DEBUG 02:31:45,717 - designator simple at line 94: postaviTezinu
ERROR 02:31:45,718 - Identifier t was not defined.
ERROR 02:31:45,718 - designator obj is null in rvaluedesignator1  na liniji 94
ERROR 02:31:45,718 - obj is null
DEBUG 02:31:45,718 - exprWithNoMinus
