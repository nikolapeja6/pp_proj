INFO  02:25:45,021 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  02:25:45,086 - #40 program
INFO  02:25:45,086 - #45 test_303
INFO  02:25:45,086 - #44 const
INFO  02:25:45,086 - #45 int
INFO  02:25:45,086 - #45 cinilac
INFO  02:25:45,086 - #28 =
INFO  02:25:45,086 - #9 4
INFO  02:25:45,086 - #12 ,
INFO  02:25:45,087 - #45 delilac
INFO  02:25:45,087 - #28 =
INFO  02:25:45,087 - #9 3
INFO  02:25:45,087 - #13 ;
INFO  02:25:45,087 - #38 class
INFO  02:25:45,088 - #45 Predmet
INFO  02:25:45,088 - #34 {
INFO  02:25:45,088 - #45 int
INFO  02:25:45,088 - #45 tezina
INFO  02:25:45,088 - #13 ;
INFO  02:25:45,089 - #45 char
INFO  02:25:45,089 - #45 vrsta
INFO  02:25:45,089 - #13 ;
INFO  02:25:45,089 - #34 {
INFO  02:25:45,090 - #43 void
INFO  02:25:45,090 - #45 postaviTezinu
INFO  02:25:45,091 - #32 (
INFO  02:25:45,091 - #45 int
INFO  02:25:45,091 - #45 tezina
INFO  02:25:45,091 - #33 )
INFO  02:25:45,092 - #34 {
INFO  02:25:45,092 - #45 this
INFO  02:25:45,093 - #14 .
INFO  02:25:45,093 - #45 tezina
INFO  02:25:45,093 - #28 =
INFO  02:25:45,093 - #45 tezina
INFO  02:25:45,093 - #13 ;
INFO  02:25:45,094 - #35 }
INFO  02:25:45,095 - #43 void
INFO  02:25:45,096 - #45 ucitajTezinu
INFO  02:25:45,096 - #32 (
INFO  02:25:45,096 - #33 )
INFO  02:25:45,096 - #34 {
INFO  02:25:45,096 - #42 read
INFO  02:25:45,096 - #32 (
INFO  02:25:45,096 - #45 tezina
INFO  02:25:45,096 - #33 )
INFO  02:25:45,096 - #13 ;
INFO  02:25:45,096 - #35 }
INFO  02:25:45,096 - #45 int
INFO  02:25:45,097 - #45 zapremina
INFO  02:25:45,097 - #32 (
INFO  02:25:45,097 - #33 )
INFO  02:25:45,097 - #34 {
INFO  02:25:45,097 - #8 return
INFO  02:25:45,097 - #9 0
INFO  02:25:45,097 - #13 ;
INFO  02:25:45,097 - #35 }
INFO  02:25:45,097 - #45 int
INFO  02:25:45,097 - #45 Q
INFO  02:25:45,097 - #32 (
INFO  02:25:45,097 - #33 )
INFO  02:25:45,097 - #34 {
INFO  02:25:45,097 - #8 return
INFO  02:25:45,097 - #45 zapremina
INFO  02:25:45,097 - #32 (
INFO  02:25:45,098 - #33 )
INFO  02:25:45,098 - #17 *
INFO  02:25:45,098 - #45 tezina
INFO  02:25:45,098 - #13 ;
INFO  02:25:45,099 - #35 }
INFO  02:25:45,099 - #43 void
INFO  02:25:45,099 - #45 postaviVrstu
INFO  02:25:45,099 - #32 (
INFO  02:25:45,099 - #45 char
INFO  02:25:45,099 - #45 vrsta
INFO  02:25:45,099 - #33 )
INFO  02:25:45,099 - #34 {
INFO  02:25:45,099 - #45 this
INFO  02:25:45,099 - #14 .
INFO  02:25:45,099 - #45 vrsta
INFO  02:25:45,099 - #28 =
INFO  02:25:45,099 - #45 vrsta
INFO  02:25:45,099 - #13 ;
INFO  02:25:45,099 - #35 }
INFO  02:25:45,099 - #35 }
INFO  02:25:45,100 - #35 }
INFO  02:25:45,100 - #38 class
INFO  02:25:45,100 - #45 Sfera
INFO  02:25:45,100 - #39 extends
INFO  02:25:45,101 - #45 Predmet
INFO  02:25:45,101 - #34 {
INFO  02:25:45,101 - #45 int
INFO  02:25:45,101 - #45 r
INFO  02:25:45,101 - #13 ;
INFO  02:25:45,101 - #34 {
INFO  02:25:45,101 - #43 void
INFO  02:25:45,101 - #45 postaviTezinu
INFO  02:25:45,101 - #32 (
INFO  02:25:45,101 - #45 int
INFO  02:25:45,101 - #45 tezina
INFO  02:25:45,101 - #33 )
INFO  02:25:45,101 - #34 {
INFO  02:25:45,101 - #45 this
INFO  02:25:45,101 - #14 .
INFO  02:25:45,101 - #45 tezina
INFO  02:25:45,101 - #28 =
INFO  02:25:45,101 - #45 tezina
INFO  02:25:45,101 - #13 ;
INFO  02:25:45,101 - #45 vrsta
INFO  02:25:45,101 - #28 =
INFO  02:25:45,101 - #10 s
INFO  02:25:45,102 - #13 ;
INFO  02:25:45,102 - #35 }
INFO  02:25:45,102 - #43 void
INFO  02:25:45,102 - #45 postaviPoluprecnik
INFO  02:25:45,102 - #32 (
INFO  02:25:45,102 - #45 int
INFO  02:25:45,102 - #45 r
INFO  02:25:45,102 - #33 )
INFO  02:25:45,102 - #34 {
INFO  02:25:45,102 - #45 this
INFO  02:25:45,102 - #14 .
INFO  02:25:45,102 - #45 r
INFO  02:25:45,102 - #28 =
INFO  02:25:45,102 - #45 r
INFO  02:25:45,102 - #13 ;
INFO  02:25:45,102 - #45 postaviVrstu
INFO  02:25:45,102 - #32 (
INFO  02:25:45,103 - #10 s
INFO  02:25:45,103 - #33 )
INFO  02:25:45,103 - #13 ;
INFO  02:25:45,103 - #35 }
INFO  02:25:45,103 - #45 int
INFO  02:25:45,103 - #45 zapremina
INFO  02:25:45,103 - #32 (
INFO  02:25:45,103 - #33 )
INFO  02:25:45,103 - #45 int
INFO  02:25:45,103 - #45 z
INFO  02:25:45,103 - #13 ;
INFO  02:25:45,103 - #34 {
INFO  02:25:45,103 - #45 z
INFO  02:25:45,103 - #28 =
INFO  02:25:45,103 - #45 cinilac
INFO  02:25:45,103 - #13 ;
INFO  02:25:45,103 - #8 return
INFO  02:25:45,104 - #45 z
INFO  02:25:45,104 - #17 *
INFO  02:25:45,104 - #32 (
INFO  02:25:45,104 - #45 r
INFO  02:25:45,104 - #18 /
INFO  02:25:45,104 - #45 delilac
INFO  02:25:45,104 - #33 )
INFO  02:25:45,104 - #13 ;
INFO  02:25:45,104 - #35 }
INFO  02:25:45,104 - #35 }
INFO  02:25:45,104 - #35 }
INFO  02:25:45,105 - #38 class
INFO  02:25:45,105 - #45 Kvadar
INFO  02:25:45,105 - #39 extends
INFO  02:25:45,105 - #45 Predmet
INFO  02:25:45,105 - #34 {
INFO  02:25:45,105 - #45 int
INFO  02:25:45,105 - #45 a
INFO  02:25:45,105 - #12 ,
INFO  02:25:45,105 - #45 b
INFO  02:25:45,105 - #12 ,
INFO  02:25:45,105 - #45 c
INFO  02:25:45,105 - #13 ;
INFO  02:25:45,105 - #34 {
INFO  02:25:45,105 - #43 void
INFO  02:25:45,105 - #45 postaviTezinu
INFO  02:25:45,105 - #32 (
INFO  02:25:45,105 - #45 int
INFO  02:25:45,105 - #45 tezina
INFO  02:25:45,105 - #33 )
INFO  02:25:45,105 - #34 {
INFO  02:25:45,105 - #45 this
INFO  02:25:45,105 - #14 .
INFO  02:25:45,105 - #45 tezina
INFO  02:25:45,105 - #28 =
INFO  02:25:45,105 - #45 tezina
INFO  02:25:45,105 - #13 ;
INFO  02:25:45,106 - #45 vrsta
INFO  02:25:45,106 - #28 =
INFO  02:25:45,106 - #10 k
INFO  02:25:45,106 - #13 ;
INFO  02:25:45,106 - #35 }
INFO  02:25:45,106 - #43 void
INFO  02:25:45,106 - #45 postaviStranice
INFO  02:25:45,106 - #32 (
INFO  02:25:45,106 - #45 int
INFO  02:25:45,106 - #45 a
INFO  02:25:45,106 - #12 ,
INFO  02:25:45,106 - #45 int
INFO  02:25:45,106 - #45 b
INFO  02:25:45,106 - #12 ,
INFO  02:25:45,107 - #45 int
INFO  02:25:45,107 - #45 c
INFO  02:25:45,107 - #33 )
INFO  02:25:45,107 - #34 {
INFO  02:25:45,107 - #45 this
INFO  02:25:45,107 - #14 .
INFO  02:25:45,107 - #45 a
INFO  02:25:45,107 - #28 =
INFO  02:25:45,107 - #45 a
INFO  02:25:45,107 - #13 ;
INFO  02:25:45,107 - #45 this
INFO  02:25:45,107 - #14 .
INFO  02:25:45,107 - #45 b
INFO  02:25:45,107 - #28 =
INFO  02:25:45,107 - #45 b
INFO  02:25:45,107 - #13 ;
INFO  02:25:45,107 - #45 this
INFO  02:25:45,107 - #14 .
INFO  02:25:45,107 - #45 c
INFO  02:25:45,107 - #28 =
INFO  02:25:45,108 - #45 c
INFO  02:25:45,108 - #13 ;
INFO  02:25:45,108 - #45 vrsta
INFO  02:25:45,108 - #28 =
INFO  02:25:45,108 - #10 k
INFO  02:25:45,108 - #13 ;
INFO  02:25:45,108 - #35 }
INFO  02:25:45,108 - #45 int
INFO  02:25:45,108 - #45 zapremina
INFO  02:25:45,108 - #32 (
INFO  02:25:45,108 - #33 )
INFO  02:25:45,108 - #45 int
INFO  02:25:45,108 - #45 z
INFO  02:25:45,108 - #13 ;
INFO  02:25:45,108 - #34 {
INFO  02:25:45,108 - #45 z
INFO  02:25:45,108 - #28 =
INFO  02:25:45,108 - #45 a
INFO  02:25:45,108 - #17 *
INFO  02:25:45,108 - #45 b
INFO  02:25:45,108 - #17 *
INFO  02:25:45,108 - #45 c
INFO  02:25:45,108 - #13 ;
INFO  02:25:45,109 - #8 return
INFO  02:25:45,109 - #45 z
INFO  02:25:45,109 - #13 ;
INFO  02:25:45,109 - #35 }
INFO  02:25:45,109 - #35 }
INFO  02:25:45,109 - #35 }
INFO  02:25:45,109 - #45 int
INFO  02:25:45,109 - #45 zapreminaK
INFO  02:25:45,109 - #12 ,
INFO  02:25:45,109 - #45 zapreminaS
INFO  02:25:45,109 - #13 ;
INFO  02:25:45,109 - #45 int
INFO  02:25:45,109 - #45 tezinaK
INFO  02:25:45,109 - #12 ,
INFO  02:25:45,109 - #45 tezinaS
INFO  02:25:45,109 - #13 ;
INFO  02:25:45,109 - #34 {
INFO  02:25:45,109 - #43 void
INFO  02:25:45,110 - #45 ispis
INFO  02:25:45,110 - #32 (
INFO  02:25:45,110 - #45 Predmet
INFO  02:25:45,110 - #45 p
INFO  02:25:45,110 - #33 )
INFO  02:25:45,110 - #34 {
INFO  02:25:45,110 - #41 print
INFO  02:25:45,110 - #32 (
INFO  02:25:45,110 - #45 p
INFO  02:25:45,110 - #14 .
INFO  02:25:45,110 - #45 vrsta
INFO  02:25:45,110 - #33 )
INFO  02:25:45,111 - #13 ;
INFO  02:25:45,111 - #41 print
INFO  02:25:45,111 - #32 (
INFO  02:25:45,111 - #45 eol
INFO  02:25:45,111 - #33 )
INFO  02:25:45,111 - #13 ;
INFO  02:25:45,111 - #41 print
INFO  02:25:45,111 - #32 (
INFO  02:25:45,111 - #45 p
INFO  02:25:45,111 - #14 .
INFO  02:25:45,111 - #45 tezina
INFO  02:25:45,111 - #33 )
INFO  02:25:45,111 - #13 ;
INFO  02:25:45,111 - #35 }
INFO  02:25:45,111 - #43 void
INFO  02:25:45,111 - #45 main
INFO  02:25:45,111 - #32 (
INFO  02:25:45,111 - #33 )
INFO  02:25:45,111 - #45 Predmet
INFO  02:25:45,112 - #45 predmeti
INFO  02:25:45,112 - #36 [
INFO  02:25:45,112 - #37 ]
INFO  02:25:45,112 - #13 ;
INFO  02:25:45,112 - #45 int
INFO  02:25:45,112 - #45 i
INFO  02:25:45,112 - #13 ;
INFO  02:25:45,112 - #45 Sfera
INFO  02:25:45,112 - #45 s1
INFO  02:25:45,112 - #12 ,
INFO  02:25:45,112 - #45 s2
INFO  02:25:45,112 - #12 ,
INFO  02:25:45,112 - #45 s3
INFO  02:25:45,112 - #13 ;
INFO  02:25:45,112 - #45 Kvadar
INFO  02:25:45,112 - #45 k1
INFO  02:25:45,112 - #12 ,
INFO  02:25:45,112 - #45 k2
INFO  02:25:45,112 - #12 ,
INFO  02:25:45,112 - #45 k3
INFO  02:25:45,112 - #13 ;
INFO  02:25:45,113 - #45 int
INFO  02:25:45,113 - #45 t
INFO  02:25:45,113 - #13 ;
INFO  02:25:45,113 - #34 {
INFO  02:25:45,113 - #45 predmeti
INFO  02:25:45,113 - #28 =
INFO  02:25:45,113 - #31 new
INFO  02:25:45,113 - #45 Predmet
INFO  02:25:45,113 - #36 [
INFO  02:25:45,113 - #9 6
INFO  02:25:45,113 - #37 ]
INFO  02:25:45,113 - #13 ;
INFO  02:25:45,113 - #45 s1
INFO  02:25:45,113 - #28 =
INFO  02:25:45,113 - #31 new
INFO  02:25:45,113 - #45 Sfera
INFO  02:25:45,113 - #13 ;
INFO  02:25:45,114 - #45 s2
INFO  02:25:45,114 - #28 =
INFO  02:25:45,114 - #31 new
INFO  02:25:45,114 - #45 Sfera
INFO  02:25:45,114 - #13 ;
INFO  02:25:45,114 - #45 s3
INFO  02:25:45,114 - #28 =
INFO  02:25:45,114 - #31 new
INFO  02:25:45,114 - #45 Sfera
INFO  02:25:45,114 - #13 ;
INFO  02:25:45,114 - #45 k1
INFO  02:25:45,114 - #28 =
INFO  02:25:45,114 - #31 new
INFO  02:25:45,114 - #45 Kvadar
INFO  02:25:45,114 - #13 ;
INFO  02:25:45,114 - #45 k2
INFO  02:25:45,114 - #28 =
INFO  02:25:45,114 - #31 new
INFO  02:25:45,114 - #45 Kvadar
INFO  02:25:45,114 - #13 ;
INFO  02:25:45,114 - #45 k3
INFO  02:25:45,114 - #28 =
INFO  02:25:45,114 - #31 new
INFO  02:25:45,114 - #45 Kvadar
INFO  02:25:45,114 - #13 ;
INFO  02:25:45,114 - #45 s1
INFO  02:25:45,114 - #14 .
INFO  02:25:45,114 - #45 postaviPoluprecnik
INFO  02:25:45,114 - #32 (
INFO  02:25:45,114 - #9 1
INFO  02:25:45,114 - #33 )
INFO  02:25:45,114 - #13 ;
INFO  02:25:45,115 - #45 s2
INFO  02:25:45,115 - #14 .
INFO  02:25:45,115 - #45 postaviPoluprecnik
INFO  02:25:45,115 - #32 (
INFO  02:25:45,115 - #9 2
INFO  02:25:45,115 - #33 )
INFO  02:25:45,115 - #13 ;
INFO  02:25:45,115 - #45 s3
INFO  02:25:45,115 - #14 .
INFO  02:25:45,115 - #45 postaviPoluprecnik
INFO  02:25:45,115 - #32 (
INFO  02:25:45,115 - #9 3
INFO  02:25:45,115 - #33 )
INFO  02:25:45,115 - #13 ;
INFO  02:25:45,115 - #45 k1
INFO  02:25:45,115 - #14 .
INFO  02:25:45,115 - #45 postaviStranice
INFO  02:25:45,115 - #32 (
INFO  02:25:45,115 - #9 1
INFO  02:25:45,115 - #12 ,
INFO  02:25:45,115 - #9 2
INFO  02:25:45,115 - #12 ,
INFO  02:25:45,115 - #9 3
INFO  02:25:45,116 - #33 )
INFO  02:25:45,116 - #13 ;
INFO  02:25:45,116 - #45 k2
INFO  02:25:45,116 - #14 .
INFO  02:25:45,116 - #45 postaviStranice
INFO  02:25:45,116 - #32 (
INFO  02:25:45,116 - #9 2
INFO  02:25:45,116 - #12 ,
INFO  02:25:45,116 - #9 3
INFO  02:25:45,116 - #12 ,
INFO  02:25:45,116 - #9 4
INFO  02:25:45,116 - #33 )
INFO  02:25:45,116 - #13 ;
INFO  02:25:45,116 - #45 k3
INFO  02:25:45,116 - #14 .
INFO  02:25:45,116 - #45 postaviStranice
INFO  02:25:45,116 - #32 (
INFO  02:25:45,116 - #9 3
INFO  02:25:45,116 - #12 ,
INFO  02:25:45,116 - #9 4
INFO  02:25:45,116 - #12 ,
INFO  02:25:45,116 - #9 5
INFO  02:25:45,116 - #33 )
INFO  02:25:45,116 - #13 ;
INFO  02:25:45,116 - #45 predmeti
INFO  02:25:45,116 - #36 [
INFO  02:25:45,116 - #9 0
INFO  02:25:45,116 - #37 ]
INFO  02:25:45,117 - #28 =
INFO  02:25:45,117 - #45 s1
INFO  02:25:45,117 - #13 ;
INFO  02:25:45,117 - #45 predmeti
INFO  02:25:45,117 - #36 [
INFO  02:25:45,117 - #9 2
INFO  02:25:45,117 - #37 ]
INFO  02:25:45,117 - #28 =
INFO  02:25:45,117 - #45 s2
INFO  02:25:45,117 - #13 ;
INFO  02:25:45,117 - #45 predmeti
INFO  02:25:45,117 - #36 [
INFO  02:25:45,117 - #9 4
INFO  02:25:45,117 - #37 ]
INFO  02:25:45,117 - #28 =
INFO  02:25:45,117 - #45 s3
INFO  02:25:45,117 - #13 ;
INFO  02:25:45,117 - #45 predmeti
INFO  02:25:45,117 - #36 [
INFO  02:25:45,117 - #9 1
INFO  02:25:45,117 - #37 ]
INFO  02:25:45,117 - #28 =
INFO  02:25:45,117 - #45 k1
INFO  02:25:45,117 - #13 ;
INFO  02:25:45,117 - #45 predmeti
INFO  02:25:45,117 - #36 [
INFO  02:25:45,117 - #9 3
INFO  02:25:45,117 - #37 ]
INFO  02:25:45,118 - #28 =
INFO  02:25:45,118 - #45 k2
INFO  02:25:45,118 - #13 ;
INFO  02:25:45,118 - #45 predmeti
INFO  02:25:45,118 - #36 [
INFO  02:25:45,118 - #9 5
INFO  02:25:45,118 - #37 ]
INFO  02:25:45,118 - #28 =
INFO  02:25:45,118 - #45 k3
INFO  02:25:45,118 - #13 ;
INFO  02:25:45,118 - #42 read
INFO  02:25:45,118 - #32 (
INFO  02:25:45,118 - #45 t
INFO  02:25:45,118 - #33 )
INFO  02:25:45,118 - #13 ;
INFO  02:25:45,118 - #45 i
INFO  02:25:45,118 - #28 =
INFO  02:25:45,118 - #9 0
INFO  02:25:45,118 - #13 ;
INFO  02:25:45,118 - #5 do
INFO  02:25:45,118 - #34 {
INFO  02:25:45,119 - #45 predmeti
INFO  02:25:45,119 - #36 [
INFO  02:25:45,119 - #45 i
INFO  02:25:45,119 - #37 ]
INFO  02:25:45,119 - #14 .
INFO  02:25:45,119 - #45 postaviTezinu
INFO  02:25:45,119 - #32 (
INFO  02:25:45,119 - #45 t
INFO  02:25:45,119 - #33 )
INFO  02:25:45,119 - #13 ;
INFO  02:25:45,119 - #45 i
INFO  02:25:45,119 - #29 ++
INFO  02:25:45,119 - #13 ;
INFO  02:25:45,119 - #35 }
INFO  02:25:45,119 - #6 while
INFO  02:25:45,120 - #32 (
INFO  02:25:45,120 - #45 i
INFO  02:25:45,120 - #23 <
INFO  02:25:45,120 - #9 6
INFO  02:25:45,120 - #33 )
INFO  02:25:45,121 - #13 ;
INFO  02:25:45,121 - #45 i
INFO  02:25:45,121 - #28 =
INFO  02:25:45,121 - #9 0
INFO  02:25:45,121 - #13 ;
INFO  02:25:45,121 - #45 zapreminaS
INFO  02:25:45,121 - #28 =
INFO  02:25:45,121 - #9 0
INFO  02:25:45,121 - #13 ;
INFO  02:25:45,121 - #45 tezinaS
INFO  02:25:45,121 - #28 =
INFO  02:25:45,121 - #9 0
INFO  02:25:45,121 - #13 ;
INFO  02:25:45,122 - #5 do
INFO  02:25:45,122 - #34 {
INFO  02:25:45,122 - #45 i
INFO  02:25:45,122 - #29 ++
INFO  02:25:45,122 - #13 ;
INFO  02:25:45,122 - #2 if
INFO  02:25:45,122 - #32 (
INFO  02:25:45,122 - #45 i
INFO  02:25:45,122 - #19 %
INFO  02:25:45,122 - #9 2
INFO  02:25:45,122 - #20 ==
INFO  02:25:45,123 - #9 0
INFO  02:25:45,123 - #33 )
INFO  02:25:45,123 - #7 continue
INFO  02:25:45,123 - #13 ;
INFO  02:25:45,123 - #45 zapreminaS
INFO  02:25:45,124 - #28 =
INFO  02:25:45,124 - #45 zapreminaS
INFO  02:25:45,124 - #15 +
INFO  02:25:45,124 - #45 predmeti
INFO  02:25:45,124 - #36 [
INFO  02:25:45,124 - #45 i
INFO  02:25:45,125 - #16 -
INFO  02:25:45,125 - #9 1
INFO  02:25:45,125 - #37 ]
INFO  02:25:45,125 - #14 .
INFO  02:25:45,125 - #45 zapremina
INFO  02:25:45,125 - #32 (
INFO  02:25:45,125 - #33 )
INFO  02:25:45,125 - #13 ;
INFO  02:25:45,125 - #45 tezinaS
INFO  02:25:45,126 - #28 =
INFO  02:25:45,126 - #45 tezinaS
INFO  02:25:45,126 - #15 +
INFO  02:25:45,126 - #45 predmeti
INFO  02:25:45,126 - #36 [
INFO  02:25:45,126 - #45 i
INFO  02:25:45,126 - #16 -
INFO  02:25:45,126 - #9 1
INFO  02:25:45,126 - #37 ]
INFO  02:25:45,126 - #14 .
INFO  02:25:45,126 - #45 Q
INFO  02:25:45,126 - #32 (
INFO  02:25:45,126 - #33 )
INFO  02:25:45,126 - #13 ;
INFO  02:25:45,126 - #45 ispis
INFO  02:25:45,126 - #32 (
INFO  02:25:45,126 - #45 predmeti
INFO  02:25:45,126 - #36 [
INFO  02:25:45,126 - #45 i
INFO  02:25:45,126 - #16 -
INFO  02:25:45,126 - #9 1
INFO  02:25:45,126 - #37 ]
INFO  02:25:45,126 - #33 )
INFO  02:25:45,126 - #13 ;
INFO  02:25:45,126 - #35 }
INFO  02:25:45,126 - #6 while
INFO  02:25:45,126 - #32 (
INFO  02:25:45,126 - #45 i
INFO  02:25:45,126 - #23 <
INFO  02:25:45,126 - #9 6
INFO  02:25:45,126 - #33 )
INFO  02:25:45,126 - #13 ;
INFO  02:25:45,126 - #45 i
INFO  02:25:45,126 - #28 =
INFO  02:25:45,126 - #9 0
INFO  02:25:45,126 - #13 ;
INFO  02:25:45,126 - #45 zapreminaK
INFO  02:25:45,126 - #28 =
INFO  02:25:45,126 - #9 0
INFO  02:25:45,126 - #13 ;
INFO  02:25:45,127 - #45 tezinaK
INFO  02:25:45,127 - #28 =
INFO  02:25:45,127 - #9 0
INFO  02:25:45,127 - #13 ;
INFO  02:25:45,127 - #5 do
INFO  02:25:45,127 - #34 {
INFO  02:25:45,127 - #45 i
INFO  02:25:45,127 - #29 ++
INFO  02:25:45,127 - #13 ;
INFO  02:25:45,127 - #2 if
INFO  02:25:45,127 - #32 (
INFO  02:25:45,127 - #45 i
INFO  02:25:45,127 - #19 %
INFO  02:25:45,127 - #9 2
INFO  02:25:45,127 - #20 ==
INFO  02:25:45,127 - #9 1
INFO  02:25:45,127 - #33 )
INFO  02:25:45,127 - #7 continue
INFO  02:25:45,127 - #13 ;
INFO  02:25:45,127 - #45 zapreminaK
INFO  02:25:45,127 - #28 =
INFO  02:25:45,127 - #45 zapreminaK
INFO  02:25:45,127 - #15 +
INFO  02:25:45,127 - #45 predmeti
INFO  02:25:45,127 - #36 [
INFO  02:25:45,127 - #45 i
INFO  02:25:45,127 - #16 -
INFO  02:25:45,127 - #9 1
INFO  02:25:45,127 - #37 ]
INFO  02:25:45,127 - #14 .
INFO  02:25:45,127 - #45 zapremina
INFO  02:25:45,127 - #32 (
INFO  02:25:45,127 - #33 )
INFO  02:25:45,127 - #13 ;
INFO  02:25:45,127 - #45 tezinaK
INFO  02:25:45,127 - #28 =
INFO  02:25:45,127 - #45 tezinaK
INFO  02:25:45,127 - #15 +
INFO  02:25:45,127 - #45 predmeti
INFO  02:25:45,128 - #36 [
INFO  02:25:45,128 - #45 i
INFO  02:25:45,128 - #16 -
INFO  02:25:45,128 - #9 1
INFO  02:25:45,128 - #37 ]
INFO  02:25:45,128 - #14 .
INFO  02:25:45,128 - #45 Q
INFO  02:25:45,128 - #32 (
INFO  02:25:45,128 - #33 )
INFO  02:25:45,128 - #13 ;
INFO  02:25:45,128 - #45 ispis
INFO  02:25:45,128 - #32 (
INFO  02:25:45,128 - #45 predmeti
INFO  02:25:45,128 - #36 [
INFO  02:25:45,128 - #45 i
INFO  02:25:45,128 - #16 -
INFO  02:25:45,128 - #9 1
INFO  02:25:45,128 - #37 ]
INFO  02:25:45,128 - #33 )
INFO  02:25:45,128 - #13 ;
INFO  02:25:45,128 - #35 }
INFO  02:25:45,128 - #6 while
INFO  02:25:45,128 - #32 (
INFO  02:25:45,128 - #45 i
INFO  02:25:45,128 - #23 <
INFO  02:25:45,128 - #9 6
INFO  02:25:45,128 - #33 )
INFO  02:25:45,128 - #13 ;
INFO  02:25:45,128 - #41 print
INFO  02:25:45,128 - #32 (
INFO  02:25:45,128 - #45 zapreminaS
INFO  02:25:45,128 - #33 )
INFO  02:25:45,128 - #13 ;
INFO  02:25:45,128 - #41 print
INFO  02:25:45,128 - #32 (
INFO  02:25:45,128 - #45 eol
INFO  02:25:45,128 - #33 )
INFO  02:25:45,128 - #13 ;
INFO  02:25:45,128 - #41 print
INFO  02:25:45,128 - #32 (
INFO  02:25:45,128 - #45 zapreminaK
INFO  02:25:45,128 - #33 )
INFO  02:25:45,129 - #13 ;
INFO  02:25:45,129 - #41 print
INFO  02:25:45,129 - #32 (
INFO  02:25:45,129 - #45 eol
INFO  02:25:45,129 - #33 )
INFO  02:25:45,129 - #13 ;
INFO  02:25:45,129 - #41 print
INFO  02:25:45,129 - #32 (
INFO  02:25:45,129 - #45 tezinaS
INFO  02:25:45,129 - #33 )
INFO  02:25:45,129 - #13 ;
INFO  02:25:45,129 - #41 print
INFO  02:25:45,129 - #32 (
INFO  02:25:45,129 - #45 eol
INFO  02:25:45,129 - #33 )
INFO  02:25:45,129 - #13 ;
INFO  02:25:45,129 - #41 print
INFO  02:25:45,129 - #32 (
INFO  02:25:45,129 - #45 tezinaK
INFO  02:25:45,129 - #33 )
INFO  02:25:45,129 - #13 ;
INFO  02:25:45,129 - #41 print
INFO  02:25:45,129 - #32 (
INFO  02:25:45,129 - #45 eol
INFO  02:25:45,129 - #33 )
INFO  02:25:45,129 - #13 ;
INFO  02:25:45,129 - #35 }
INFO  02:25:45,129 - #35 }
INFO  02:25:45,130 - ***Abstract tree****
INFO  02:25:45,130 - #0
DEBUG 02:25:45,166 - program name
DEBUG 02:25:45,166 - found constant with value 4of type 1
DEBUG 02:25:45,166 - found constant with value 3of type 1
DEBUG 02:25:45,166 - ClassBegin
DEBUG 02:25:45,167 - Variable with name tezina has the address of 1
DEBUG 02:25:45,167 - Variable with name vrsta has the address of 2
DEBUG 02:25:45,168 - designator simple at line 12: this
DEBUG 02:25:45,168 - designator simple at line 12: tezina
DEBUG 02:25:45,168 - designator simple at line 12: tezina
DEBUG 02:25:45,168 - term SingleFactorterm is type 1
DEBUG 02:25:45,168 - exprWithNoMinus
DEBUG 02:25:45,168 - designator simple at line 13: tezina
DEBUG 02:25:45,169 - found constant with value 0of type 1
DEBUG 02:25:45,169 - constant factor is type 1
DEBUG 02:25:45,169 - term SingleFactorterm is type 1
DEBUG 02:25:45,169 - exprWithNoMinus
DEBUG 02:25:45,169 - designator simple at line 15: zapremina
DEBUG 02:25:45,172 - designator simple at line 15: tezina
DEBUG 02:25:45,172 - term element is type 1
DEBUG 02:25:45,172 - term list single is type 1
DEBUG 02:25:45,172 - term MultiFactorTerm is type 1
DEBUG 02:25:45,172 - exprWithNoMinus
DEBUG 02:25:45,172 - designator simple at line 16: this
DEBUG 02:25:45,172 - designator simple at line 16: vrsta
DEBUG 02:25:45,172 - designator simple at line 16: vrsta
DEBUG 02:25:45,172 - term SingleFactorterm is type 2
DEBUG 02:25:45,172 - exprWithNoMinus
DEBUG 02:25:45,172 - class decl end
DEBUG 02:25:45,173 - class decl 1
DEBUG 02:25:45,173 - derived ClassBegin
DEBUG 02:28:32,010 - Variable with name r has the address of 1
DEBUG 02:28:32,010 - designator simple at line 24: this
DEBUG 02:28:32,010 - designator simple at line 24: tezina
DEBUG 02:28:32,010 - designator simple at line 24: tezina
DEBUG 02:28:32,010 - term SingleFactorterm is type 1
DEBUG 02:28:32,010 - exprWithNoMinus
DEBUG 02:28:32,010 - designator simple at line 24: vrsta
DEBUG 02:28:32,010 - found constant with value *****of type 2
DEBUG 02:28:32,010 - found constant with value 115of type 2
DEBUG 02:28:32,010 - constant factor is type 2
DEBUG 02:28:32,010 - term SingleFactorterm is type 2
DEBUG 02:28:32,010 - exprWithNoMinus
DEBUG 02:28:32,010 - designator simple at line 25: this
DEBUG 02:28:32,011 - designator simple at line 25: r
DEBUG 02:28:32,011 - designator simple at line 25: r
DEBUG 02:28:32,011 - term SingleFactorterm is type 1
DEBUG 02:28:32,011 - exprWithNoMinus
DEBUG 02:28:32,011 - designator simple at line 26: postaviVrstu
DEBUG 02:28:32,011 - found constant with value *****of type 2
DEBUG 02:28:32,011 - found constant with value 115of type 2
DEBUG 02:28:32,011 - constant factor is type 2
DEBUG 02:28:32,011 - term SingleFactorterm is type 2
DEBUG 02:28:32,011 - exprWithNoMinus
ERROR 02:28:40,607 - Wrong number of parameters - expected 2 but found 1
DEBUG 02:28:40,607 - Variable with name z has the address of 2
DEBUG 02:28:40,607 - designator simple at line 31: z
DEBUG 02:28:40,607 - designator simple at line 31: cinilac
DEBUG 02:28:40,607 - term SingleFactorterm is type 1
DEBUG 02:28:40,607 - exprWithNoMinus
DEBUG 02:28:40,607 - designator simple at line 32: z
DEBUG 02:28:40,607 - designator simple at line 32: r
DEBUG 02:28:40,608 - designator simple at line 32: delilac
DEBUG 02:28:40,608 - term element is type 1
DEBUG 02:28:40,608 - term list single is type 1
DEBUG 02:28:40,608 - term MultiFactorTerm is type 1
DEBUG 02:28:40,608 - exprWithNoMinus
DEBUG 02:28:40,608 - term element is type 1
DEBUG 02:28:40,608 - term list single is type 1
DEBUG 02:28:40,608 - term MultiFactorTerm is type 1
DEBUG 02:28:40,608 - exprWithNoMinus
DEBUG 02:28:40,608 - class decl end
DEBUG 02:28:40,608 - class decl 1
DEBUG 02:28:40,608 - derived ClassBegin
