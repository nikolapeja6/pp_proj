INFO  13:09:57,031 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\303.mj
INFO  13:09:57,093 - #40 program
INFO  13:09:57,093 - #45 test_303
INFO  13:09:57,093 - #44 const
INFO  13:09:57,093 - #45 int
INFO  13:09:57,093 - #45 cinilac
INFO  13:09:57,093 - #28 =
INFO  13:09:57,093 - #9 4
INFO  13:09:57,093 - #12 ,
INFO  13:09:57,094 - #45 delilac
INFO  13:09:57,094 - #28 =
INFO  13:09:57,094 - #9 3
INFO  13:09:57,094 - #13 ;
INFO  13:09:57,094 - #38 class
INFO  13:09:57,094 - #45 Predmet
INFO  13:09:57,094 - #34 {
INFO  13:09:57,095 - #45 int
INFO  13:09:57,095 - #45 tezina
INFO  13:09:57,095 - #13 ;
INFO  13:09:57,095 - #45 char
INFO  13:09:57,095 - #45 vrsta
INFO  13:09:57,095 - #13 ;
INFO  13:09:57,096 - #34 {
INFO  13:09:57,096 - #43 void
INFO  13:09:57,096 - #45 ucitajTezinu
INFO  13:09:57,097 - #32 (
INFO  13:09:57,097 - #33 )
INFO  13:09:57,097 - #34 {
INFO  13:09:57,097 - #42 read
INFO  13:09:57,098 - #32 (
INFO  13:09:57,098 - #45 tezina
INFO  13:09:57,098 - #33 )
INFO  13:09:57,098 - #13 ;
INFO  13:09:57,098 - #35 }
INFO  13:09:57,098 - #45 int
INFO  13:09:57,099 - #45 zapremina
INFO  13:09:57,099 - #32 (
INFO  13:09:57,100 - #33 )
INFO  13:09:57,100 - #34 {
INFO  13:09:57,100 - #8 return
INFO  13:09:57,100 - #9 0
INFO  13:09:57,100 - #13 ;
INFO  13:09:57,100 - #35 }
INFO  13:09:57,101 - #45 int
INFO  13:09:57,101 - #45 Q
INFO  13:09:57,101 - #32 (
INFO  13:09:57,101 - #33 )
INFO  13:09:57,101 - #34 {
INFO  13:09:57,101 - #8 return
INFO  13:09:57,101 - #45 zapremina
INFO  13:09:57,101 - #32 (
INFO  13:09:57,101 - #33 )
INFO  13:09:57,101 - #17 *
INFO  13:09:57,101 - #45 tezina
INFO  13:09:57,102 - #13 ;
INFO  13:09:57,102 - #35 }
INFO  13:09:57,102 - #35 }
INFO  13:09:57,102 - #35 }
INFO  13:09:57,103 - #38 class
INFO  13:09:57,103 - #45 Sfera
INFO  13:09:57,103 - #39 extends
INFO  13:09:57,103 - #45 Predmet
INFO  13:09:57,103 - #34 {
INFO  13:09:57,104 - #45 int
INFO  13:09:57,104 - #45 r
INFO  13:09:57,104 - #13 ;
INFO  13:09:57,104 - #34 {
INFO  13:09:57,104 - #45 int
INFO  13:09:57,104 - #45 zapremina
INFO  13:09:57,104 - #32 (
INFO  13:09:57,104 - #33 )
INFO  13:09:57,104 - #45 int
INFO  13:09:57,104 - #45 z
INFO  13:09:57,104 - #13 ;
INFO  13:09:57,104 - #34 {
INFO  13:09:57,104 - #45 z
INFO  13:09:57,104 - #28 =
INFO  13:09:57,104 - #45 cinilac
INFO  13:09:57,104 - #13 ;
INFO  13:09:57,104 - #8 return
INFO  13:09:57,104 - #45 z
INFO  13:09:57,104 - #17 *
INFO  13:09:57,105 - #32 (
INFO  13:09:57,105 - #45 r
INFO  13:09:57,105 - #18 /
INFO  13:09:57,105 - #45 delilac
INFO  13:09:57,105 - #33 )
INFO  13:09:57,105 - #13 ;
INFO  13:09:57,105 - #35 }
INFO  13:09:57,105 - #35 }
INFO  13:09:57,106 - #35 }
INFO  13:09:57,106 - #38 class
INFO  13:09:57,106 - #45 Kvadar
INFO  13:09:57,106 - #39 extends
INFO  13:09:57,106 - #45 Predmet
INFO  13:09:57,106 - #34 {
INFO  13:09:57,106 - #45 int
INFO  13:09:57,106 - #45 a
INFO  13:09:57,106 - #12 ,
INFO  13:09:57,106 - #45 b
INFO  13:09:57,106 - #12 ,
INFO  13:09:57,106 - #45 c
INFO  13:09:57,106 - #13 ;
INFO  13:09:57,106 - #34 {
INFO  13:09:57,106 - #45 int
INFO  13:09:57,106 - #45 zapremina
INFO  13:09:57,106 - #32 (
INFO  13:09:57,106 - #33 )
INFO  13:09:57,106 - #45 int
INFO  13:09:57,106 - #45 z
INFO  13:09:57,106 - #13 ;
INFO  13:09:57,106 - #34 {
INFO  13:09:57,106 - #45 z
INFO  13:09:57,106 - #28 =
INFO  13:09:57,106 - #45 a
INFO  13:09:57,106 - #17 *
INFO  13:09:57,107 - #45 b
INFO  13:09:57,107 - #17 *
INFO  13:09:57,107 - #45 c
INFO  13:09:57,107 - #13 ;
INFO  13:09:57,107 - #8 return
INFO  13:09:57,107 - #45 z
INFO  13:09:57,107 - #13 ;
INFO  13:09:57,107 - #35 }
INFO  13:09:57,107 - #35 }
INFO  13:09:57,107 - #35 }
INFO  13:09:57,107 - #45 int
INFO  13:09:57,107 - #45 zapreminaK
INFO  13:09:57,107 - #12 ,
INFO  13:09:57,107 - #45 zapreminaS
INFO  13:09:57,107 - #13 ;
INFO  13:09:57,107 - #45 int
INFO  13:09:57,107 - #45 tezinaK
INFO  13:09:57,107 - #12 ,
INFO  13:09:57,107 - #45 tezinaS
INFO  13:09:57,107 - #13 ;
INFO  13:09:57,108 - #34 {
INFO  13:09:57,108 - #43 void
INFO  13:09:57,108 - #45 ispis
INFO  13:09:57,108 - #32 (
INFO  13:09:57,108 - #45 Predmet
INFO  13:09:57,108 - #45 p
INFO  13:09:57,108 - #33 )
INFO  13:09:57,109 - #34 {
INFO  13:09:57,109 - #41 print
INFO  13:09:57,109 - #32 (
INFO  13:09:57,109 - #45 p
INFO  13:09:57,109 - #14 .
INFO  13:09:57,110 - #45 vrsta
INFO  13:09:57,110 - #33 )
INFO  13:09:57,110 - #13 ;
INFO  13:09:57,110 - #41 print
INFO  13:09:57,110 - #32 (
INFO  13:09:57,110 - #45 eol
INFO  13:09:57,110 - #33 )
INFO  13:09:57,110 - #13 ;
INFO  13:09:57,110 - #41 print
INFO  13:09:57,110 - #32 (
INFO  13:09:57,110 - #45 p
INFO  13:09:57,110 - #14 .
INFO  13:09:57,110 - #45 tezina
INFO  13:09:57,110 - #33 )
INFO  13:09:57,110 - #13 ;
INFO  13:09:57,110 - #35 }
INFO  13:09:57,110 - #43 void
INFO  13:09:57,111 - #45 main
INFO  13:09:57,111 - #32 (
INFO  13:09:57,111 - #33 )
INFO  13:09:57,111 - #45 Predmet
INFO  13:09:57,111 - #45 predmeti
INFO  13:09:57,111 - #36 [
INFO  13:09:57,111 - #37 ]
INFO  13:09:57,111 - #13 ;
INFO  13:09:57,111 - #45 int
INFO  13:09:57,111 - #45 i
INFO  13:09:57,111 - #13 ;
INFO  13:09:57,111 - #45 Sfera
INFO  13:09:57,111 - #45 s1
INFO  13:09:57,111 - #12 ,
INFO  13:09:57,111 - #45 s2
INFO  13:09:57,111 - #12 ,
INFO  13:09:57,111 - #45 s3
INFO  13:09:57,111 - #13 ;
INFO  13:09:57,111 - #45 Kvadar
INFO  13:09:57,111 - #45 k1
INFO  13:09:57,112 - #12 ,
INFO  13:09:57,112 - #45 k2
INFO  13:09:57,112 - #12 ,
INFO  13:09:57,112 - #45 k3
INFO  13:09:57,112 - #13 ;
INFO  13:09:57,112 - #45 int
INFO  13:09:57,112 - #45 t
INFO  13:09:57,112 - #13 ;
INFO  13:09:57,112 - #34 {
INFO  13:09:57,112 - #45 predmeti
INFO  13:09:57,112 - #28 =
INFO  13:09:57,112 - #31 new
INFO  13:09:57,112 - #45 Predmet
INFO  13:09:57,112 - #36 [
INFO  13:09:57,112 - #9 6
INFO  13:09:57,112 - #37 ]
INFO  13:09:57,112 - #13 ;
INFO  13:09:57,112 - #45 s1
INFO  13:09:57,112 - #28 =
INFO  13:09:57,112 - #31 new
INFO  13:09:57,112 - #45 Sfera
INFO  13:09:57,112 - #13 ;
INFO  13:09:57,113 - #45 s2
INFO  13:09:57,113 - #28 =
INFO  13:09:57,113 - #31 new
INFO  13:09:57,113 - #45 Sfera
INFO  13:09:57,113 - #13 ;
INFO  13:09:57,113 - #45 s3
INFO  13:09:57,113 - #28 =
INFO  13:09:57,113 - #31 new
INFO  13:09:57,113 - #45 Sfera
INFO  13:09:57,113 - #13 ;
INFO  13:09:57,113 - #45 k1
INFO  13:09:57,113 - #28 =
INFO  13:09:57,113 - #31 new
INFO  13:09:57,113 - #45 Kvadar
INFO  13:09:57,113 - #13 ;
INFO  13:09:57,113 - #45 k2
INFO  13:09:57,113 - #28 =
INFO  13:09:57,113 - #31 new
INFO  13:09:57,113 - #45 Kvadar
INFO  13:09:57,113 - #13 ;
INFO  13:09:57,113 - #45 k3
INFO  13:09:57,113 - #28 =
INFO  13:09:57,113 - #31 new
INFO  13:09:57,113 - #45 Kvadar
INFO  13:09:57,114 - #13 ;
INFO  13:09:57,114 - #45 predmeti
INFO  13:09:57,114 - #36 [
INFO  13:09:57,114 - #9 0
INFO  13:09:57,114 - #37 ]
INFO  13:09:57,114 - #28 =
INFO  13:09:57,114 - #45 s1
INFO  13:09:57,114 - #13 ;
INFO  13:09:57,114 - #45 predmeti
INFO  13:09:57,114 - #36 [
INFO  13:09:57,114 - #9 2
INFO  13:09:57,114 - #37 ]
INFO  13:09:57,114 - #28 =
INFO  13:09:57,114 - #45 s2
INFO  13:09:57,114 - #13 ;
INFO  13:09:57,114 - #45 predmeti
INFO  13:09:57,114 - #36 [
INFO  13:09:57,114 - #9 4
INFO  13:09:57,114 - #37 ]
INFO  13:09:57,114 - #28 =
INFO  13:09:57,115 - #45 s3
INFO  13:09:57,115 - #13 ;
INFO  13:09:57,115 - #45 predmeti
INFO  13:09:57,115 - #36 [
INFO  13:09:57,115 - #9 1
INFO  13:09:57,115 - #37 ]
INFO  13:09:57,115 - #28 =
INFO  13:09:57,115 - #45 k1
INFO  13:09:57,115 - #13 ;
INFO  13:09:57,115 - #45 predmeti
INFO  13:09:57,115 - #36 [
INFO  13:09:57,115 - #9 3
INFO  13:09:57,115 - #37 ]
INFO  13:09:57,115 - #28 =
INFO  13:09:57,115 - #45 k2
INFO  13:09:57,115 - #13 ;
INFO  13:09:57,115 - #45 predmeti
INFO  13:09:57,115 - #36 [
INFO  13:09:57,115 - #9 5
INFO  13:09:57,115 - #37 ]
INFO  13:09:57,115 - #28 =
INFO  13:09:57,115 - #45 k3
INFO  13:09:57,115 - #13 ;
INFO  13:09:57,115 - #42 read
INFO  13:09:57,116 - #32 (
INFO  13:09:57,116 - #45 t
INFO  13:09:57,116 - #33 )
INFO  13:09:57,116 - #13 ;
INFO  13:09:57,116 - #45 i
INFO  13:09:57,116 - #28 =
INFO  13:09:57,116 - #9 0
INFO  13:09:57,116 - #13 ;
INFO  13:09:57,116 - #5 do
INFO  13:09:57,116 - #34 {
INFO  13:09:57,117 - #45 i
INFO  13:09:57,117 - #29 ++
INFO  13:09:57,117 - #13 ;
INFO  13:09:57,117 - #35 }
INFO  13:09:57,117 - #6 while
INFO  13:09:57,117 - #32 (
INFO  13:09:57,117 - #45 i
INFO  13:09:57,117 - #23 <
INFO  13:09:57,117 - #9 6
INFO  13:09:57,118 - #33 )
INFO  13:09:57,119 - #13 ;
INFO  13:09:57,119 - #45 i
INFO  13:09:57,119 - #28 =
INFO  13:09:57,119 - #9 0
INFO  13:09:57,119 - #13 ;
INFO  13:09:57,119 - #45 zapreminaS
INFO  13:09:57,119 - #28 =
INFO  13:09:57,119 - #9 0
INFO  13:09:57,119 - #13 ;
INFO  13:09:57,119 - #45 tezinaS
INFO  13:09:57,119 - #28 =
INFO  13:09:57,119 - #9 0
INFO  13:09:57,119 - #13 ;
INFO  13:09:57,119 - #5 do
INFO  13:09:57,119 - #34 {
INFO  13:09:57,119 - #45 i
INFO  13:09:57,119 - #29 ++
INFO  13:09:57,119 - #13 ;
INFO  13:09:57,119 - #2 if
INFO  13:09:57,119 - #32 (
INFO  13:09:57,119 - #45 i
INFO  13:09:57,119 - #19 %
INFO  13:09:57,119 - #9 2
INFO  13:09:57,120 - #20 ==
INFO  13:09:57,120 - #9 0
INFO  13:09:57,120 - #33 )
INFO  13:09:57,120 - #7 continue
INFO  13:09:57,120 - #13 ;
INFO  13:09:57,120 - #45 zapreminaS
INFO  13:09:57,121 - #28 =
INFO  13:09:57,121 - #45 zapreminaS
INFO  13:09:57,121 - #15 +
INFO  13:09:57,121 - #45 predmeti
INFO  13:09:57,122 - #36 [
INFO  13:09:57,122 - #45 i
INFO  13:09:57,122 - #16 -
INFO  13:09:57,122 - #9 1
INFO  13:09:57,122 - #37 ]
INFO  13:09:57,123 - #14 .
INFO  13:09:57,123 - #45 zapremina
INFO  13:09:57,123 - #32 (
INFO  13:09:57,123 - #33 )
INFO  13:09:57,123 - #13 ;
INFO  13:09:57,123 - #45 tezinaS
INFO  13:09:57,123 - #28 =
INFO  13:09:57,123 - #45 tezinaS
INFO  13:09:57,123 - #15 +
INFO  13:09:57,123 - #45 predmeti
INFO  13:09:57,123 - #36 [
INFO  13:09:57,123 - #45 i
INFO  13:09:57,123 - #16 -
INFO  13:09:57,123 - #9 1
INFO  13:09:57,123 - #37 ]
INFO  13:09:57,123 - #14 .
INFO  13:09:57,123 - #45 Q
INFO  13:09:57,123 - #32 (
INFO  13:09:57,123 - #33 )
INFO  13:09:57,123 - #13 ;
INFO  13:09:57,123 - #45 ispis
INFO  13:09:57,123 - #32 (
INFO  13:09:57,123 - #45 predmeti
INFO  13:09:57,123 - #36 [
INFO  13:09:57,123 - #45 i
INFO  13:09:57,123 - #16 -
INFO  13:09:57,124 - #9 1
INFO  13:09:57,124 - #37 ]
INFO  13:09:57,124 - #33 )
INFO  13:09:57,124 - #13 ;
INFO  13:09:57,124 - #35 }
INFO  13:09:57,124 - #6 while
INFO  13:09:57,124 - #32 (
INFO  13:09:57,124 - #45 i
INFO  13:09:57,124 - #23 <
INFO  13:09:57,124 - #9 6
INFO  13:09:57,124 - #33 )
INFO  13:09:57,124 - #13 ;
INFO  13:09:57,124 - #45 i
INFO  13:09:57,124 - #28 =
INFO  13:09:57,124 - #9 0
INFO  13:09:57,124 - #13 ;
INFO  13:09:57,124 - #45 zapreminaK
INFO  13:09:57,124 - #28 =
INFO  13:09:57,124 - #9 0
INFO  13:09:57,124 - #13 ;
INFO  13:09:57,124 - #45 tezinaK
INFO  13:09:57,124 - #28 =
INFO  13:09:57,124 - #9 0
INFO  13:09:57,125 - #13 ;
INFO  13:09:57,125 - #5 do
INFO  13:09:57,125 - #34 {
INFO  13:09:57,125 - #45 i
INFO  13:09:57,125 - #29 ++
INFO  13:09:57,125 - #13 ;
INFO  13:09:57,125 - #2 if
INFO  13:09:57,125 - #32 (
INFO  13:09:57,125 - #45 i
INFO  13:09:57,125 - #19 %
INFO  13:09:57,125 - #9 2
INFO  13:09:57,125 - #20 ==
INFO  13:09:57,125 - #9 1
INFO  13:09:57,125 - #33 )
INFO  13:09:57,125 - #7 continue
INFO  13:09:57,125 - #13 ;
INFO  13:09:57,125 - #45 zapreminaK
INFO  13:09:57,125 - #28 =
INFO  13:09:57,125 - #45 zapreminaK
INFO  13:09:57,125 - #15 +
INFO  13:09:57,125 - #45 predmeti
INFO  13:09:57,125 - #36 [
INFO  13:09:57,125 - #45 i
INFO  13:09:57,125 - #16 -
INFO  13:09:57,125 - #9 1
INFO  13:09:57,125 - #37 ]
INFO  13:09:57,125 - #14 .
INFO  13:09:57,125 - #45 zapremina
INFO  13:09:57,125 - #32 (
INFO  13:09:57,125 - #33 )
INFO  13:09:57,125 - #13 ;
INFO  13:09:57,125 - #45 tezinaK
INFO  13:09:57,125 - #28 =
INFO  13:09:57,125 - #45 tezinaK
INFO  13:09:57,125 - #15 +
INFO  13:09:57,125 - #45 predmeti
INFO  13:09:57,126 - #36 [
INFO  13:09:57,126 - #45 i
INFO  13:09:57,126 - #16 -
INFO  13:09:57,126 - #9 1
INFO  13:09:57,126 - #37 ]
INFO  13:09:57,126 - #14 .
INFO  13:09:57,126 - #45 Q
INFO  13:09:57,126 - #32 (
INFO  13:09:57,126 - #33 )
INFO  13:09:57,126 - #13 ;
INFO  13:09:57,126 - #45 ispis
INFO  13:09:57,126 - #32 (
INFO  13:09:57,126 - #45 predmeti
INFO  13:09:57,126 - #36 [
INFO  13:09:57,126 - #45 i
INFO  13:09:57,126 - #16 -
INFO  13:09:57,126 - #9 1
INFO  13:09:57,126 - #37 ]
INFO  13:09:57,126 - #33 )
INFO  13:09:57,126 - #13 ;
INFO  13:09:57,126 - #35 }
INFO  13:09:57,126 - #6 while
INFO  13:09:57,126 - #32 (
INFO  13:09:57,126 - #45 i
INFO  13:09:57,126 - #23 <
INFO  13:09:57,126 - #9 6
INFO  13:09:57,126 - #33 )
INFO  13:09:57,126 - #13 ;
INFO  13:09:57,126 - #41 print
INFO  13:09:57,126 - #32 (
INFO  13:09:57,126 - #45 zapreminaS
INFO  13:09:57,126 - #33 )
INFO  13:09:57,126 - #13 ;
INFO  13:09:57,126 - #41 print
INFO  13:09:57,126 - #32 (
INFO  13:09:57,126 - #45 eol
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,127 - #41 print
INFO  13:09:57,127 - #32 (
INFO  13:09:57,127 - #45 zapreminaK
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,127 - #41 print
INFO  13:09:57,127 - #32 (
INFO  13:09:57,127 - #45 eol
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,127 - #41 print
INFO  13:09:57,127 - #32 (
INFO  13:09:57,127 - #45 tezinaS
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,127 - #41 print
INFO  13:09:57,127 - #32 (
INFO  13:09:57,127 - #45 eol
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,127 - #41 print
INFO  13:09:57,127 - #32 (
INFO  13:09:57,127 - #45 tezinaK
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,127 - #41 print
INFO  13:09:57,127 - #32 (
INFO  13:09:57,127 - #45 eol
INFO  13:09:57,127 - #33 )
INFO  13:09:57,127 - #13 ;
INFO  13:09:57,128 - #35 }
INFO  13:09:57,128 - #35 }
INFO  13:09:57,128 - ***Abstract tree****
INFO  13:09:57,129 - #0
DEBUG 13:09:57,137 - program name
DEBUG 13:09:57,137 - found constant with value 4of type 1
DEBUG 13:09:57,137 - found constant with value 3of type 1
DEBUG 13:09:57,137 - ClassBegin
DEBUG 13:09:57,138 - Variable with name tezina has the address of 1
DEBUG 13:09:57,138 - Variable with name vrsta has the address of 2
DEBUG 13:09:57,139 - designator simple at line 12: tezina
DEBUG 13:09:57,139 - found constant with value 0of type 1
DEBUG 13:09:57,139 - constant factor is type 1
DEBUG 13:09:57,139 - term SingleFactorterm is type 1
DEBUG 13:09:57,139 - exprWithNoMinus is type 1
DEBUG 13:09:57,139 - designator simple at line 14: zapremina
DEBUG 13:09:57,139 - designator simple at line 14: tezina
DEBUG 13:09:57,139 - term element is type 1
DEBUG 13:09:57,139 - term list single is type 1
DEBUG 13:09:57,140 - term MultiFactorTerm is type 1
DEBUG 13:09:57,140 - exprWithNoMinus is type 1
DEBUG 13:09:57,140 - class decl end
DEBUG 13:09:57,141 - class decl 1
DEBUG 13:09:57,141 - derived ClassBegin
DEBUG 13:09:57,141 - Variable with name r has the address of 1
DEBUG 13:09:57,141 - Variable with name z has the address of 2
DEBUG 13:09:57,141 - designator simple at line 25: z
DEBUG 13:09:57,142 - designator simple at line 25: cinilac
DEBUG 13:09:57,142 - term SingleFactorterm is type 1
DEBUG 13:09:57,142 - exprWithNoMinus is type 1
DEBUG 13:09:57,142 - designator simple at line 26: z
DEBUG 13:09:57,142 - designator simple at line 26: r
DEBUG 13:09:57,142 - designator simple at line 26: delilac
DEBUG 13:09:57,142 - term element is type 1
DEBUG 13:09:57,142 - term list single is type 1
DEBUG 13:09:57,142 - term MultiFactorTerm is type 1
DEBUG 13:09:57,142 - exprWithNoMinus is type 1
DEBUG 13:09:57,142 - term element is type 1
DEBUG 13:09:57,142 - term list single is type 1
DEBUG 13:09:57,142 - term MultiFactorTerm is type 1
DEBUG 13:09:57,142 - exprWithNoMinus is type 1
DEBUG 13:09:57,142 - class decl end
DEBUG 13:09:57,143 - class decl 1
DEBUG 13:09:57,144 - derived ClassBegin
DEBUG 13:09:57,144 - Variable with name a has the address of 1
DEBUG 13:09:57,144 - Variable with name b has the address of 2
DEBUG 13:09:57,144 - Variable with name c has the address of 3
DEBUG 13:09:57,144 - Variable with name z has the address of 4
DEBUG 13:09:57,144 - designator simple at line 39: z
DEBUG 13:09:57,144 - designator simple at line 39: a
DEBUG 13:09:57,144 - designator simple at line 39: b
DEBUG 13:09:57,144 - term element is type 1
DEBUG 13:09:57,144 - term list single is type 1
DEBUG 13:09:57,144 - designator simple at line 39: c
DEBUG 13:09:57,144 - term element is type 1
DEBUG 13:09:57,144 - term list multiple is type 1
DEBUG 13:09:57,144 - term MultiFactorTerm is type 1
DEBUG 13:09:57,144 - exprWithNoMinus is type 1
DEBUG 13:09:57,144 - designator simple at line 40: z
DEBUG 13:09:57,144 - term SingleFactorterm is type 1
DEBUG 13:09:57,144 - exprWithNoMinus is type 1
DEBUG 13:09:57,144 - class decl end
DEBUG 13:09:57,144 - class decl 1
DEBUG 13:09:57,145 - Variable with name zapreminaK has the address of 1
DEBUG 13:09:57,145 - Variable with name zapreminaS has the address of 2
DEBUG 13:09:57,145 - Variable with name tezinaK has the address of 3
DEBUG 13:09:57,145 - Variable with name tezinaS has the address of 4
DEBUG 13:09:57,145 - program begin
DEBUG 13:09:57,145 - designator simple at line 51: p
DEBUG 13:09:57,145 - designator simple at line 51: vrsta
DEBUG 13:09:57,145 - term SingleFactorterm is type 2
DEBUG 13:09:57,145 - exprWithNoMinus is type 2
DEBUG 13:09:57,145 - print statement has arg of type 2
DEBUG 13:09:57,145 - designator simple at line 52: eol
DEBUG 13:09:57,145 - term SingleFactorterm is type 2
DEBUG 13:09:57,145 - exprWithNoMinus is type 2
DEBUG 13:09:57,145 - print statement has arg of type 2
DEBUG 13:09:57,145 - designator simple at line 53: p
DEBUG 13:09:57,145 - designator simple at line 53: tezina
DEBUG 13:09:57,145 - term SingleFactorterm is type 1
DEBUG 13:09:57,145 - exprWithNoMinus is type 1
DEBUG 13:09:57,145 - print statement has arg of type 1
DEBUG 13:09:57,145 - Variable with name i has the address of 1
DEBUG 13:09:57,145 - Variable with name s1 has the address of 2
DEBUG 13:09:57,145 - Variable with name s2 has the address of 3
DEBUG 13:09:57,145 - Variable with name s3 has the address of 4
DEBUG 13:09:57,145 - Variable with name k1 has the address of 5
DEBUG 13:09:57,145 - Variable with name k2 has the address of 6
DEBUG 13:09:57,145 - Variable with name k3 has the address of 7
DEBUG 13:09:57,145 - Variable with name t has the address of 8
DEBUG 13:09:57,145 - designator simple at line 59: predmeti
DEBUG 13:09:57,145 - found constant with value 6of type 1
DEBUG 13:09:57,145 - constant factor is type 1
DEBUG 13:09:57,145 - term SingleFactorterm is type 1
DEBUG 13:09:57,145 - exprWithNoMinus is type 1
DEBUG 13:09:57,145 - term SingleFactorterm is type 3
DEBUG 13:09:57,145 - exprWithNoMinus is type 3
DEBUG 13:09:57,145 - designator simple at line 60: s1
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,146 - designator simple at line 61: s2
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,146 - designator simple at line 62: s3
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,146 - designator simple at line 64: k1
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,146 - designator simple at line 65: k2
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,146 - designator simple at line 66: k3
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,146 - found constant with value 0of type 1
DEBUG 13:09:57,146 - constant factor is type 1
DEBUG 13:09:57,146 - term SingleFactorterm is type 1
DEBUG 13:09:57,146 - exprWithNoMinus is type 1
DEBUG 13:09:57,146 - designator simple at line 68: s1
DEBUG 13:09:57,146 - term SingleFactorterm is type 4
DEBUG 13:09:57,146 - exprWithNoMinus is type 4
DEBUG 13:09:57,147 - found constant with value 2of type 1
DEBUG 13:09:57,147 - constant factor is type 1
DEBUG 13:09:57,147 - term SingleFactorterm is type 1
DEBUG 13:09:57,147 - exprWithNoMinus is type 1
DEBUG 13:09:57,147 - designator simple at line 69: s2
DEBUG 13:09:57,147 - term SingleFactorterm is type 4
DEBUG 13:09:57,147 - exprWithNoMinus is type 4
DEBUG 13:09:57,147 - found constant with value 4of type 1
DEBUG 13:09:57,147 - constant factor is type 1
DEBUG 13:09:57,147 - term SingleFactorterm is type 1
DEBUG 13:09:57,147 - exprWithNoMinus is type 1
DEBUG 13:09:57,147 - designator simple at line 70: s3
DEBUG 13:09:57,147 - term SingleFactorterm is type 4
DEBUG 13:09:57,147 - exprWithNoMinus is type 4
DEBUG 13:09:57,147 - found constant with value 1of type 1
DEBUG 13:09:57,147 - constant factor is type 1
DEBUG 13:09:57,147 - term SingleFactorterm is type 1
DEBUG 13:09:57,147 - exprWithNoMinus is type 1
DEBUG 13:09:57,147 - designator simple at line 71: k1
DEBUG 13:09:57,147 - term SingleFactorterm is type 4
DEBUG 13:09:57,147 - exprWithNoMinus is type 4
DEBUG 13:09:57,147 - found constant with value 3of type 1
DEBUG 13:09:57,147 - constant factor is type 1
DEBUG 13:09:57,147 - term SingleFactorterm is type 1
DEBUG 13:09:57,147 - exprWithNoMinus is type 1
DEBUG 13:09:57,147 - designator simple at line 72: k2
DEBUG 13:09:57,147 - term SingleFactorterm is type 4
DEBUG 13:09:57,147 - exprWithNoMinus is type 4
DEBUG 13:09:57,147 - found constant with value 5of type 1
DEBUG 13:09:57,147 - constant factor is type 1
DEBUG 13:09:57,147 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - designator simple at line 73: k3
DEBUG 13:09:57,148 - term SingleFactorterm is type 4
DEBUG 13:09:57,148 - exprWithNoMinus is type 4
DEBUG 13:09:57,148 - designator simple at line 75: t
DEBUG 13:09:57,148 - designator simple at line 76: i
DEBUG 13:09:57,148 - found constant with value 0of type 1
DEBUG 13:09:57,148 - constant factor is type 1
DEBUG 13:09:57,148 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - designator simple at line 79: i
DEBUG 13:09:57,148 - designator simple at line 80: i
DEBUG 13:09:57,148 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - found constant with value 6of type 1
DEBUG 13:09:57,148 - constant factor is type 1
DEBUG 13:09:57,148 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - designator simple at line 83: i
DEBUG 13:09:57,148 - found constant with value 0of type 1
DEBUG 13:09:57,148 - constant factor is type 1
DEBUG 13:09:57,148 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - designator simple at line 84: zapreminaS
DEBUG 13:09:57,148 - found constant with value 0of type 1
DEBUG 13:09:57,148 - constant factor is type 1
DEBUG 13:09:57,148 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - designator simple at line 85: tezinaS
DEBUG 13:09:57,148 - found constant with value 0of type 1
DEBUG 13:09:57,148 - constant factor is type 1
DEBUG 13:09:57,148 - term SingleFactorterm is type 1
DEBUG 13:09:57,148 - exprWithNoMinus is type 1
DEBUG 13:09:57,148 - designator simple at line 88: i
DEBUG 13:09:57,148 - designator simple at line 89: i
DEBUG 13:09:57,148 - found constant with value 2of type 1
DEBUG 13:09:57,148 - constant factor is type 1
DEBUG 13:09:57,148 - term element is type 1
DEBUG 13:09:57,148 - term list single is type 1
DEBUG 13:09:57,148 - term MultiFactorTerm is type 1
DEBUG 13:09:57,149 - exprWithNoMinus is type 1
DEBUG 13:09:57,149 - found constant with value 0of type 1
DEBUG 13:09:57,149 - constant factor is type 1
DEBUG 13:09:57,149 - term SingleFactorterm is type 1
DEBUG 13:09:57,149 - exprWithNoMinus is type 1
DEBUG 13:09:57,149 - designator simple at line 90: zapreminaS
DEBUG 13:09:57,149 - designator simple at line 90: zapreminaS
DEBUG 13:09:57,149 - term SingleFactorterm is type 1
DEBUG 13:09:57,149 - designator simple at line 90: i
DEBUG 13:09:57,149 - term SingleFactorterm is type 1
DEBUG 13:09:57,149 - found constant with value 1of type 1
DEBUG 13:09:57,152 - constant factor is type 1
DEBUG 13:09:57,152 - term SingleFactorterm is type 1
DEBUG 13:09:57,152 - exprWithNoMinus is type 1
DEBUG 13:09:57,152 - designator simple at line 90: zapremina
DEBUG 13:09:57,152 - term SingleFactorterm is type 1
DEBUG 13:09:57,152 - exprWithNoMinus is type 1
DEBUG 13:09:57,152 - designator simple at line 91: tezinaS
DEBUG 13:09:57,152 - designator simple at line 91: tezinaS
DEBUG 13:09:57,152 - term SingleFactorterm is type 1
DEBUG 13:09:57,152 - designator simple at line 91: i
DEBUG 13:09:57,152 - term SingleFactorterm is type 1
DEBUG 13:09:57,152 - found constant with value 1of type 1
DEBUG 13:09:57,152 - constant factor is type 1
DEBUG 13:09:57,152 - term SingleFactorterm is type 1
DEBUG 13:09:57,152 - exprWithNoMinus is type 1
DEBUG 13:09:57,152 - designator simple at line 91: Q
DEBUG 13:09:57,153 - term SingleFactorterm is type 1
DEBUG 13:09:57,153 - exprWithNoMinus is type 1
DEBUG 13:09:57,153 - designator simple at line 92: ispis
DEBUG 13:09:57,153 - designator simple at line 92: i
DEBUG 13:09:57,153 - term SingleFactorterm is type 1
DEBUG 13:09:57,153 - found constant with value 1of type 1
DEBUG 13:09:57,153 - constant factor is type 1
DEBUG 13:09:57,153 - term SingleFactorterm is type 1
DEBUG 13:09:57,153 - exprWithNoMinus is type 1
DEBUG 13:09:57,153 - term SingleFactorterm is type 4
DEBUG 13:09:57,153 - exprWithNoMinus is type 4
DEBUG 13:09:57,153 - designator simple at line 93: i
DEBUG 13:09:57,153 - term SingleFactorterm is type 1
DEBUG 13:09:57,153 - exprWithNoMinus is type 1
DEBUG 13:09:57,153 - found constant with value 6of type 1
DEBUG 13:09:57,154 - constant factor is type 1
DEBUG 13:09:57,154 - term SingleFactorterm is type 1
DEBUG 13:09:57,154 - exprWithNoMinus is type 1
DEBUG 13:09:57,154 - designator simple at line 95: i
DEBUG 13:09:57,154 - found constant with value 0of type 1
DEBUG 13:09:57,154 - constant factor is type 1
DEBUG 13:09:57,154 - term SingleFactorterm is type 1
DEBUG 13:09:57,154 - exprWithNoMinus is type 1
DEBUG 13:09:57,154 - designator simple at line 96: zapreminaK
DEBUG 13:09:57,154 - found constant with value 0of type 1
DEBUG 13:09:57,154 - constant factor is type 1
DEBUG 13:09:57,154 - term SingleFactorterm is type 1
DEBUG 13:09:57,154 - exprWithNoMinus is type 1
DEBUG 13:09:57,154 - designator simple at line 96: tezinaK
DEBUG 13:09:57,154 - found constant with value 0of type 1
DEBUG 13:09:57,155 - constant factor is type 1
DEBUG 13:09:57,155 - term SingleFactorterm is type 1
DEBUG 13:09:57,155 - exprWithNoMinus is type 1
DEBUG 13:09:57,155 - designator simple at line 99: i
DEBUG 13:09:57,155 - designator simple at line 100: i
DEBUG 13:09:57,155 - found constant with value 2of type 1
DEBUG 13:09:57,155 - constant factor is type 1
DEBUG 13:09:57,155 - term element is type 1
DEBUG 13:09:57,155 - term list single is type 1
DEBUG 13:09:57,155 - term MultiFactorTerm is type 1
DEBUG 13:09:57,155 - exprWithNoMinus is type 1
DEBUG 13:09:57,155 - found constant with value 1of type 1
DEBUG 13:09:57,155 - constant factor is type 1
DEBUG 13:09:57,155 - term SingleFactorterm is type 1
DEBUG 13:09:57,155 - exprWithNoMinus is type 1
DEBUG 13:09:57,155 - designator simple at line 101: zapreminaK
DEBUG 13:09:57,155 - designator simple at line 101: zapreminaK
DEBUG 13:09:57,155 - term SingleFactorterm is type 1
DEBUG 13:09:57,155 - designator simple at line 101: i
DEBUG 13:09:57,155 - term SingleFactorterm is type 1
DEBUG 13:09:57,155 - found constant with value 1of type 1
DEBUG 13:09:57,155 - constant factor is type 1
DEBUG 13:09:57,155 - term SingleFactorterm is type 1
DEBUG 13:09:57,155 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - designator simple at line 101: zapremina
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - designator simple at line 102: tezinaK
DEBUG 13:09:57,156 - designator simple at line 102: tezinaK
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - designator simple at line 102: i
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - found constant with value 1of type 1
DEBUG 13:09:57,156 - constant factor is type 1
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - designator simple at line 102: Q
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - designator simple at line 103: ispis
DEBUG 13:09:57,156 - designator simple at line 103: i
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - found constant with value 1of type 1
DEBUG 13:09:57,156 - constant factor is type 1
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - term SingleFactorterm is type 4
DEBUG 13:09:57,156 - exprWithNoMinus is type 4
DEBUG 13:09:57,156 - designator simple at line 104: i
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - found constant with value 6of type 1
DEBUG 13:09:57,156 - constant factor is type 1
DEBUG 13:09:57,156 - term SingleFactorterm is type 1
DEBUG 13:09:57,156 - exprWithNoMinus is type 1
DEBUG 13:09:57,156 - designator simple at line 106: zapreminaS
DEBUG 13:09:57,157 - term SingleFactorterm is type 1
DEBUG 13:09:57,157 - exprWithNoMinus is type 1
DEBUG 13:09:57,157 - print statement has arg of type 1
DEBUG 13:09:57,157 - designator simple at line 106: eol
DEBUG 13:09:57,157 - term SingleFactorterm is type 2
DEBUG 13:09:57,157 - exprWithNoMinus is type 2
DEBUG 13:09:57,157 - print statement has arg of type 2
DEBUG 13:09:57,157 - designator simple at line 107: zapreminaK
DEBUG 13:09:57,157 - term SingleFactorterm is type 1
DEBUG 13:09:57,157 - exprWithNoMinus is type 1
DEBUG 13:09:57,157 - print statement has arg of type 1
DEBUG 13:09:57,157 - designator simple at line 107: eol
DEBUG 13:09:57,157 - term SingleFactorterm is type 2
DEBUG 13:09:57,157 - exprWithNoMinus is type 2
DEBUG 13:09:57,157 - print statement has arg of type 2
DEBUG 13:09:57,157 - designator simple at line 108: tezinaS
DEBUG 13:09:57,157 - term SingleFactorterm is type 1
DEBUG 13:09:57,157 - exprWithNoMinus is type 1
DEBUG 13:09:57,157 - print statement has arg of type 1
DEBUG 13:09:57,157 - designator simple at line 108: eol
DEBUG 13:09:57,157 - term SingleFactorterm is type 2
DEBUG 13:09:57,157 - exprWithNoMinus is type 2
DEBUG 13:09:57,157 - print statement has arg of type 2
DEBUG 13:09:57,157 - designator simple at line 109: tezinaK
DEBUG 13:09:57,157 - term SingleFactorterm is type 1
DEBUG 13:09:57,157 - exprWithNoMinus is type 1
DEBUG 13:09:57,157 - print statement has arg of type 1
DEBUG 13:09:57,157 - designator simple at line 109: eol
DEBUG 13:09:57,157 - term SingleFactorterm is type 2
DEBUG 13:09:57,157 - exprWithNoMinus is type 2
DEBUG 13:09:57,157 - print statement has arg of type 2
INFO  13:09:57,157 - Print calls = 0
DEBUG 13:09:57,158 - Sfera
	ucitajTezinu(0); Q(0); zapremina(0); 
Predmet
	ucitajTezinu(0); zapremina(0); Q(0); 
Kvadar
	ucitajTezinu(0); Q(0); zapremina(0); 

INFO  13:09:57,160 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
DEBUG 13:09:57,177 - class methoad call zapremina
DEBUG 13:09:57,178 - updating vTableAddress by Predmet class. OldValue =  5
DEBUG 13:09:57,178 - ^new value = 34
DEBUG 13:09:57,178 - updating vTableAddress by Sfera class. OldValue =  34
DEBUG 13:09:57,178 - ^new value = 63
DEBUG 13:09:57,178 - updating vTableAddress by Kvadar class. OldValue =  63
DEBUG 13:09:57,178 - ^new value = 92
DEBUG 13:09:57,179 - new called with level = 3
DEBUG 13:09:57,179 - class is 4
DEBUG 13:09:57,179 - new called with level = 3
DEBUG 13:09:57,179 - class is 4
DEBUG 13:09:57,179 - new called with level = 3
DEBUG 13:09:57,179 - class is 4
DEBUG 13:09:57,179 - new called with level = 5
DEBUG 13:09:57,179 - class is 4
DEBUG 13:09:57,179 - new called with level = 5
DEBUG 13:09:57,179 - class is 4
DEBUG 13:09:57,179 - new called with level = 5
DEBUG 13:09:57,179 - class is 4
DEBUG 13:09:57,198 - class methoad call zapremina
DEBUG 13:09:57,198 - class methoad call Q
DEBUG 13:09:57,198 - class methoad call ispis
DEBUG 13:09:57,199 - class methoad call zapremina
DEBUG 13:09:57,199 - class methoad call Q
DEBUG 13:09:57,199 - class methoad call ispis
INFO  13:09:57,203 - Finished code generation
INFO  13:09:57,203 - Sfera
	ucitajTezinu(0); Q(0); zapremina(85); 
Predmet
	ucitajTezinu(0); zapremina(11); Q(20); 
Kvadar
	ucitajTezinu(0); Q(0); zapremina(109); 

INFO  13:09:57,203 - Parsiranje uspesno zavrseno!
