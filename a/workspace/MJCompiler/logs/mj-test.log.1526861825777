INFO  02:15:56,390 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  02:15:56,447 - #40 program
INFO  02:15:56,447 - #45 test_303
INFO  02:15:56,447 - #44 const
INFO  02:15:56,448 - #45 int
INFO  02:15:56,448 - #45 cinilac
INFO  02:15:56,448 - #28 =
INFO  02:15:56,448 - #9 4
INFO  02:15:56,448 - #12 ,
INFO  02:15:56,448 - #45 delilac
INFO  02:15:56,448 - #28 =
INFO  02:15:56,448 - #9 3
INFO  02:15:56,448 - #13 ;
INFO  02:15:56,449 - #38 class
INFO  02:15:56,449 - #45 Predmet
INFO  02:15:56,449 - #34 {
INFO  02:15:56,449 - #45 int
INFO  02:15:56,449 - #45 tezina
INFO  02:15:56,449 - #13 ;
INFO  02:15:56,449 - #45 char
INFO  02:15:56,450 - #45 vrsta
INFO  02:15:56,450 - #13 ;
INFO  02:15:56,451 - #34 {
INFO  02:15:56,451 - #43 void
INFO  02:15:56,451 - #45 postaviTezinu
INFO  02:15:56,452 - #32 (
INFO  02:15:56,452 - #45 int
INFO  02:15:56,452 - #45 tezina
INFO  02:15:56,452 - #33 )
INFO  02:15:56,453 - #34 {
INFO  02:15:56,453 - #45 this
INFO  02:15:56,453 - #14 .
INFO  02:15:56,454 - #45 tezina
INFO  02:15:56,454 - #28 =
INFO  02:15:56,454 - #45 tezina
INFO  02:15:56,454 - #13 ;
INFO  02:15:56,455 - #35 }
INFO  02:15:56,455 - #43 void
INFO  02:15:56,456 - #45 ucitajTezinu
INFO  02:15:56,456 - #32 (
INFO  02:15:56,456 - #33 )
INFO  02:15:56,456 - #34 {
INFO  02:15:56,456 - #42 read
INFO  02:15:56,456 - #32 (
INFO  02:15:56,456 - #45 tezina
INFO  02:15:56,456 - #33 )
INFO  02:15:56,456 - #13 ;
INFO  02:15:56,456 - #35 }
INFO  02:15:56,457 - #45 int
INFO  02:15:56,457 - #45 zapremina
INFO  02:15:56,457 - #32 (
INFO  02:15:56,457 - #33 )
INFO  02:15:56,457 - #34 {
INFO  02:15:56,457 - #8 return
INFO  02:15:56,457 - #9 0
INFO  02:15:56,457 - #13 ;
INFO  02:15:56,457 - #35 }
INFO  02:15:56,457 - #45 int
INFO  02:15:56,458 - #45 Q
INFO  02:15:56,458 - #32 (
INFO  02:15:56,458 - #33 )
INFO  02:15:56,458 - #34 {
INFO  02:15:56,458 - #8 return
INFO  02:15:56,458 - #45 zapremina
INFO  02:15:56,458 - #32 (
INFO  02:15:56,458 - #33 )
INFO  02:15:56,458 - #17 *
INFO  02:15:56,458 - #45 tezina
INFO  02:15:56,459 - #13 ;
INFO  02:15:56,460 - #35 }
INFO  02:15:56,460 - #43 void
INFO  02:15:56,460 - #45 postaviVrstu
INFO  02:15:56,460 - #32 (
INFO  02:15:56,460 - #45 char
INFO  02:15:56,460 - #45 vrsta
INFO  02:15:56,460 - #33 )
INFO  02:15:56,460 - #34 {
INFO  02:15:56,460 - #45 this
INFO  02:15:56,460 - #14 .
INFO  02:15:56,460 - #45 vrsta
INFO  02:15:56,460 - #28 =
INFO  02:15:56,460 - #45 vrsta
INFO  02:15:56,461 - #13 ;
INFO  02:15:56,461 - #35 }
INFO  02:15:56,461 - #35 }
INFO  02:15:56,461 - #35 }
INFO  02:15:56,461 - #38 class
INFO  02:15:56,462 - #45 Sfera
INFO  02:15:56,462 - #39 extends
INFO  02:15:56,462 - #45 Predmet
INFO  02:15:56,462 - #34 {
INFO  02:15:56,462 - #45 int
INFO  02:15:56,462 - #45 r
INFO  02:15:56,462 - #13 ;
INFO  02:15:56,463 - #34 {
INFO  02:15:56,463 - #43 void
INFO  02:15:56,463 - #45 postaviTezinu
INFO  02:15:56,463 - #32 (
INFO  02:15:56,463 - #45 int
INFO  02:15:56,463 - #45 tezina
INFO  02:15:56,463 - #33 )
INFO  02:15:56,463 - #34 {
INFO  02:15:56,463 - #45 this
INFO  02:15:56,463 - #14 .
INFO  02:15:56,463 - #45 tezina
INFO  02:15:56,463 - #28 =
INFO  02:15:56,463 - #45 tezina
INFO  02:15:56,463 - #13 ;
INFO  02:15:56,463 - #45 vrsta
INFO  02:15:56,463 - #28 =
INFO  02:15:56,464 - #10 s
INFO  02:15:56,464 - #13 ;
INFO  02:15:56,464 - #35 }
INFO  02:15:56,464 - #43 void
INFO  02:15:56,464 - #45 postaviPoluprecnik
INFO  02:15:56,464 - #32 (
INFO  02:15:56,464 - #45 int
INFO  02:15:56,464 - #45 r
INFO  02:15:56,464 - #33 )
INFO  02:15:56,464 - #34 {
INFO  02:15:56,464 - #45 this
INFO  02:15:56,464 - #14 .
INFO  02:15:56,465 - #45 r
INFO  02:15:56,465 - #28 =
INFO  02:15:56,465 - #45 r
INFO  02:15:56,465 - #13 ;
INFO  02:15:56,465 - #45 postaviVrstu
INFO  02:15:56,465 - #32 (
INFO  02:15:56,465 - #10 s
INFO  02:15:56,465 - #33 )
INFO  02:15:56,466 - #13 ;
INFO  02:15:56,466 - #35 }
INFO  02:15:56,466 - #45 int
INFO  02:15:56,466 - #45 zapremina
INFO  02:15:56,466 - #32 (
INFO  02:15:56,466 - #33 )
INFO  02:15:56,466 - #45 int
INFO  02:15:56,467 - #45 z
INFO  02:15:56,467 - #13 ;
INFO  02:15:56,467 - #34 {
INFO  02:15:56,467 - #45 z
INFO  02:15:56,467 - #28 =
INFO  02:15:56,467 - #45 cinilac
INFO  02:15:56,467 - #13 ;
INFO  02:15:56,467 - #8 return
INFO  02:15:56,467 - #45 z
INFO  02:15:56,467 - #17 *
INFO  02:15:56,467 - #32 (
INFO  02:15:56,467 - #45 r
INFO  02:15:56,467 - #18 /
INFO  02:15:56,467 - #45 delilac
INFO  02:15:56,468 - #33 )
INFO  02:15:56,468 - #13 ;
INFO  02:15:56,468 - #35 }
INFO  02:15:56,468 - #35 }
INFO  02:15:56,468 - #35 }
INFO  02:15:56,468 - #38 class
INFO  02:15:56,468 - #45 Kvadar
INFO  02:15:56,468 - #39 extends
INFO  02:15:56,468 - #45 Predmet
INFO  02:15:56,468 - #34 {
INFO  02:15:56,468 - #45 int
INFO  02:15:56,468 - #45 a
INFO  02:15:56,468 - #12 ,
INFO  02:15:56,468 - #45 b
INFO  02:15:56,468 - #12 ,
INFO  02:15:56,469 - #45 c
INFO  02:15:56,469 - #13 ;
INFO  02:15:56,469 - #34 {
INFO  02:15:56,469 - #43 void
INFO  02:15:56,469 - #45 postaviTezinu
INFO  02:15:56,469 - #32 (
INFO  02:15:56,469 - #45 int
INFO  02:15:56,469 - #45 tezina
INFO  02:15:56,469 - #33 )
INFO  02:15:56,469 - #34 {
INFO  02:15:56,469 - #45 this
INFO  02:15:56,469 - #14 .
INFO  02:15:56,469 - #45 tezina
INFO  02:15:56,469 - #28 =
INFO  02:15:56,469 - #45 tezina
INFO  02:15:56,469 - #13 ;
INFO  02:15:56,469 - #45 vrsta
INFO  02:15:56,469 - #28 =
INFO  02:15:56,469 - #10 k
INFO  02:15:56,469 - #13 ;
INFO  02:15:56,470 - #35 }
INFO  02:15:56,470 - #43 void
INFO  02:15:56,470 - #45 postaviStranice
INFO  02:15:56,470 - #32 (
INFO  02:15:56,470 - #45 int
INFO  02:15:56,470 - #45 a
INFO  02:15:56,470 - #12 ,
INFO  02:15:56,470 - #45 int
INFO  02:15:56,470 - #45 b
INFO  02:15:56,470 - #12 ,
INFO  02:15:56,470 - #45 int
INFO  02:15:56,470 - #45 c
INFO  02:15:56,470 - #33 )
INFO  02:15:56,470 - #34 {
INFO  02:15:56,470 - #45 this
INFO  02:15:56,470 - #14 .
INFO  02:15:56,470 - #45 a
INFO  02:15:56,470 - #28 =
INFO  02:15:56,470 - #45 a
INFO  02:15:56,470 - #13 ;
INFO  02:15:56,470 - #45 this
INFO  02:15:56,471 - #14 .
INFO  02:15:56,471 - #45 b
INFO  02:15:56,471 - #28 =
INFO  02:15:56,471 - #45 b
INFO  02:15:56,471 - #13 ;
INFO  02:15:56,471 - #45 this
INFO  02:15:56,471 - #14 .
INFO  02:15:56,471 - #45 c
INFO  02:15:56,471 - #28 =
INFO  02:15:56,471 - #45 c
INFO  02:15:56,471 - #13 ;
INFO  02:15:56,471 - #45 vrsta
INFO  02:15:56,471 - #28 =
INFO  02:15:56,471 - #10 k
INFO  02:15:56,471 - #13 ;
INFO  02:15:56,471 - #35 }
INFO  02:15:56,471 - #45 int
INFO  02:15:56,471 - #45 zapremina
INFO  02:15:56,471 - #32 (
INFO  02:15:56,471 - #33 )
INFO  02:15:56,471 - #45 int
INFO  02:15:56,471 - #45 z
INFO  02:15:56,471 - #13 ;
INFO  02:15:56,472 - #34 {
INFO  02:15:56,472 - #45 z
INFO  02:15:56,472 - #28 =
INFO  02:15:56,472 - #45 a
INFO  02:15:56,472 - #17 *
INFO  02:15:56,472 - #45 b
INFO  02:15:56,472 - #17 *
INFO  02:15:56,472 - #45 c
INFO  02:15:56,472 - #13 ;
INFO  02:15:56,472 - #8 return
INFO  02:15:56,472 - #45 z
INFO  02:15:56,472 - #13 ;
INFO  02:15:56,472 - #35 }
INFO  02:15:56,472 - #35 }
INFO  02:15:56,472 - #35 }
INFO  02:15:56,472 - #45 int
INFO  02:15:56,472 - #45 zapreminaK
INFO  02:15:56,472 - #12 ,
INFO  02:15:56,473 - #45 zapreminaS
INFO  02:15:56,473 - #13 ;
INFO  02:15:56,473 - #45 int
INFO  02:15:56,473 - #45 tezinaK
INFO  02:15:56,473 - #12 ,
INFO  02:15:56,473 - #45 tezinaS
INFO  02:15:56,473 - #13 ;
INFO  02:15:56,473 - #34 {
INFO  02:15:56,473 - #43 void
INFO  02:15:56,474 - #45 ispis
INFO  02:15:56,474 - #32 (
INFO  02:15:56,474 - #45 Predmet
INFO  02:15:56,474 - #45 p
INFO  02:15:56,474 - #33 )
INFO  02:15:56,474 - #34 {
INFO  02:15:56,474 - #41 print
INFO  02:15:56,474 - #32 (
INFO  02:15:56,474 - #45 p
INFO  02:15:56,474 - #14 .
INFO  02:15:56,474 - #45 vrsta
INFO  02:15:56,474 - #33 )
INFO  02:15:56,475 - #13 ;
INFO  02:15:56,475 - #41 print
INFO  02:15:56,475 - #32 (
INFO  02:15:56,475 - #45 eol
INFO  02:15:56,475 - #33 )
INFO  02:15:56,475 - #13 ;
INFO  02:15:56,475 - #41 print
INFO  02:15:56,475 - #32 (
INFO  02:15:56,475 - #45 p
INFO  02:15:56,475 - #14 .
INFO  02:15:56,475 - #45 tezina
INFO  02:15:56,475 - #33 )
INFO  02:15:56,475 - #13 ;
INFO  02:15:56,475 - #35 }
INFO  02:15:56,475 - #43 void
INFO  02:15:56,475 - #45 main
INFO  02:15:56,475 - #32 (
INFO  02:15:56,475 - #33 )
INFO  02:15:56,476 - #45 Predmet
INFO  02:15:56,476 - #45 predmeti
INFO  02:15:56,476 - #36 [
INFO  02:15:56,476 - #37 ]
INFO  02:15:56,476 - #13 ;
INFO  02:15:56,476 - #45 int
INFO  02:15:56,476 - #45 i
INFO  02:15:56,476 - #13 ;
INFO  02:15:56,476 - #45 Sfera
INFO  02:15:56,476 - #45 s1
INFO  02:15:56,476 - #12 ,
INFO  02:15:56,476 - #45 s2
INFO  02:15:56,476 - #12 ,
INFO  02:15:56,476 - #45 s3
INFO  02:15:56,476 - #13 ;
INFO  02:15:56,476 - #45 Kvadar
INFO  02:15:56,476 - #45 k1
INFO  02:15:56,476 - #12 ,
INFO  02:15:56,476 - #45 k2
INFO  02:15:56,476 - #12 ,
INFO  02:15:56,476 - #45 k3
INFO  02:15:56,476 - #13 ;
INFO  02:15:56,476 - #45 int
INFO  02:15:56,476 - #45 t
INFO  02:15:56,476 - #13 ;
INFO  02:15:56,476 - #34 {
INFO  02:15:56,476 - #45 predmeti
INFO  02:15:56,477 - #28 =
INFO  02:15:56,477 - #31 new
INFO  02:15:56,477 - #45 Predmet
INFO  02:15:56,477 - #36 [
INFO  02:15:56,477 - #9 6
INFO  02:15:56,477 - #37 ]
INFO  02:15:56,477 - #13 ;
INFO  02:15:56,477 - #45 s1
INFO  02:15:56,477 - #28 =
INFO  02:15:56,477 - #31 new
INFO  02:15:56,477 - #45 Sfera
INFO  02:15:56,477 - #13 ;
INFO  02:15:56,477 - #45 s2
INFO  02:15:56,477 - #28 =
INFO  02:15:56,477 - #31 new
INFO  02:15:56,477 - #45 Sfera
INFO  02:15:56,477 - #13 ;
INFO  02:15:56,477 - #45 s3
INFO  02:15:56,477 - #28 =
INFO  02:15:56,477 - #31 new
INFO  02:15:56,478 - #45 Sfera
INFO  02:15:56,478 - #13 ;
INFO  02:15:56,478 - #45 k1
INFO  02:15:56,478 - #28 =
INFO  02:15:56,478 - #31 new
INFO  02:15:56,478 - #45 Kvadar
INFO  02:15:56,478 - #13 ;
INFO  02:15:56,478 - #45 k2
INFO  02:15:56,478 - #28 =
INFO  02:15:56,478 - #31 new
INFO  02:15:56,478 - #45 Kvadar
INFO  02:15:56,478 - #13 ;
INFO  02:15:56,478 - #45 k3
INFO  02:15:56,478 - #28 =
INFO  02:15:56,478 - #31 new
INFO  02:15:56,478 - #45 Kvadar
INFO  02:15:56,478 - #13 ;
INFO  02:15:56,478 - #45 s1
INFO  02:15:56,478 - #14 .
INFO  02:15:56,478 - #45 postaviPoluprecnik
INFO  02:15:56,478 - #32 (
INFO  02:15:56,478 - #9 1
INFO  02:15:56,478 - #33 )
INFO  02:15:56,478 - #13 ;
INFO  02:15:56,479 - #45 s2
INFO  02:15:56,479 - #14 .
INFO  02:15:56,479 - #45 postaviPoluprecnik
INFO  02:15:56,479 - #32 (
INFO  02:15:56,479 - #9 2
INFO  02:15:56,479 - #33 )
INFO  02:15:56,479 - #13 ;
INFO  02:15:56,479 - #45 s3
INFO  02:15:56,479 - #14 .
INFO  02:15:56,479 - #45 postaviPoluprecnik
INFO  02:15:56,479 - #32 (
INFO  02:15:56,479 - #9 3
INFO  02:15:56,479 - #33 )
INFO  02:15:56,479 - #13 ;
INFO  02:15:56,479 - #45 k1
INFO  02:15:56,479 - #14 .
INFO  02:15:56,479 - #45 postaviStranice
INFO  02:15:56,479 - #32 (
INFO  02:15:56,479 - #9 1
INFO  02:15:56,479 - #12 ,
INFO  02:15:56,479 - #9 2
INFO  02:15:56,479 - #12 ,
INFO  02:15:56,480 - #9 3
INFO  02:15:56,480 - #33 )
INFO  02:15:56,480 - #13 ;
INFO  02:15:56,480 - #45 k2
INFO  02:15:56,480 - #14 .
INFO  02:15:56,480 - #45 postaviStranice
INFO  02:15:56,480 - #32 (
INFO  02:15:56,480 - #9 2
INFO  02:15:56,480 - #12 ,
INFO  02:15:56,480 - #9 3
INFO  02:15:56,480 - #12 ,
INFO  02:15:56,480 - #9 4
INFO  02:15:56,480 - #33 )
INFO  02:15:56,480 - #13 ;
INFO  02:15:56,480 - #45 k3
INFO  02:15:56,480 - #14 .
INFO  02:15:56,480 - #45 postaviStranice
INFO  02:15:56,480 - #32 (
INFO  02:15:56,480 - #9 3
INFO  02:15:56,480 - #12 ,
INFO  02:15:56,480 - #9 4
INFO  02:15:56,480 - #12 ,
INFO  02:15:56,480 - #9 5
INFO  02:15:56,480 - #33 )
INFO  02:15:56,480 - #13 ;
INFO  02:15:56,481 - #45 predmeti
INFO  02:15:56,481 - #36 [
INFO  02:15:56,481 - #9 0
INFO  02:15:56,481 - #37 ]
INFO  02:15:56,481 - #28 =
INFO  02:15:56,481 - #45 s1
INFO  02:15:56,481 - #13 ;
INFO  02:15:56,481 - #45 predmeti
INFO  02:15:56,481 - #36 [
INFO  02:15:56,481 - #9 2
INFO  02:15:56,481 - #37 ]
INFO  02:15:56,481 - #28 =
INFO  02:15:56,481 - #45 s2
INFO  02:15:56,481 - #13 ;
INFO  02:15:56,481 - #45 predmeti
INFO  02:15:56,481 - #36 [
INFO  02:15:56,481 - #9 4
INFO  02:15:56,481 - #37 ]
INFO  02:15:56,481 - #28 =
INFO  02:15:56,482 - #45 s3
INFO  02:15:56,482 - #13 ;
INFO  02:15:56,482 - #45 predmeti
INFO  02:15:56,482 - #36 [
INFO  02:15:56,482 - #9 1
INFO  02:15:56,482 - #37 ]
INFO  02:15:56,482 - #28 =
INFO  02:15:56,482 - #45 k1
INFO  02:15:56,482 - #13 ;
INFO  02:15:56,482 - #45 predmeti
INFO  02:15:56,482 - #36 [
INFO  02:15:56,482 - #9 3
INFO  02:15:56,482 - #37 ]
INFO  02:15:56,482 - #28 =
INFO  02:15:56,482 - #45 k2
INFO  02:15:56,482 - #13 ;
INFO  02:15:56,482 - #45 predmeti
INFO  02:15:56,482 - #36 [
INFO  02:15:56,482 - #9 5
INFO  02:15:56,482 - #37 ]
INFO  02:15:56,482 - #28 =
INFO  02:15:56,482 - #45 k3
INFO  02:15:56,482 - #13 ;
INFO  02:15:56,482 - #42 read
INFO  02:15:56,482 - #32 (
INFO  02:15:56,482 - #45 t
INFO  02:15:56,482 - #33 )
INFO  02:15:56,483 - #13 ;
INFO  02:15:56,483 - #45 i
INFO  02:15:56,483 - #28 =
INFO  02:15:56,483 - #9 0
INFO  02:15:56,483 - #13 ;
INFO  02:15:56,483 - #5 do
INFO  02:15:56,483 - #34 {
INFO  02:15:56,483 - #45 predmeti
INFO  02:15:56,483 - #36 [
INFO  02:15:56,484 - #45 i
INFO  02:15:56,484 - #37 ]
INFO  02:15:56,484 - #14 .
INFO  02:15:56,484 - #45 postaviTezinu
INFO  02:15:56,484 - #32 (
INFO  02:15:56,484 - #45 t
INFO  02:15:56,484 - #33 )
INFO  02:15:56,484 - #13 ;
INFO  02:15:56,484 - #45 i
INFO  02:15:56,484 - #29 ++
INFO  02:15:56,484 - #13 ;
INFO  02:15:56,484 - #35 }
INFO  02:15:56,484 - #6 while
INFO  02:15:56,484 - #32 (
INFO  02:15:56,484 - #45 i
INFO  02:15:56,485 - #23 <
INFO  02:15:56,485 - #9 6
INFO  02:15:56,486 - #33 )
INFO  02:15:56,487 - #13 ;
INFO  02:15:56,487 - #45 i
INFO  02:15:56,487 - #28 =
INFO  02:15:56,487 - #9 0
INFO  02:15:56,487 - #13 ;
INFO  02:15:56,487 - #45 zapreminaS
INFO  02:15:56,487 - #28 =
INFO  02:15:56,487 - #9 0
INFO  02:15:56,487 - #13 ;
INFO  02:15:56,487 - #45 tezinaS
INFO  02:15:56,487 - #28 =
INFO  02:15:56,487 - #9 0
INFO  02:15:56,487 - #13 ;
INFO  02:15:56,487 - #5 do
INFO  02:15:56,487 - #34 {
INFO  02:15:56,487 - #45 i
INFO  02:15:56,487 - #29 ++
INFO  02:15:56,487 - #13 ;
INFO  02:15:56,487 - #2 if
INFO  02:15:56,487 - #32 (
INFO  02:15:56,487 - #45 i
INFO  02:15:56,487 - #19 %
INFO  02:15:56,488 - #9 2
INFO  02:15:56,488 - #20 ==
INFO  02:15:56,488 - #9 0
INFO  02:15:56,489 - #33 )
INFO  02:15:56,489 - #7 continue
INFO  02:15:56,489 - #13 ;
INFO  02:15:56,489 - #45 zapreminaS
INFO  02:15:56,490 - #28 =
INFO  02:15:56,490 - #45 zapreminaS
INFO  02:15:56,490 - #15 +
INFO  02:15:56,490 - #45 predmeti
INFO  02:15:56,491 - #36 [
INFO  02:15:56,491 - #45 i
INFO  02:15:56,491 - #16 -
INFO  02:15:56,491 - #9 1
INFO  02:15:56,491 - #37 ]
INFO  02:15:56,492 - #14 .
INFO  02:15:56,492 - #45 zapremina
INFO  02:15:56,492 - #32 (
INFO  02:15:56,492 - #33 )
INFO  02:15:56,492 - #13 ;
INFO  02:15:56,492 - #45 tezinaS
INFO  02:15:56,492 - #28 =
INFO  02:15:56,492 - #45 tezinaS
INFO  02:15:56,492 - #15 +
INFO  02:15:56,492 - #45 predmeti
INFO  02:15:56,492 - #36 [
INFO  02:15:56,492 - #45 i
INFO  02:15:56,492 - #16 -
INFO  02:15:56,492 - #9 1
INFO  02:15:56,492 - #37 ]
INFO  02:15:56,492 - #14 .
INFO  02:15:56,492 - #45 Q
INFO  02:15:56,492 - #32 (
INFO  02:15:56,492 - #33 )
INFO  02:15:56,492 - #13 ;
INFO  02:15:56,492 - #45 ispis
INFO  02:15:56,492 - #32 (
INFO  02:15:56,493 - #45 predmeti
INFO  02:15:56,493 - #36 [
INFO  02:15:56,493 - #45 i
INFO  02:15:56,493 - #16 -
INFO  02:15:56,493 - #9 1
INFO  02:15:56,493 - #37 ]
INFO  02:15:56,493 - #33 )
INFO  02:15:56,493 - #13 ;
INFO  02:15:56,493 - #35 }
INFO  02:15:56,493 - #6 while
INFO  02:15:56,493 - #32 (
INFO  02:15:56,493 - #45 i
INFO  02:15:56,493 - #23 <
INFO  02:15:56,493 - #9 6
INFO  02:15:56,493 - #33 )
INFO  02:15:56,493 - #13 ;
INFO  02:15:56,493 - #45 i
INFO  02:15:56,493 - #28 =
INFO  02:15:56,493 - #9 0
INFO  02:15:56,493 - #13 ;
INFO  02:15:56,493 - #45 zapreminaK
INFO  02:15:56,493 - #28 =
INFO  02:15:56,493 - #9 0
INFO  02:15:56,493 - #13 ;
INFO  02:15:56,493 - #45 tezinaK
INFO  02:15:56,493 - #28 =
INFO  02:15:56,493 - #9 0
INFO  02:15:56,493 - #13 ;
INFO  02:15:56,493 - #5 do
INFO  02:15:56,493 - #34 {
INFO  02:15:56,493 - #45 i
INFO  02:15:56,493 - #29 ++
INFO  02:15:56,493 - #13 ;
INFO  02:15:56,493 - #2 if
INFO  02:15:56,493 - #32 (
INFO  02:15:56,493 - #45 i
INFO  02:15:56,493 - #19 %
INFO  02:15:56,493 - #9 2
INFO  02:15:56,494 - #20 ==
INFO  02:15:56,494 - #9 1
INFO  02:15:56,494 - #33 )
INFO  02:15:56,494 - #7 continue
INFO  02:15:56,494 - #13 ;
INFO  02:15:56,494 - #45 zapreminaK
INFO  02:15:56,494 - #28 =
INFO  02:15:56,494 - #45 zapreminaK
INFO  02:15:56,494 - #15 +
INFO  02:15:56,494 - #45 predmeti
INFO  02:15:56,494 - #36 [
INFO  02:15:56,494 - #45 i
INFO  02:15:56,494 - #16 -
INFO  02:15:56,494 - #9 1
INFO  02:15:56,494 - #37 ]
INFO  02:15:56,494 - #14 .
INFO  02:15:56,494 - #45 zapremina
INFO  02:15:56,494 - #32 (
INFO  02:15:56,494 - #33 )
INFO  02:15:56,494 - #13 ;
INFO  02:15:56,494 - #45 tezinaK
INFO  02:15:56,494 - #28 =
INFO  02:15:56,494 - #45 tezinaK
INFO  02:15:56,494 - #15 +
INFO  02:15:56,494 - #45 predmeti
INFO  02:15:56,494 - #36 [
INFO  02:15:56,494 - #45 i
INFO  02:15:56,494 - #16 -
INFO  02:15:56,494 - #9 1
INFO  02:15:56,494 - #37 ]
INFO  02:15:56,494 - #14 .
INFO  02:15:56,494 - #45 Q
INFO  02:15:56,494 - #32 (
INFO  02:15:56,494 - #33 )
INFO  02:15:56,494 - #13 ;
INFO  02:15:56,494 - #45 ispis
INFO  02:15:56,494 - #32 (
INFO  02:15:56,494 - #45 predmeti
INFO  02:15:56,494 - #36 [
INFO  02:15:56,494 - #45 i
INFO  02:15:56,494 - #16 -
INFO  02:15:56,494 - #9 1
INFO  02:15:56,495 - #37 ]
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #35 }
INFO  02:15:56,495 - #6 while
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 i
INFO  02:15:56,495 - #23 <
INFO  02:15:56,495 - #9 6
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 zapreminaS
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 eol
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 zapreminaK
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 eol
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 tezinaS
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,495 - #45 eol
INFO  02:15:56,495 - #33 )
INFO  02:15:56,495 - #13 ;
INFO  02:15:56,495 - #41 print
INFO  02:15:56,495 - #32 (
INFO  02:15:56,496 - #45 tezinaK
INFO  02:15:56,496 - #33 )
INFO  02:15:56,496 - #13 ;
INFO  02:15:56,496 - #41 print
INFO  02:15:56,496 - #32 (
INFO  02:15:56,496 - #45 eol
INFO  02:15:56,496 - #33 )
INFO  02:15:56,496 - #13 ;
INFO  02:15:56,496 - #35 }
INFO  02:15:56,496 - #35 }
INFO  02:15:56,497 - ***Abstract tree****
INFO  02:15:56,497 - #0
DEBUG 02:15:56,506 - program name
DEBUG 02:15:56,506 - found constant with value 4of type 1
DEBUG 02:15:56,506 - found constant with value 3of type 1
DEBUG 02:15:56,506 - ClassBegin
DEBUG 02:15:56,507 - Variable with name tezina has the address of 1
DEBUG 02:15:56,507 - Variable with name vrsta has the address of 2
DEBUG 02:15:56,507 - designator simple at line 12: this
DEBUG 02:15:56,507 - designator simple at line 12: tezina
DEBUG 02:15:56,507 - designator simple at line 12: tezina
DEBUG 02:15:56,507 - term SingleFactorterm is type 1
DEBUG 02:15:56,507 - exprWithNoMinus
DEBUG 02:15:56,508 - designator simple at line 13: tezina
DEBUG 02:15:56,508 - found constant with value 0of type 1
DEBUG 02:15:56,508 - constant factor is type 1
DEBUG 02:15:56,508 - term SingleFactorterm is type 1
DEBUG 02:15:56,508 - exprWithNoMinus
DEBUG 02:15:56,508 - designator simple at line 15: zapremina
DEBUG 02:15:56,510 - designator simple at line 15: tezina
DEBUG 02:15:56,510 - term element is type 1
DEBUG 02:15:56,510 - term list single is type 1
DEBUG 02:15:56,510 - term MultiFactorTerm is type 1
DEBUG 02:15:56,510 - exprWithNoMinus
DEBUG 02:15:56,510 - designator simple at line 16: this
DEBUG 02:15:56,510 - designator simple at line 16: vrsta
DEBUG 02:15:56,510 - designator simple at line 16: vrsta
DEBUG 02:15:56,510 - term SingleFactorterm is type 2
DEBUG 02:15:56,510 - exprWithNoMinus
DEBUG 02:15:56,510 - class decl end
DEBUG 02:15:56,511 - class decl 1
DEBUG 02:15:56,511 - derived ClassBegin
DEBUG 02:15:56,511 - Variable with name r has the address of 1
DEBUG 02:15:56,511 - designator simple at line 24: this
DEBUG 02:15:56,511 - designator simple at line 24: tezina
DEBUG 02:15:56,511 - designator simple at line 24: tezina
DEBUG 02:15:56,511 - term SingleFactorterm is type 1
DEBUG 02:15:56,511 - exprWithNoMinus
DEBUG 02:15:56,511 - designator simple at line 24: vrsta
DEBUG 02:15:56,511 - found constant with value *****of type 2
DEBUG 02:15:56,511 - found constant with value 115of type 2
DEBUG 02:15:56,511 - constant factor is type 2
DEBUG 02:15:56,511 - term SingleFactorterm is type 2
DEBUG 02:15:56,511 - exprWithNoMinus
DEBUG 02:15:56,511 - designator simple at line 25: this
DEBUG 02:15:56,511 - designator simple at line 25: r
DEBUG 02:15:56,511 - designator simple at line 25: r
DEBUG 02:15:56,511 - term SingleFactorterm is type 1
DEBUG 02:15:56,511 - exprWithNoMinus
DEBUG 02:15:56,511 - designator simple at line 26: postaviVrstu
DEBUG 02:15:56,511 - found constant with value *****of type 2
DEBUG 02:15:56,511 - found constant with value 115of type 2
DEBUG 02:15:56,511 - constant factor is type 2
DEBUG 02:15:56,511 - term SingleFactorterm is type 2
DEBUG 02:15:56,512 - exprWithNoMinus
ERROR 02:15:56,512 - Wrong number of parameters - expected 2 but found 1
DEBUG 02:15:56,512 - Variable with name z has the address of 2
DEBUG 02:15:56,512 - designator simple at line 31: z
DEBUG 02:15:56,512 - designator simple at line 31: cinilac
DEBUG 02:15:56,512 - term SingleFactorterm is type 1
DEBUG 02:15:56,512 - exprWithNoMinus
DEBUG 02:15:56,512 - designator simple at line 32: z
DEBUG 02:15:56,512 - designator simple at line 32: r
DEBUG 02:15:56,512 - designator simple at line 32: delilac
DEBUG 02:15:56,512 - term element is type 1
DEBUG 02:15:56,512 - term list single is type 1
DEBUG 02:15:56,512 - term MultiFactorTerm is type 1
DEBUG 02:15:56,512 - exprWithNoMinus
DEBUG 02:15:56,512 - term element is type 1
DEBUG 02:15:56,512 - term list single is type 1
DEBUG 02:15:56,512 - term MultiFactorTerm is type 1
DEBUG 02:15:56,512 - exprWithNoMinus
DEBUG 02:15:56,512 - class decl end
DEBUG 02:15:56,513 - class decl 1
DEBUG 02:15:56,513 - derived ClassBegin
DEBUG 02:15:56,513 - Variable with name a has the address of 1
DEBUG 02:15:56,513 - Variable with name b has the address of 2
DEBUG 02:15:56,513 - Variable with name c has the address of 3
DEBUG 02:15:56,513 - designator simple at line 41: this
DEBUG 02:15:56,513 - designator simple at line 41: tezina
DEBUG 02:15:56,513 - designator simple at line 41: tezina
DEBUG 02:15:56,513 - term SingleFactorterm is type 1
DEBUG 02:15:56,513 - exprWithNoMinus
DEBUG 02:15:56,513 - designator simple at line 41: vrsta
DEBUG 02:15:56,513 - found constant with value *****of type 2
DEBUG 02:15:56,513 - found constant with value 107of type 2
DEBUG 02:15:56,513 - constant factor is type 2
DEBUG 02:15:56,513 - term SingleFactorterm is type 2
DEBUG 02:15:56,513 - exprWithNoMinus
DEBUG 02:15:56,513 - designator simple at line 42: this
DEBUG 02:15:56,513 - designator simple at line 42: a
DEBUG 02:15:56,513 - designator simple at line 42: a
DEBUG 02:15:56,513 - term SingleFactorterm is type 1
DEBUG 02:15:56,513 - exprWithNoMinus
DEBUG 02:15:56,513 - designator simple at line 42: this
DEBUG 02:15:56,513 - designator simple at line 42: b
DEBUG 02:15:56,513 - designator simple at line 42: b
DEBUG 02:15:56,513 - term SingleFactorterm is type 1
DEBUG 02:15:56,513 - exprWithNoMinus
DEBUG 02:15:56,513 - designator simple at line 42: this
DEBUG 02:15:56,513 - designator simple at line 42: c
DEBUG 02:15:56,513 - designator simple at line 42: c
DEBUG 02:15:56,513 - term SingleFactorterm is type 1
DEBUG 02:15:56,513 - exprWithNoMinus
DEBUG 02:15:56,513 - designator simple at line 42: vrsta
DEBUG 02:15:56,513 - found constant with value *****of type 2
DEBUG 02:15:56,513 - found constant with value 107of type 2
DEBUG 02:15:56,513 - constant factor is type 2
DEBUG 02:15:56,513 - term SingleFactorterm is type 2
DEBUG 02:15:56,514 - exprWithNoMinus
ERROR 02:15:56,514 - Identifier z already used.
DEBUG 02:15:56,514 - designator simple at line 46: z
DEBUG 02:15:56,514 - designator simple at line 46: a
DEBUG 02:15:56,514 - designator simple at line 46: b
DEBUG 02:15:56,514 - term element is type 1
DEBUG 02:15:56,514 - term list single is type 1
DEBUG 02:15:56,514 - designator simple at line 46: c
DEBUG 02:15:56,514 - term element is type 1
DEBUG 02:15:56,514 - term list multiple is type 1
DEBUG 02:15:56,514 - term MultiFactorTerm is type 1
DEBUG 02:15:56,514 - exprWithNoMinus
DEBUG 02:15:56,514 - designator simple at line 47: z
DEBUG 02:15:56,514 - term SingleFactorterm is type 1
DEBUG 02:15:56,514 - exprWithNoMinus
DEBUG 02:15:56,514 - class decl end
DEBUG 02:15:56,514 - class decl 1
DEBUG 02:15:56,514 - Variable with name zapreminaK has the address of 1
DEBUG 02:15:56,514 - Variable with name zapreminaS has the address of 2
DEBUG 02:15:56,514 - Variable with name tezinaK has the address of 3
DEBUG 02:15:56,514 - Variable with name tezinaS has the address of 4
DEBUG 02:15:56,514 - program begin
DEBUG 02:15:56,514 - designator simple at line 58: p
DEBUG 02:15:56,514 - designator simple at line 58: vrsta
DEBUG 02:15:56,514 - term SingleFactorterm is type 2
DEBUG 02:15:56,514 - exprWithNoMinus
DEBUG 02:15:56,514 - print statement has arg of type 2
DEBUG 02:15:56,514 - designator simple at line 59: eol
DEBUG 02:15:56,514 - term SingleFactorterm is type 2
DEBUG 02:15:56,514 - exprWithNoMinus
DEBUG 02:15:56,514 - print statement has arg of type 2
DEBUG 02:15:56,514 - designator simple at line 60: p
DEBUG 02:15:56,514 - designator simple at line 60: tezina
DEBUG 02:15:56,514 - term SingleFactorterm is type 1
DEBUG 02:15:56,514 - exprWithNoMinus
DEBUG 02:15:56,514 - print statement has arg of type 1
DEBUG 02:15:56,514 - Variable with name i has the address of 1
DEBUG 02:15:56,514 - Variable with name s1 has the address of 2
DEBUG 02:15:56,514 - Variable with name s2 has the address of 3
DEBUG 02:15:56,514 - Variable with name s3 has the address of 4
DEBUG 02:15:56,514 - Variable with name k1 has the address of 5
DEBUG 02:15:56,514 - Variable with name k2 has the address of 6
DEBUG 02:15:56,514 - Variable with name k3 has the address of 7
DEBUG 02:15:56,515 - Variable with name t has the address of 8
DEBUG 02:15:56,515 - designator simple at line 66: predmeti
DEBUG 02:15:56,515 - found constant with value 6of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - term SingleFactorterm is type 3
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 67: s1
DEBUG 02:15:56,515 - term SingleFactorterm is type 4
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 68: s2
DEBUG 02:15:56,515 - term SingleFactorterm is type 4
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 69: s3
DEBUG 02:15:56,515 - term SingleFactorterm is type 4
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 71: k1
DEBUG 02:15:56,515 - term SingleFactorterm is type 4
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 72: k2
DEBUG 02:15:56,515 - term SingleFactorterm is type 4
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 73: k3
DEBUG 02:15:56,515 - term SingleFactorterm is type 4
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 75: s1
DEBUG 02:15:56,515 - designator simple at line 75: postaviPoluprecnik
DEBUG 02:15:56,515 - found constant with value 1of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 76: s2
DEBUG 02:15:56,515 - designator simple at line 76: postaviPoluprecnik
DEBUG 02:15:56,515 - found constant with value 2of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 77: s3
DEBUG 02:15:56,515 - designator simple at line 77: postaviPoluprecnik
DEBUG 02:15:56,515 - found constant with value 3of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - designator simple at line 79: k1
DEBUG 02:15:56,515 - designator simple at line 79: postaviStranice
DEBUG 02:15:56,515 - found constant with value 1of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - found constant with value 2of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,515 - exprWithNoMinus
DEBUG 02:15:56,515 - found constant with value 3of type 1
DEBUG 02:15:56,515 - constant factor is type 1
DEBUG 02:15:56,515 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - designator simple at line 80: k2
DEBUG 02:15:56,516 - designator simple at line 80: postaviStranice
DEBUG 02:15:56,516 - found constant with value 2of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 3of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 4of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - designator simple at line 81: k3
DEBUG 02:15:56,516 - designator simple at line 81: postaviStranice
DEBUG 02:15:56,516 - found constant with value 3of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 4of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 5of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 0of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - designator simple at line 83: s1
DEBUG 02:15:56,516 - term SingleFactorterm is type 4
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 2of type 1
DEBUG 02:15:56,516 - constant factor is type 1
DEBUG 02:15:56,516 - term SingleFactorterm is type 1
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - designator simple at line 84: s2
DEBUG 02:15:56,516 - term SingleFactorterm is type 4
DEBUG 02:15:56,516 - exprWithNoMinus
DEBUG 02:15:56,516 - found constant with value 4of type 1
DEBUG 02:15:56,517 - constant factor is type 1
DEBUG 02:15:56,517 - term SingleFactorterm is type 1
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 85: s3
DEBUG 02:15:56,517 - term SingleFactorterm is type 4
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - found constant with value 1of type 1
DEBUG 02:15:56,517 - constant factor is type 1
DEBUG 02:15:56,517 - term SingleFactorterm is type 1
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 86: k1
DEBUG 02:15:56,517 - term SingleFactorterm is type 4
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - found constant with value 3of type 1
DEBUG 02:15:56,517 - constant factor is type 1
DEBUG 02:15:56,517 - term SingleFactorterm is type 1
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 87: k2
DEBUG 02:15:56,517 - term SingleFactorterm is type 4
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - found constant with value 5of type 1
DEBUG 02:15:56,517 - constant factor is type 1
DEBUG 02:15:56,517 - term SingleFactorterm is type 1
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 88: k3
DEBUG 02:15:56,517 - term SingleFactorterm is type 4
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 90: t
DEBUG 02:15:56,517 - designator simple at line 91: i
DEBUG 02:15:56,517 - found constant with value 0of type 1
DEBUG 02:15:56,517 - constant factor is type 1
DEBUG 02:15:56,517 - term SingleFactorterm is type 1
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 94: i
DEBUG 02:15:56,517 - term SingleFactorterm is type 1
DEBUG 02:15:56,517 - exprWithNoMinus
DEBUG 02:15:56,517 - designator simple at line 94: postaviTezinu
ERROR 02:15:56,517 - Identifier t was not defined.
ERROR 02:15:56,517 - designator obj is null in rvaluedesignator1  na liniji 94
ERROR 02:15:56,517 - obj is null
DEBUG 02:15:56,517 - exprWithNoMinus
