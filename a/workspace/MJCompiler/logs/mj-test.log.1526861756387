INFO  02:15:40,974 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  02:15:41,034 - #40 program
INFO  02:15:41,034 - #45 test_303
INFO  02:15:41,034 - #44 const
INFO  02:15:41,034 - #45 int
INFO  02:15:41,034 - #45 cinilac
INFO  02:15:41,034 - #28 =
INFO  02:15:41,034 - #9 4
INFO  02:15:41,034 - #12 ,
INFO  02:15:41,035 - #45 delilac
INFO  02:15:41,035 - #28 =
INFO  02:15:41,035 - #9 3
INFO  02:15:41,035 - #13 ;
INFO  02:15:41,035 - #38 class
INFO  02:15:41,035 - #45 Predmet
INFO  02:15:41,036 - #34 {
INFO  02:15:41,036 - #45 int
INFO  02:15:41,036 - #45 tezina
INFO  02:15:41,036 - #13 ;
INFO  02:15:41,037 - #45 char
INFO  02:15:41,037 - #45 vrsta
INFO  02:15:41,037 - #13 ;
INFO  02:15:41,037 - #34 {
INFO  02:15:41,038 - #43 void
INFO  02:15:41,038 - #45 postaviTezinu
INFO  02:15:41,039 - #32 (
INFO  02:15:41,039 - #45 int
INFO  02:15:41,039 - #45 tezina
INFO  02:15:41,039 - #33 )
INFO  02:15:41,039 - #34 {
INFO  02:15:41,039 - #45 this
INFO  02:15:41,040 - #14 .
INFO  02:15:41,041 - #45 tezina
INFO  02:15:41,041 - #28 =
INFO  02:15:41,041 - #45 tezina
INFO  02:15:41,041 - #13 ;
INFO  02:15:41,042 - #35 }
INFO  02:15:41,042 - #43 void
INFO  02:15:41,043 - #45 ucitajTezinu
INFO  02:15:41,043 - #32 (
INFO  02:15:41,043 - #33 )
INFO  02:15:41,043 - #34 {
INFO  02:15:41,043 - #42 read
INFO  02:15:41,043 - #32 (
INFO  02:15:41,043 - #45 tezina
INFO  02:15:41,044 - #33 )
INFO  02:15:41,044 - #13 ;
INFO  02:15:41,044 - #35 }
INFO  02:15:41,044 - #45 int
INFO  02:15:41,044 - #45 zapremina
INFO  02:15:41,044 - #32 (
INFO  02:15:41,044 - #33 )
INFO  02:15:41,044 - #34 {
INFO  02:15:41,044 - #8 return
INFO  02:15:41,044 - #9 0
INFO  02:15:41,044 - #13 ;
INFO  02:15:41,044 - #35 }
INFO  02:15:41,045 - #45 int
INFO  02:15:41,045 - #45 Q
INFO  02:15:41,045 - #32 (
INFO  02:15:41,045 - #33 )
INFO  02:15:41,045 - #34 {
INFO  02:15:41,045 - #8 return
INFO  02:15:41,045 - #45 zapremina
INFO  02:15:41,045 - #32 (
INFO  02:15:41,045 - #33 )
INFO  02:15:41,045 - #17 *
INFO  02:15:41,045 - #45 tezina
INFO  02:15:41,046 - #13 ;
INFO  02:15:41,046 - #35 }
INFO  02:15:41,046 - #43 void
INFO  02:15:41,046 - #45 postaviVrstu
INFO  02:15:41,046 - #32 (
INFO  02:15:41,047 - #45 char
INFO  02:15:41,047 - #45 vrsta
INFO  02:15:41,047 - #33 )
INFO  02:15:41,047 - #34 {
INFO  02:15:41,047 - #45 this
INFO  02:15:41,047 - #14 .
INFO  02:15:41,047 - #45 vrsta
INFO  02:15:41,047 - #28 =
INFO  02:15:41,047 - #45 vrsta
INFO  02:15:41,047 - #13 ;
INFO  02:15:41,047 - #35 }
INFO  02:15:41,047 - #35 }
INFO  02:15:41,047 - #35 }
INFO  02:15:41,047 - #38 class
INFO  02:15:41,048 - #45 Sfera
INFO  02:15:41,048 - #39 extends
INFO  02:15:41,048 - #45 Predmet
INFO  02:15:41,048 - #34 {
INFO  02:15:41,048 - #45 int
INFO  02:15:41,048 - #45 r
INFO  02:15:41,048 - #13 ;
INFO  02:15:41,048 - #34 {
INFO  02:15:41,048 - #43 void
INFO  02:15:41,048 - #45 postaviTezinu
INFO  02:15:41,048 - #32 (
INFO  02:15:41,048 - #45 int
INFO  02:15:41,049 - #45 tezina
INFO  02:15:41,049 - #33 )
INFO  02:15:41,049 - #34 {
INFO  02:15:41,049 - #45 this
INFO  02:15:41,049 - #14 .
INFO  02:15:41,049 - #45 tezina
INFO  02:15:41,049 - #28 =
INFO  02:15:41,049 - #45 tezina
INFO  02:15:41,049 - #13 ;
INFO  02:15:41,049 - #45 vrsta
INFO  02:15:41,049 - #28 =
INFO  02:15:41,049 - #10 s
INFO  02:15:41,049 - #13 ;
INFO  02:15:41,049 - #35 }
INFO  02:15:41,049 - #43 void
INFO  02:15:41,050 - #45 postaviPoluprecnik
INFO  02:15:41,050 - #32 (
INFO  02:15:41,050 - #45 int
INFO  02:15:41,050 - #45 r
INFO  02:15:41,050 - #33 )
INFO  02:15:41,050 - #34 {
INFO  02:15:41,050 - #45 this
INFO  02:15:41,050 - #14 .
INFO  02:15:41,050 - #45 r
INFO  02:15:41,050 - #28 =
INFO  02:15:41,050 - #45 r
INFO  02:15:41,050 - #13 ;
INFO  02:15:41,050 - #45 postaviVrstu
INFO  02:15:41,050 - #32 (
INFO  02:15:41,050 - #10 s
INFO  02:15:41,050 - #33 )
INFO  02:15:41,051 - #13 ;
INFO  02:15:41,051 - #35 }
INFO  02:15:41,051 - #45 int
INFO  02:15:41,051 - #45 zapremina
INFO  02:15:41,051 - #32 (
INFO  02:15:41,051 - #33 )
INFO  02:15:41,051 - #45 int
INFO  02:15:41,051 - #45 z
INFO  02:15:41,051 - #13 ;
INFO  02:15:41,051 - #34 {
INFO  02:15:41,051 - #45 z
INFO  02:15:41,051 - #28 =
INFO  02:15:41,051 - #45 cinilac
INFO  02:15:41,051 - #13 ;
INFO  02:15:41,051 - #8 return
INFO  02:15:41,051 - #45 z
INFO  02:15:41,052 - #17 *
INFO  02:15:41,052 - #32 (
INFO  02:15:41,052 - #45 r
INFO  02:15:41,052 - #18 /
INFO  02:15:41,052 - #45 delilac
INFO  02:15:41,052 - #33 )
INFO  02:15:41,052 - #13 ;
INFO  02:15:41,052 - #35 }
INFO  02:15:41,052 - #35 }
INFO  02:15:41,052 - #35 }
INFO  02:15:41,052 - #38 class
INFO  02:15:41,052 - #45 Kvadar
INFO  02:15:41,052 - #39 extends
INFO  02:15:41,052 - #45 Predmet
INFO  02:15:41,052 - #34 {
INFO  02:15:41,052 - #45 int
INFO  02:15:41,052 - #45 a
INFO  02:15:41,052 - #12 ,
INFO  02:15:41,052 - #45 b
INFO  02:15:41,053 - #12 ,
INFO  02:15:41,053 - #45 c
INFO  02:15:41,053 - #13 ;
INFO  02:15:41,053 - #34 {
INFO  02:15:41,053 - #43 void
INFO  02:15:41,053 - #45 postaviTezinu
INFO  02:15:41,053 - #32 (
INFO  02:15:41,053 - #45 int
INFO  02:15:41,053 - #45 tezina
INFO  02:15:41,053 - #33 )
INFO  02:15:41,054 - #34 {
INFO  02:15:41,054 - #45 this
INFO  02:15:41,055 - #14 .
INFO  02:15:41,055 - #45 tezina
INFO  02:15:41,055 - #28 =
INFO  02:15:41,055 - #45 tezina
INFO  02:15:41,055 - #13 ;
INFO  02:15:41,055 - #45 vrsta
INFO  02:15:41,055 - #28 =
INFO  02:15:41,056 - #10 k
INFO  02:15:41,056 - #13 ;
INFO  02:15:41,056 - #35 }
INFO  02:15:41,056 - #43 void
INFO  02:15:41,056 - #45 postaviStranice
INFO  02:15:41,056 - #32 (
INFO  02:15:41,056 - #45 int
INFO  02:15:41,056 - #45 a
INFO  02:15:41,057 - #12 ,
INFO  02:15:41,057 - #45 int
INFO  02:15:41,057 - #45 b
INFO  02:15:41,057 - #12 ,
INFO  02:15:41,057 - #45 int
INFO  02:15:41,057 - #45 c
INFO  02:15:41,057 - #33 )
INFO  02:15:41,057 - #34 {
INFO  02:15:41,057 - #45 this
INFO  02:15:41,057 - #14 .
INFO  02:15:41,057 - #45 a
INFO  02:15:41,057 - #28 =
INFO  02:15:41,057 - #45 a
INFO  02:15:41,057 - #13 ;
INFO  02:15:41,057 - #45 this
INFO  02:15:41,057 - #14 .
INFO  02:15:41,057 - #45 b
INFO  02:15:41,057 - #28 =
INFO  02:15:41,057 - #45 b
INFO  02:15:41,057 - #13 ;
INFO  02:15:41,057 - #45 this
INFO  02:15:41,057 - #14 .
INFO  02:15:41,057 - #45 c
INFO  02:15:41,057 - #28 =
INFO  02:15:41,058 - #45 c
INFO  02:15:41,058 - #13 ;
INFO  02:15:41,058 - #45 vrsta
INFO  02:15:41,058 - #28 =
INFO  02:15:41,058 - #10 k
INFO  02:15:41,058 - #13 ;
INFO  02:15:41,058 - #35 }
INFO  02:15:41,058 - #45 int
INFO  02:15:41,058 - #45 zapremina
INFO  02:15:41,058 - #32 (
INFO  02:15:41,058 - #33 )
INFO  02:15:41,058 - #45 int
INFO  02:15:41,058 - #45 z
INFO  02:15:41,059 - #13 ;
INFO  02:15:41,059 - #34 {
INFO  02:15:41,059 - #45 z
INFO  02:15:41,059 - #28 =
INFO  02:15:41,059 - #45 a
INFO  02:15:41,059 - #17 *
INFO  02:15:41,059 - #45 b
INFO  02:15:41,059 - #17 *
INFO  02:15:41,059 - #45 c
INFO  02:15:41,059 - #13 ;
INFO  02:15:41,059 - #8 return
INFO  02:15:41,060 - #45 z
INFO  02:15:41,060 - #13 ;
INFO  02:15:41,060 - #35 }
INFO  02:15:41,060 - #35 }
INFO  02:15:41,060 - #35 }
INFO  02:15:41,060 - #45 int
INFO  02:15:41,060 - #45 zapreminaK
INFO  02:15:41,060 - #12 ,
INFO  02:15:41,060 - #45 zapreminaS
INFO  02:15:41,060 - #13 ;
INFO  02:15:41,060 - #45 int
INFO  02:15:41,060 - #45 tezinaK
INFO  02:15:41,060 - #12 ,
INFO  02:15:41,060 - #45 tezinaS
INFO  02:15:41,060 - #13 ;
INFO  02:15:41,060 - #34 {
INFO  02:15:41,060 - #43 void
INFO  02:15:41,061 - #45 ispis
INFO  02:15:41,061 - #32 (
INFO  02:15:41,061 - #45 Predmet
INFO  02:15:41,061 - #45 p
INFO  02:15:41,061 - #33 )
INFO  02:15:41,062 - #34 {
INFO  02:15:41,062 - #41 print
INFO  02:15:41,062 - #32 (
INFO  02:15:41,062 - #45 p
INFO  02:15:41,062 - #14 .
INFO  02:15:41,062 - #45 vrsta
INFO  02:15:41,062 - #33 )
INFO  02:15:41,062 - #13 ;
INFO  02:15:41,062 - #41 print
INFO  02:15:41,062 - #32 (
INFO  02:15:41,062 - #45 eol
INFO  02:15:41,062 - #33 )
INFO  02:15:41,062 - #13 ;
INFO  02:15:41,062 - #41 print
INFO  02:15:41,062 - #32 (
INFO  02:15:41,062 - #45 p
INFO  02:15:41,062 - #14 .
INFO  02:15:41,062 - #45 tezina
INFO  02:15:41,062 - #33 )
INFO  02:15:41,062 - #13 ;
INFO  02:15:41,062 - #35 }
INFO  02:15:41,062 - #43 void
INFO  02:15:41,062 - #45 main
INFO  02:15:41,062 - #32 (
INFO  02:15:41,063 - #33 )
INFO  02:15:41,063 - #45 Predmet
INFO  02:15:41,063 - #45 predmeti
INFO  02:15:41,063 - #36 [
INFO  02:15:41,063 - #37 ]
INFO  02:15:41,063 - #13 ;
INFO  02:15:41,063 - #45 int
INFO  02:15:41,063 - #45 i
INFO  02:15:41,063 - #13 ;
INFO  02:15:41,063 - #45 Sfera
INFO  02:15:41,063 - #45 s1
INFO  02:15:41,063 - #12 ,
INFO  02:15:41,063 - #45 s2
INFO  02:15:41,063 - #12 ,
INFO  02:15:41,063 - #45 s3
INFO  02:15:41,063 - #13 ;
INFO  02:15:41,063 - #45 Kvadar
INFO  02:15:41,063 - #45 k1
INFO  02:15:41,063 - #12 ,
INFO  02:15:41,063 - #45 k2
INFO  02:15:41,063 - #12 ,
INFO  02:15:41,063 - #45 k3
INFO  02:15:41,063 - #13 ;
INFO  02:15:41,063 - #45 int
INFO  02:15:41,063 - #45 t
INFO  02:15:41,063 - #13 ;
INFO  02:15:41,064 - #34 {
INFO  02:15:41,064 - #45 predmeti
INFO  02:15:41,064 - #28 =
INFO  02:15:41,064 - #31 new
INFO  02:15:41,064 - #45 Predmet
INFO  02:15:41,064 - #36 [
INFO  02:15:41,064 - #9 6
INFO  02:15:41,064 - #37 ]
INFO  02:15:41,064 - #13 ;
INFO  02:15:41,064 - #45 s1
INFO  02:15:41,064 - #28 =
INFO  02:15:41,064 - #31 new
INFO  02:15:41,064 - #45 Sfera
INFO  02:15:41,064 - #13 ;
INFO  02:15:41,064 - #45 s2
INFO  02:15:41,064 - #28 =
INFO  02:15:41,064 - #31 new
INFO  02:15:41,064 - #45 Sfera
INFO  02:15:41,064 - #13 ;
INFO  02:15:41,064 - #45 s3
INFO  02:15:41,064 - #28 =
INFO  02:15:41,064 - #31 new
INFO  02:15:41,064 - #45 Sfera
INFO  02:15:41,064 - #13 ;
INFO  02:15:41,064 - #45 k1
INFO  02:15:41,065 - #28 =
INFO  02:15:41,065 - #31 new
INFO  02:15:41,065 - #45 Kvadar
INFO  02:15:41,065 - #13 ;
INFO  02:15:41,065 - #45 k2
INFO  02:15:41,065 - #28 =
INFO  02:15:41,065 - #31 new
INFO  02:15:41,065 - #45 Kvadar
INFO  02:15:41,065 - #13 ;
INFO  02:15:41,065 - #45 k3
INFO  02:15:41,065 - #28 =
INFO  02:15:41,065 - #31 new
INFO  02:15:41,065 - #45 Kvadar
INFO  02:15:41,065 - #13 ;
INFO  02:15:41,065 - #45 s1
INFO  02:15:41,065 - #14 .
INFO  02:15:41,065 - #45 postaviPoluprecnik
INFO  02:15:41,065 - #32 (
INFO  02:15:41,065 - #9 1
INFO  02:15:41,065 - #33 )
INFO  02:15:41,065 - #13 ;
INFO  02:15:41,065 - #45 s2
INFO  02:15:41,065 - #14 .
INFO  02:15:41,065 - #45 postaviPoluprecnik
INFO  02:15:41,065 - #32 (
INFO  02:15:41,065 - #9 2
INFO  02:15:41,065 - #33 )
INFO  02:15:41,066 - #13 ;
INFO  02:15:41,066 - #45 s3
INFO  02:15:41,066 - #14 .
INFO  02:15:41,066 - #45 postaviPoluprecnik
INFO  02:15:41,066 - #32 (
INFO  02:15:41,066 - #9 3
INFO  02:15:41,066 - #33 )
INFO  02:15:41,066 - #13 ;
INFO  02:15:41,066 - #45 k1
INFO  02:15:41,066 - #14 .
INFO  02:15:41,066 - #45 postaviStranice
INFO  02:15:41,066 - #32 (
INFO  02:15:41,066 - #9 1
INFO  02:15:41,066 - #12 ,
INFO  02:15:41,066 - #9 2
INFO  02:15:41,066 - #12 ,
INFO  02:15:41,066 - #9 3
INFO  02:15:41,066 - #33 )
INFO  02:15:41,066 - #13 ;
INFO  02:15:41,066 - #45 k2
INFO  02:15:41,066 - #14 .
INFO  02:15:41,066 - #45 postaviStranice
INFO  02:15:41,066 - #32 (
INFO  02:15:41,066 - #9 2
INFO  02:15:41,066 - #12 ,
INFO  02:15:41,066 - #9 3
INFO  02:15:41,066 - #12 ,
INFO  02:15:41,066 - #9 4
INFO  02:15:41,066 - #33 )
INFO  02:15:41,066 - #13 ;
INFO  02:15:41,067 - #45 k3
INFO  02:15:41,067 - #14 .
INFO  02:15:41,067 - #45 postaviStranice
INFO  02:15:41,067 - #32 (
INFO  02:15:41,067 - #9 3
INFO  02:15:41,067 - #12 ,
INFO  02:15:41,067 - #9 4
INFO  02:15:41,067 - #12 ,
INFO  02:15:41,067 - #9 5
INFO  02:15:41,067 - #33 )
INFO  02:15:41,067 - #13 ;
INFO  02:15:41,067 - #45 predmeti
INFO  02:15:41,067 - #36 [
INFO  02:15:41,067 - #9 0
INFO  02:15:41,067 - #37 ]
INFO  02:15:41,067 - #28 =
INFO  02:15:41,067 - #45 s1
INFO  02:15:41,067 - #13 ;
INFO  02:15:41,067 - #45 predmeti
INFO  02:15:41,067 - #36 [
INFO  02:15:41,067 - #9 2
INFO  02:15:41,067 - #37 ]
INFO  02:15:41,068 - #28 =
INFO  02:15:41,068 - #45 s2
INFO  02:15:41,068 - #13 ;
INFO  02:15:41,068 - #45 predmeti
INFO  02:15:41,068 - #36 [
INFO  02:15:41,068 - #9 4
INFO  02:15:41,068 - #37 ]
INFO  02:15:41,068 - #28 =
INFO  02:15:41,068 - #45 s3
INFO  02:15:41,068 - #13 ;
INFO  02:15:41,068 - #45 predmeti
INFO  02:15:41,068 - #36 [
INFO  02:15:41,068 - #9 1
INFO  02:15:41,068 - #37 ]
INFO  02:15:41,068 - #28 =
INFO  02:15:41,068 - #45 k1
INFO  02:15:41,068 - #13 ;
INFO  02:15:41,068 - #45 predmeti
INFO  02:15:41,068 - #36 [
INFO  02:15:41,068 - #9 3
INFO  02:15:41,068 - #37 ]
INFO  02:15:41,068 - #28 =
INFO  02:15:41,068 - #45 k2
INFO  02:15:41,068 - #13 ;
INFO  02:15:41,068 - #45 predmeti
INFO  02:15:41,068 - #36 [
INFO  02:15:41,068 - #9 5
INFO  02:15:41,068 - #37 ]
INFO  02:15:41,068 - #28 =
INFO  02:15:41,068 - #45 k3
INFO  02:15:41,068 - #13 ;
INFO  02:15:41,069 - #42 read
INFO  02:15:41,069 - #32 (
INFO  02:15:41,069 - #45 t
INFO  02:15:41,069 - #33 )
INFO  02:15:41,069 - #13 ;
INFO  02:15:41,069 - #45 i
INFO  02:15:41,069 - #28 =
INFO  02:15:41,069 - #9 0
INFO  02:15:41,069 - #13 ;
INFO  02:15:41,069 - #5 do
INFO  02:15:41,069 - #34 {
INFO  02:15:41,069 - #45 predmeti
INFO  02:15:41,069 - #36 [
INFO  02:15:41,069 - #45 i
INFO  02:15:41,070 - #37 ]
INFO  02:15:41,070 - #14 .
INFO  02:15:41,070 - #45 postaviTezinu
INFO  02:15:41,070 - #32 (
INFO  02:15:41,070 - #45 t
INFO  02:15:41,070 - #33 )
INFO  02:15:41,070 - #13 ;
INFO  02:15:41,070 - #45 i
INFO  02:15:41,070 - #29 ++
INFO  02:15:41,070 - #13 ;
INFO  02:15:41,070 - #35 }
INFO  02:15:41,070 - #6 while
INFO  02:15:41,070 - #32 (
INFO  02:15:41,070 - #45 i
INFO  02:15:41,070 - #23 <
INFO  02:15:41,070 - #9 6
INFO  02:15:41,071 - #33 )
INFO  02:15:41,073 - #13 ;
INFO  02:15:41,073 - #45 i
INFO  02:15:41,073 - #28 =
INFO  02:15:41,073 - #9 0
INFO  02:15:41,073 - #13 ;
INFO  02:15:41,073 - #45 zapreminaS
INFO  02:15:41,073 - #28 =
INFO  02:15:41,073 - #9 0
INFO  02:15:41,073 - #13 ;
INFO  02:15:41,073 - #45 tezinaS
INFO  02:15:41,073 - #28 =
INFO  02:15:41,073 - #9 0
INFO  02:15:41,073 - #13 ;
INFO  02:15:41,073 - #5 do
INFO  02:15:41,073 - #34 {
INFO  02:15:41,073 - #45 i
INFO  02:15:41,073 - #29 ++
INFO  02:15:41,073 - #13 ;
INFO  02:15:41,073 - #2 if
INFO  02:15:41,073 - #32 (
INFO  02:15:41,073 - #45 i
INFO  02:15:41,073 - #19 %
INFO  02:15:41,073 - #9 2
INFO  02:15:41,074 - #20 ==
INFO  02:15:41,074 - #9 0
INFO  02:15:41,074 - #33 )
INFO  02:15:41,074 - #7 continue
INFO  02:15:41,074 - #13 ;
INFO  02:15:41,074 - #45 zapreminaS
INFO  02:15:41,075 - #28 =
INFO  02:15:41,075 - #45 zapreminaS
INFO  02:15:41,075 - #15 +
INFO  02:15:41,075 - #45 predmeti
INFO  02:15:41,076 - #36 [
INFO  02:15:41,076 - #45 i
INFO  02:15:41,076 - #16 -
INFO  02:15:41,076 - #9 1
INFO  02:15:41,076 - #37 ]
INFO  02:15:41,076 - #14 .
INFO  02:15:41,076 - #45 zapremina
INFO  02:15:41,076 - #32 (
INFO  02:15:41,076 - #33 )
INFO  02:15:41,076 - #13 ;
INFO  02:15:41,077 - #45 tezinaS
INFO  02:15:41,077 - #28 =
INFO  02:15:41,077 - #45 tezinaS
INFO  02:15:41,077 - #15 +
INFO  02:15:41,077 - #45 predmeti
INFO  02:15:41,077 - #36 [
INFO  02:15:41,077 - #45 i
INFO  02:15:41,077 - #16 -
INFO  02:15:41,077 - #9 1
INFO  02:15:41,077 - #37 ]
INFO  02:15:41,077 - #14 .
INFO  02:15:41,077 - #45 Q
INFO  02:15:41,077 - #32 (
INFO  02:15:41,077 - #33 )
INFO  02:15:41,077 - #13 ;
INFO  02:15:41,077 - #45 ispis
INFO  02:15:41,077 - #32 (
INFO  02:15:41,077 - #45 predmeti
INFO  02:15:41,077 - #36 [
INFO  02:15:41,077 - #45 i
INFO  02:15:41,077 - #16 -
INFO  02:15:41,077 - #9 1
INFO  02:15:41,077 - #37 ]
INFO  02:15:41,077 - #33 )
INFO  02:15:41,077 - #13 ;
INFO  02:15:41,077 - #35 }
INFO  02:15:41,077 - #6 while
INFO  02:15:41,077 - #32 (
INFO  02:15:41,077 - #45 i
INFO  02:15:41,077 - #23 <
INFO  02:15:41,077 - #9 6
INFO  02:15:41,077 - #33 )
INFO  02:15:41,077 - #13 ;
INFO  02:15:41,077 - #45 i
INFO  02:15:41,077 - #28 =
INFO  02:15:41,077 - #9 0
INFO  02:15:41,078 - #13 ;
INFO  02:15:41,078 - #45 zapreminaK
INFO  02:15:41,078 - #28 =
INFO  02:15:41,078 - #9 0
INFO  02:15:41,078 - #13 ;
INFO  02:15:41,078 - #45 tezinaK
INFO  02:15:41,078 - #28 =
INFO  02:15:41,078 - #9 0
INFO  02:15:41,078 - #13 ;
INFO  02:15:41,078 - #5 do
INFO  02:15:41,078 - #34 {
INFO  02:15:41,078 - #45 i
INFO  02:15:41,078 - #29 ++
INFO  02:15:41,078 - #13 ;
INFO  02:15:41,078 - #2 if
INFO  02:15:41,078 - #32 (
INFO  02:15:41,078 - #45 i
INFO  02:15:41,078 - #19 %
INFO  02:15:41,078 - #9 2
INFO  02:15:41,078 - #20 ==
INFO  02:15:41,078 - #9 1
INFO  02:15:41,078 - #33 )
INFO  02:15:41,078 - #7 continue
INFO  02:15:41,078 - #13 ;
INFO  02:15:41,078 - #45 zapreminaK
INFO  02:15:41,078 - #28 =
INFO  02:15:41,078 - #45 zapreminaK
INFO  02:15:41,078 - #15 +
INFO  02:15:41,078 - #45 predmeti
INFO  02:15:41,078 - #36 [
INFO  02:15:41,078 - #45 i
INFO  02:15:41,078 - #16 -
INFO  02:15:41,078 - #9 1
INFO  02:15:41,078 - #37 ]
INFO  02:15:41,078 - #14 .
INFO  02:15:41,078 - #45 zapremina
INFO  02:15:41,078 - #32 (
INFO  02:15:41,078 - #33 )
INFO  02:15:41,078 - #13 ;
INFO  02:15:41,078 - #45 tezinaK
INFO  02:15:41,078 - #28 =
INFO  02:15:41,078 - #45 tezinaK
INFO  02:15:41,079 - #15 +
INFO  02:15:41,079 - #45 predmeti
INFO  02:15:41,079 - #36 [
INFO  02:15:41,079 - #45 i
INFO  02:15:41,079 - #16 -
INFO  02:15:41,079 - #9 1
INFO  02:15:41,079 - #37 ]
INFO  02:15:41,079 - #14 .
INFO  02:15:41,079 - #45 Q
INFO  02:15:41,079 - #32 (
INFO  02:15:41,079 - #33 )
INFO  02:15:41,079 - #13 ;
INFO  02:15:41,079 - #45 ispis
INFO  02:15:41,079 - #32 (
INFO  02:15:41,079 - #45 predmeti
INFO  02:15:41,079 - #36 [
INFO  02:15:41,079 - #45 i
INFO  02:15:41,079 - #16 -
INFO  02:15:41,079 - #9 1
INFO  02:15:41,079 - #37 ]
INFO  02:15:41,079 - #33 )
INFO  02:15:41,079 - #13 ;
INFO  02:15:41,079 - #35 }
INFO  02:15:41,079 - #6 while
INFO  02:15:41,079 - #32 (
INFO  02:15:41,079 - #45 i
INFO  02:15:41,079 - #23 <
INFO  02:15:41,079 - #9 6
INFO  02:15:41,079 - #33 )
INFO  02:15:41,079 - #13 ;
INFO  02:15:41,079 - #41 print
INFO  02:15:41,079 - #32 (
INFO  02:15:41,080 - #45 zapreminaS
INFO  02:15:41,080 - #33 )
INFO  02:15:41,080 - #13 ;
INFO  02:15:41,080 - #41 print
INFO  02:15:41,080 - #32 (
INFO  02:15:41,080 - #45 eol
INFO  02:15:41,080 - #33 )
INFO  02:15:41,080 - #13 ;
INFO  02:15:41,080 - #41 print
INFO  02:15:41,080 - #32 (
INFO  02:15:41,080 - #45 zapreminaK
INFO  02:15:41,080 - #33 )
INFO  02:15:41,080 - #13 ;
INFO  02:15:41,080 - #41 print
INFO  02:15:41,080 - #32 (
INFO  02:15:41,080 - #45 eol
INFO  02:15:41,080 - #33 )
INFO  02:15:41,080 - #13 ;
INFO  02:15:41,080 - #41 print
INFO  02:15:41,080 - #32 (
INFO  02:15:41,080 - #45 tezinaS
INFO  02:15:41,080 - #33 )
INFO  02:15:41,080 - #13 ;
INFO  02:15:41,080 - #41 print
INFO  02:15:41,080 - #32 (
INFO  02:15:41,080 - #45 eol
INFO  02:15:41,080 - #33 )
INFO  02:15:41,080 - #13 ;
INFO  02:15:41,080 - #41 print
INFO  02:15:41,080 - #32 (
INFO  02:15:41,080 - #45 tezinaK
INFO  02:15:41,080 - #33 )
INFO  02:15:41,081 - #13 ;
INFO  02:15:41,081 - #41 print
INFO  02:15:41,081 - #32 (
INFO  02:15:41,081 - #45 eol
INFO  02:15:41,081 - #33 )
INFO  02:15:41,081 - #13 ;
INFO  02:15:41,081 - #35 }
INFO  02:15:41,081 - #35 }
INFO  02:15:41,082 - ***Abstract tree****
INFO  02:15:41,082 - #0
DEBUG 02:15:41,089 - program name
DEBUG 02:15:41,089 - found constant with value 4of type 1
DEBUG 02:15:41,090 - found constant with value 3of type 1
DEBUG 02:15:41,090 - ClassBegin
DEBUG 02:15:41,090 - Variable with name tezina has the address of 1
DEBUG 02:15:41,090 - Variable with name vrsta has the address of 2
DEBUG 02:15:41,091 - designator simple at line 12: this
DEBUG 02:15:41,091 - designator simple at line 12: tezina
DEBUG 02:15:41,091 - designator simple at line 12: tezina
DEBUG 02:15:41,091 - term SingleFactorterm is type 1
DEBUG 02:15:41,091 - exprWithNoMinus
DEBUG 02:15:41,091 - designator simple at line 13: tezina
DEBUG 02:15:41,091 - found constant with value 0of type 1
DEBUG 02:15:41,091 - constant factor is type 1
DEBUG 02:15:41,091 - term SingleFactorterm is type 1
DEBUG 02:15:41,091 - exprWithNoMinus
DEBUG 02:15:41,091 - designator simple at line 15: zapremina
DEBUG 02:15:41,094 - designator simple at line 15: tezina
DEBUG 02:15:41,094 - term element is type 1
DEBUG 02:15:41,094 - term list single is type 1
DEBUG 02:15:41,094 - term MultiFactorTerm is type 1
DEBUG 02:15:41,094 - exprWithNoMinus
DEBUG 02:15:41,094 - designator simple at line 16: this
DEBUG 02:15:41,094 - designator simple at line 16: vrsta
DEBUG 02:15:41,094 - designator simple at line 16: vrsta
DEBUG 02:15:41,094 - term SingleFactorterm is type 2
DEBUG 02:15:41,094 - exprWithNoMinus
DEBUG 02:15:41,094 - class decl end
DEBUG 02:15:41,094 - class decl 1
DEBUG 02:15:41,094 - derived ClassBegin
DEBUG 02:15:41,094 - Variable with name r has the address of 1
DEBUG 02:15:41,094 - designator simple at line 24: this
DEBUG 02:15:41,094 - designator simple at line 24: tezina
DEBUG 02:15:41,094 - designator simple at line 24: tezina
DEBUG 02:15:41,094 - term SingleFactorterm is type 1
DEBUG 02:15:41,094 - exprWithNoMinus
DEBUG 02:15:41,094 - designator simple at line 24: vrsta
DEBUG 02:15:41,095 - found constant with value *****of type 2
DEBUG 02:15:41,095 - found constant with value 115of type 2
DEBUG 02:15:41,095 - constant factor is type 2
DEBUG 02:15:41,095 - term SingleFactorterm is type 2
DEBUG 02:15:41,095 - exprWithNoMinus
DEBUG 02:15:41,095 - designator simple at line 25: this
DEBUG 02:15:41,095 - designator simple at line 25: r
DEBUG 02:15:41,095 - designator simple at line 25: r
DEBUG 02:15:41,095 - term SingleFactorterm is type 1
DEBUG 02:15:41,095 - exprWithNoMinus
DEBUG 02:15:41,095 - designator simple at line 26: postaviVrstu
DEBUG 02:15:41,095 - found constant with value *****of type 2
DEBUG 02:15:41,095 - found constant with value 115of type 2
DEBUG 02:15:41,095 - constant factor is type 2
DEBUG 02:15:41,095 - term SingleFactorterm is type 2
DEBUG 02:15:41,095 - exprWithNoMinus
ERROR 02:15:41,095 - Wrong number of parameters - expected 2 but found 1
DEBUG 02:15:41,095 - Variable with name z has the address of 2
DEBUG 02:15:41,095 - designator simple at line 31: z
DEBUG 02:15:41,095 - designator simple at line 31: cinilac
DEBUG 02:15:41,095 - term SingleFactorterm is type 1
DEBUG 02:15:41,095 - exprWithNoMinus
DEBUG 02:15:41,095 - designator simple at line 32: z
DEBUG 02:15:41,095 - designator simple at line 32: r
DEBUG 02:15:41,096 - designator simple at line 32: delilac
DEBUG 02:15:41,096 - term element is type 1
DEBUG 02:15:41,096 - term list single is type 1
DEBUG 02:15:41,096 - term MultiFactorTerm is type 1
DEBUG 02:15:41,096 - exprWithNoMinus
DEBUG 02:15:41,096 - term element is type 1
DEBUG 02:15:41,096 - term list single is type 1
DEBUG 02:15:41,096 - term MultiFactorTerm is type 1
DEBUG 02:15:41,096 - exprWithNoMinus
DEBUG 02:15:41,096 - class decl end
DEBUG 02:15:41,096 - class decl 1
DEBUG 02:15:41,096 - derived ClassBegin
DEBUG 02:15:41,096 - Variable with name a has the address of 1
DEBUG 02:15:41,096 - Variable with name b has the address of 2
DEBUG 02:15:41,096 - Variable with name c has the address of 3
DEBUG 02:15:41,096 - designator simple at line 41: this
DEBUG 02:15:41,096 - designator simple at line 41: tezina
DEBUG 02:15:41,096 - designator simple at line 41: tezina
DEBUG 02:15:41,096 - term SingleFactorterm is type 1
DEBUG 02:15:41,096 - exprWithNoMinus
DEBUG 02:15:41,096 - designator simple at line 41: vrsta
DEBUG 02:15:41,096 - found constant with value *****of type 2
DEBUG 02:15:41,096 - found constant with value 107of type 2
DEBUG 02:15:41,096 - constant factor is type 2
DEBUG 02:15:41,096 - term SingleFactorterm is type 2
DEBUG 02:15:41,096 - exprWithNoMinus
DEBUG 02:15:41,096 - designator simple at line 42: this
DEBUG 02:15:41,096 - designator simple at line 42: a
DEBUG 02:15:41,096 - designator simple at line 42: a
DEBUG 02:15:41,097 - term SingleFactorterm is type 1
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,097 - designator simple at line 42: this
DEBUG 02:15:41,097 - designator simple at line 42: b
DEBUG 02:15:41,097 - designator simple at line 42: b
DEBUG 02:15:41,097 - term SingleFactorterm is type 1
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,097 - designator simple at line 42: this
DEBUG 02:15:41,097 - designator simple at line 42: c
DEBUG 02:15:41,097 - designator simple at line 42: c
DEBUG 02:15:41,097 - term SingleFactorterm is type 1
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,097 - designator simple at line 42: vrsta
DEBUG 02:15:41,097 - found constant with value *****of type 2
DEBUG 02:15:41,097 - found constant with value 107of type 2
DEBUG 02:15:41,097 - constant factor is type 2
DEBUG 02:15:41,097 - term SingleFactorterm is type 2
DEBUG 02:15:41,097 - exprWithNoMinus
ERROR 02:15:41,097 - Identifier z already used.
DEBUG 02:15:41,097 - designator simple at line 46: z
DEBUG 02:15:41,097 - designator simple at line 46: a
DEBUG 02:15:41,097 - designator simple at line 46: b
DEBUG 02:15:41,097 - term element is type 1
DEBUG 02:15:41,097 - term list single is type 1
DEBUG 02:15:41,097 - designator simple at line 46: c
DEBUG 02:15:41,097 - term element is type 1
DEBUG 02:15:41,097 - term list multiple is type 1
DEBUG 02:15:41,097 - term MultiFactorTerm is type 1
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,097 - designator simple at line 47: z
DEBUG 02:15:41,097 - term SingleFactorterm is type 1
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,097 - class decl end
DEBUG 02:15:41,097 - class decl 1
DEBUG 02:15:41,097 - Variable with name zapreminaK has the address of 1
DEBUG 02:15:41,097 - Variable with name zapreminaS has the address of 2
DEBUG 02:15:41,097 - Variable with name tezinaK has the address of 3
DEBUG 02:15:41,097 - Variable with name tezinaS has the address of 4
DEBUG 02:15:41,097 - program begin
DEBUG 02:15:41,097 - designator simple at line 58: p
DEBUG 02:15:41,097 - designator simple at line 58: vrsta
DEBUG 02:15:41,097 - term SingleFactorterm is type 2
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,097 - print statement has arg of type 2
DEBUG 02:15:41,097 - designator simple at line 59: eol
DEBUG 02:15:41,097 - term SingleFactorterm is type 2
DEBUG 02:15:41,097 - exprWithNoMinus
DEBUG 02:15:41,098 - print statement has arg of type 2
DEBUG 02:15:41,098 - designator simple at line 60: p
DEBUG 02:15:41,098 - designator simple at line 60: tezina
DEBUG 02:15:41,098 - term SingleFactorterm is type 1
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - print statement has arg of type 1
DEBUG 02:15:41,098 - Variable with name i has the address of 1
DEBUG 02:15:41,098 - Variable with name s1 has the address of 2
DEBUG 02:15:41,098 - Variable with name s2 has the address of 3
DEBUG 02:15:41,098 - Variable with name s3 has the address of 4
DEBUG 02:15:41,098 - Variable with name k1 has the address of 5
DEBUG 02:15:41,098 - Variable with name k2 has the address of 6
DEBUG 02:15:41,098 - Variable with name k3 has the address of 7
DEBUG 02:15:41,098 - Variable with name t has the address of 8
DEBUG 02:15:41,098 - designator simple at line 66: predmeti
DEBUG 02:15:41,098 - found constant with value 6of type 1
DEBUG 02:15:41,098 - constant factor is type 1
DEBUG 02:15:41,098 - term SingleFactorterm is type 1
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - term SingleFactorterm is type 3
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 67: s1
DEBUG 02:15:41,098 - term SingleFactorterm is type 4
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 68: s2
DEBUG 02:15:41,098 - term SingleFactorterm is type 4
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 69: s3
DEBUG 02:15:41,098 - term SingleFactorterm is type 4
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 71: k1
DEBUG 02:15:41,098 - term SingleFactorterm is type 4
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 72: k2
DEBUG 02:15:41,098 - term SingleFactorterm is type 4
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 73: k3
DEBUG 02:15:41,098 - term SingleFactorterm is type 4
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 75: s1
DEBUG 02:15:41,098 - designator simple at line 75: postaviPoluprecnik
DEBUG 02:15:41,098 - found constant with value 1of type 1
DEBUG 02:15:41,098 - constant factor is type 1
DEBUG 02:15:41,098 - term SingleFactorterm is type 1
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,098 - designator simple at line 76: s2
DEBUG 02:15:41,098 - designator simple at line 76: postaviPoluprecnik
DEBUG 02:15:41,098 - found constant with value 2of type 1
DEBUG 02:15:41,098 - constant factor is type 1
DEBUG 02:15:41,098 - term SingleFactorterm is type 1
DEBUG 02:15:41,098 - exprWithNoMinus
DEBUG 02:15:41,099 - designator simple at line 77: s3
DEBUG 02:15:41,099 - designator simple at line 77: postaviPoluprecnik
DEBUG 02:15:41,099 - found constant with value 3of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - designator simple at line 79: k1
DEBUG 02:15:41,099 - designator simple at line 79: postaviStranice
DEBUG 02:15:41,099 - found constant with value 1of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 2of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 3of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - designator simple at line 80: k2
DEBUG 02:15:41,099 - designator simple at line 80: postaviStranice
DEBUG 02:15:41,099 - found constant with value 2of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 3of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 4of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - designator simple at line 81: k3
DEBUG 02:15:41,099 - designator simple at line 81: postaviStranice
DEBUG 02:15:41,099 - found constant with value 3of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 4of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 5of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - found constant with value 0of type 1
DEBUG 02:15:41,099 - constant factor is type 1
DEBUG 02:15:41,099 - term SingleFactorterm is type 1
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,099 - designator simple at line 83: s1
DEBUG 02:15:41,099 - term SingleFactorterm is type 4
DEBUG 02:15:41,099 - exprWithNoMinus
DEBUG 02:15:41,100 - found constant with value 2of type 1
DEBUG 02:15:41,100 - constant factor is type 1
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 84: s2
DEBUG 02:15:41,100 - term SingleFactorterm is type 4
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - found constant with value 4of type 1
DEBUG 02:15:41,100 - constant factor is type 1
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 85: s3
DEBUG 02:15:41,100 - term SingleFactorterm is type 4
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - found constant with value 1of type 1
DEBUG 02:15:41,100 - constant factor is type 1
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 86: k1
DEBUG 02:15:41,100 - term SingleFactorterm is type 4
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - found constant with value 3of type 1
DEBUG 02:15:41,100 - constant factor is type 1
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 87: k2
DEBUG 02:15:41,100 - term SingleFactorterm is type 4
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - found constant with value 5of type 1
DEBUG 02:15:41,100 - constant factor is type 1
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 88: k3
DEBUG 02:15:41,100 - term SingleFactorterm is type 4
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 90: t
DEBUG 02:15:41,100 - designator simple at line 91: i
DEBUG 02:15:41,100 - found constant with value 0of type 1
DEBUG 02:15:41,100 - constant factor is type 1
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 94: i
DEBUG 02:15:41,100 - term SingleFactorterm is type 1
DEBUG 02:15:41,100 - exprWithNoMinus
DEBUG 02:15:41,100 - designator simple at line 94: postaviTezinu
ERROR 02:15:41,100 - Identifier t was not defined.
ERROR 02:15:41,100 - designator obj is null in rvaluedesignator1  na liniji 94
ERROR 02:15:41,100 - obj is null
DEBUG 02:15:41,100 - exprWithNoMinus
INFO  02:15:41,103 - Sfera
	ucitajTezinu(0); Q(0); postaviVrstu(0); postaviTezinu(0); postaviPoluprecnik(0); zapremina(0); 
Predmet
	postaviTezinu(0); ucitajTezinu(0); zapremina(0); Q(0); postaviVrstu(0); 
Kvadar
	ucitajTezinu(0); Q(0); postaviVrstu(0); postaviTezinu(0); postaviStranice(0); zapremina(0); 

