INFO  01:32:37,196 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  01:32:37,258 - #40 program
INFO  01:32:37,259 - #45 test_303
INFO  01:32:37,259 - #44 const
INFO  01:32:37,259 - #45 int
INFO  01:32:37,259 - #45 cinilac
INFO  01:32:37,259 - #28 =
INFO  01:32:37,259 - #9 4
INFO  01:32:37,259 - #12 ,
INFO  01:32:37,260 - #45 delilac
INFO  01:32:37,260 - #28 =
INFO  01:32:37,260 - #9 3
INFO  01:32:37,260 - #13 ;
INFO  01:32:37,260 - #38 class
INFO  01:32:37,260 - #45 Predmet
INFO  01:32:37,260 - #34 {
INFO  01:32:37,261 - #45 int
INFO  01:32:37,261 - #45 tezina
INFO  01:32:37,261 - #13 ;
INFO  01:32:37,261 - #45 char
INFO  01:32:37,261 - #45 vrsta
INFO  01:32:37,261 - #13 ;
INFO  01:32:37,262 - #34 {
INFO  01:32:37,262 - #43 void
INFO  01:32:37,262 - #45 postaviTezinu
INFO  01:32:37,263 - #32 (
INFO  01:32:37,263 - #45 int
INFO  01:32:37,263 - #45 tezina
INFO  01:32:37,263 - #33 )
INFO  01:32:37,264 - #34 {
INFO  01:32:37,264 - #45 this
INFO  01:32:37,264 - #14 .
INFO  01:32:37,265 - #45 tezina
INFO  01:32:37,265 - #28 =
INFO  01:32:37,265 - #45 tezina
INFO  01:32:37,265 - #13 ;
INFO  01:32:37,267 - #35 }
INFO  01:32:37,267 - #43 void
INFO  01:32:37,268 - #45 ucitajTezinu
INFO  01:32:37,269 - #32 (
INFO  01:32:37,269 - #33 )
INFO  01:32:37,269 - #34 {
INFO  01:32:37,269 - #42 read
INFO  01:32:37,269 - #32 (
INFO  01:32:37,269 - #45 tezina
INFO  01:32:37,269 - #33 )
INFO  01:32:37,269 - #13 ;
INFO  01:32:37,269 - #35 }
INFO  01:32:37,269 - #45 int
INFO  01:32:37,269 - #45 zapremina
INFO  01:32:37,270 - #32 (
INFO  01:32:37,270 - #33 )
INFO  01:32:37,270 - #34 {
INFO  01:32:37,270 - #8 return
INFO  01:32:37,270 - #9 0
INFO  01:32:37,270 - #13 ;
INFO  01:32:37,270 - #35 }
INFO  01:32:37,270 - #45 int
INFO  01:32:37,270 - #45 Q
INFO  01:32:37,270 - #32 (
INFO  01:32:37,270 - #33 )
INFO  01:32:37,270 - #34 {
INFO  01:32:37,270 - #8 return
INFO  01:32:37,270 - #45 this
INFO  01:32:37,270 - #14 .
INFO  01:32:37,270 - #45 zapremina
INFO  01:32:37,270 - #32 (
INFO  01:32:37,271 - #33 )
INFO  01:32:37,271 - #17 *
INFO  01:32:37,271 - #45 tezina
INFO  01:32:37,271 - #13 ;
INFO  01:32:37,272 - #35 }
INFO  01:32:37,272 - #43 void
INFO  01:32:37,272 - #45 postaviVrstu
INFO  01:32:37,272 - #32 (
INFO  01:32:37,272 - #45 char
INFO  01:32:37,272 - #45 vrsta
INFO  01:32:37,272 - #33 )
INFO  01:32:37,272 - #34 {
INFO  01:32:37,272 - #45 this
INFO  01:32:37,272 - #14 .
INFO  01:32:37,272 - #45 vrsta
INFO  01:32:37,272 - #28 =
INFO  01:32:37,272 - #45 vrsta
INFO  01:32:37,272 - #13 ;
INFO  01:32:37,272 - #35 }
INFO  01:32:37,272 - #35 }
INFO  01:32:37,272 - #35 }
INFO  01:32:37,273 - #38 class
INFO  01:32:37,274 - #45 Sfera
INFO  01:32:37,274 - #39 extends
INFO  01:32:37,274 - #45 Predmet
INFO  01:32:37,274 - #34 {
INFO  01:32:37,274 - #45 int
INFO  01:32:37,274 - #45 r
INFO  01:32:37,274 - #13 ;
INFO  01:32:37,274 - #34 {
INFO  01:32:37,274 - #43 void
INFO  01:32:37,274 - #45 postaviTezinu
INFO  01:32:37,274 - #32 (
INFO  01:32:37,274 - #45 int
INFO  01:32:37,274 - #45 tezina
INFO  01:32:37,274 - #33 )
INFO  01:32:37,274 - #34 {
INFO  01:32:37,274 - #45 this
INFO  01:32:37,274 - #14 .
INFO  01:32:37,274 - #45 tezina
INFO  01:32:37,274 - #28 =
INFO  01:32:37,274 - #45 tezina
INFO  01:32:37,274 - #13 ;
INFO  01:32:37,274 - #45 vrsta
INFO  01:32:37,274 - #28 =
INFO  01:32:37,275 - #10 s
INFO  01:32:37,275 - #13 ;
INFO  01:32:37,275 - #35 }
INFO  01:32:37,275 - #43 void
INFO  01:32:37,275 - #45 postaviPoluprecnik
INFO  01:32:37,275 - #32 (
INFO  01:32:37,275 - #45 int
INFO  01:32:37,275 - #45 r
INFO  01:32:37,275 - #33 )
INFO  01:32:37,275 - #34 {
INFO  01:32:37,275 - #45 this
INFO  01:32:37,275 - #14 .
INFO  01:32:37,275 - #45 r
INFO  01:32:37,275 - #28 =
INFO  01:32:37,275 - #45 r
INFO  01:32:37,275 - #13 ;
INFO  01:32:37,275 - #45 postaviVrstu
INFO  01:32:37,275 - #32 (
INFO  01:32:37,275 - #10 s
INFO  01:32:37,275 - #33 )
INFO  01:32:37,276 - #13 ;
INFO  01:32:37,276 - #41 print
INFO  01:32:37,276 - #32 (
INFO  01:32:37,276 - #10 x
INFO  01:32:37,276 - #33 )
INFO  01:32:37,276 - #13 ;
INFO  01:32:37,276 - #41 print
INFO  01:32:37,276 - #32 (
INFO  01:32:37,276 - #45 r
INFO  01:32:37,276 - #12 ,
INFO  01:32:37,276 - #9 1
INFO  01:32:37,276 - #33 )
INFO  01:32:37,277 - #13 ;
INFO  01:32:37,277 - #41 print
INFO  01:32:37,277 - #32 (
INFO  01:32:37,277 - #10 :
INFO  01:32:37,277 - #33 )
INFO  01:32:37,277 - #13 ;
INFO  01:32:37,277 - #41 print
INFO  01:32:37,277 - #32 (
INFO  01:32:37,277 - #45 this
INFO  01:32:37,277 - #14 .
INFO  01:32:37,277 - #45 r
INFO  01:32:37,277 - #12 ,
INFO  01:32:37,277 - #9 1
INFO  01:32:37,277 - #33 )
INFO  01:32:37,277 - #13 ;
INFO  01:32:37,277 - #35 }
INFO  01:32:37,277 - #45 int
INFO  01:32:37,277 - #45 zapremina
INFO  01:32:37,277 - #32 (
INFO  01:32:37,277 - #33 )
INFO  01:32:37,277 - #45 int
INFO  01:32:37,278 - #45 z
INFO  01:32:37,278 - #13 ;
INFO  01:32:37,278 - #34 {
INFO  01:32:37,278 - #45 z
INFO  01:32:37,278 - #28 =
INFO  01:32:37,278 - #45 cinilac
INFO  01:32:37,278 - #13 ;
INFO  01:32:37,278 - #8 return
INFO  01:32:37,278 - #45 z
INFO  01:32:37,278 - #17 *
INFO  01:32:37,278 - #32 (
INFO  01:32:37,278 - #45 r
INFO  01:32:37,278 - #18 /
INFO  01:32:37,278 - #45 delilac
INFO  01:32:37,278 - #33 )
INFO  01:32:37,278 - #13 ;
INFO  01:32:37,279 - #35 }
INFO  01:32:37,279 - #35 }
INFO  01:32:37,279 - #35 }
INFO  01:32:37,279 - #38 class
INFO  01:32:37,279 - #45 Kvadar
INFO  01:32:37,279 - #39 extends
INFO  01:32:37,279 - #45 Predmet
INFO  01:32:37,279 - #34 {
INFO  01:32:37,279 - #45 int
INFO  01:32:37,279 - #45 a
INFO  01:32:37,279 - #12 ,
INFO  01:32:37,279 - #45 b
INFO  01:32:37,279 - #12 ,
INFO  01:32:37,279 - #45 c
INFO  01:32:37,279 - #13 ;
INFO  01:32:37,279 - #34 {
INFO  01:32:37,279 - #43 void
INFO  01:32:37,279 - #45 postaviTezinu
INFO  01:32:37,279 - #32 (
INFO  01:32:37,280 - #45 int
INFO  01:32:37,280 - #45 tezina
INFO  01:32:37,280 - #33 )
INFO  01:32:37,280 - #34 {
INFO  01:32:37,280 - #45 this
INFO  01:32:37,280 - #14 .
INFO  01:32:37,280 - #45 tezina
INFO  01:32:37,280 - #28 =
INFO  01:32:37,280 - #45 tezina
INFO  01:32:37,280 - #13 ;
INFO  01:32:37,280 - #45 vrsta
INFO  01:32:37,280 - #28 =
INFO  01:32:37,280 - #10 k
INFO  01:32:37,280 - #13 ;
INFO  01:32:37,280 - #35 }
INFO  01:32:37,280 - #43 void
INFO  01:32:37,280 - #45 postaviStranice
INFO  01:32:37,280 - #32 (
INFO  01:32:37,280 - #45 int
INFO  01:32:37,280 - #45 a
INFO  01:32:37,280 - #12 ,
INFO  01:32:37,280 - #45 int
INFO  01:32:37,280 - #45 b
INFO  01:32:37,280 - #12 ,
INFO  01:32:37,281 - #45 int
INFO  01:32:37,281 - #45 c
INFO  01:32:37,281 - #33 )
INFO  01:32:37,281 - #34 {
INFO  01:32:37,281 - #45 this
INFO  01:32:37,281 - #14 .
INFO  01:32:37,281 - #45 a
INFO  01:32:37,281 - #28 =
INFO  01:32:37,281 - #45 a
INFO  01:32:37,281 - #13 ;
INFO  01:32:37,281 - #45 this
INFO  01:32:37,281 - #14 .
INFO  01:32:37,282 - #45 b
INFO  01:32:37,282 - #28 =
INFO  01:32:37,282 - #45 b
INFO  01:32:37,282 - #13 ;
INFO  01:32:37,282 - #45 this
INFO  01:32:37,282 - #14 .
INFO  01:32:37,282 - #45 c
INFO  01:32:37,282 - #28 =
INFO  01:32:37,282 - #45 c
INFO  01:32:37,282 - #13 ;
INFO  01:32:37,282 - #45 vrsta
INFO  01:32:37,282 - #28 =
INFO  01:32:37,282 - #10 k
INFO  01:32:37,282 - #13 ;
INFO  01:32:37,282 - #35 }
INFO  01:32:37,282 - #45 int
INFO  01:32:37,282 - #45 zapremina
INFO  01:32:37,282 - #32 (
INFO  01:32:37,282 - #33 )
INFO  01:32:37,282 - #45 int
INFO  01:32:37,282 - #45 z
INFO  01:32:37,283 - #13 ;
INFO  01:32:37,283 - #34 {
INFO  01:32:37,283 - #45 z
INFO  01:32:37,283 - #28 =
INFO  01:32:37,283 - #45 a
INFO  01:32:37,283 - #17 *
INFO  01:32:37,283 - #45 b
INFO  01:32:37,283 - #17 *
INFO  01:32:37,283 - #45 c
INFO  01:32:37,283 - #13 ;
INFO  01:32:37,283 - #8 return
INFO  01:32:37,283 - #45 z
INFO  01:32:37,283 - #13 ;
INFO  01:32:37,283 - #35 }
INFO  01:32:37,283 - #35 }
INFO  01:32:37,283 - #35 }
INFO  01:32:37,284 - #45 int
INFO  01:32:37,284 - #45 zapreminaK
INFO  01:32:37,284 - #12 ,
INFO  01:32:37,284 - #45 zapreminaS
INFO  01:32:37,284 - #13 ;
INFO  01:32:37,284 - #45 int
INFO  01:32:37,284 - #45 tezinaK
INFO  01:32:37,284 - #12 ,
INFO  01:32:37,284 - #45 tezinaS
INFO  01:32:37,284 - #13 ;
INFO  01:32:37,284 - #34 {
INFO  01:32:37,284 - #43 void
INFO  01:32:37,285 - #45 ispis
INFO  01:32:37,285 - #32 (
INFO  01:32:37,285 - #45 Predmet
INFO  01:32:37,285 - #45 p
INFO  01:32:37,285 - #33 )
INFO  01:32:37,285 - #34 {
INFO  01:32:37,285 - #41 print
INFO  01:32:37,285 - #32 (
INFO  01:32:37,285 - #45 p
INFO  01:32:37,285 - #14 .
INFO  01:32:37,285 - #45 vrsta
INFO  01:32:37,285 - #33 )
INFO  01:32:37,285 - #13 ;
INFO  01:32:37,285 - #41 print
INFO  01:32:37,285 - #32 (
INFO  01:32:37,285 - #45 p
INFO  01:32:37,285 - #14 .
INFO  01:32:37,286 - #45 tezina
INFO  01:32:37,286 - #33 )
INFO  01:32:37,286 - #13 ;
INFO  01:32:37,286 - #41 print
INFO  01:32:37,286 - #32 (
INFO  01:32:37,286 - #45 eol
INFO  01:32:37,286 - #33 )
INFO  01:32:37,286 - #13 ;
INFO  01:32:37,286 - #35 }
INFO  01:32:37,286 - #43 void
INFO  01:32:37,286 - #45 main
INFO  01:32:37,286 - #32 (
INFO  01:32:37,286 - #33 )
INFO  01:32:37,286 - #45 Predmet
INFO  01:32:37,286 - #45 predmeti
INFO  01:32:37,286 - #36 [
INFO  01:32:37,286 - #37 ]
INFO  01:32:37,286 - #13 ;
INFO  01:32:37,286 - #45 int
INFO  01:32:37,286 - #45 i
INFO  01:32:37,286 - #13 ;
INFO  01:32:37,286 - #45 Sfera
INFO  01:32:37,286 - #45 s1
INFO  01:32:37,287 - #12 ,
INFO  01:32:37,287 - #45 s2
INFO  01:32:37,287 - #12 ,
INFO  01:32:37,287 - #45 s3
INFO  01:32:37,287 - #13 ;
INFO  01:32:37,287 - #45 Kvadar
INFO  01:32:37,287 - #45 k1
INFO  01:32:37,287 - #12 ,
INFO  01:32:37,287 - #45 k2
INFO  01:32:37,287 - #12 ,
INFO  01:32:37,287 - #45 k3
INFO  01:32:37,287 - #13 ;
INFO  01:32:37,287 - #45 int
INFO  01:32:37,287 - #45 t
INFO  01:32:37,287 - #13 ;
INFO  01:32:37,287 - #34 {
INFO  01:32:37,287 - #45 predmeti
INFO  01:32:37,287 - #28 =
INFO  01:32:37,288 - #31 new
INFO  01:32:37,288 - #45 Predmet
INFO  01:32:37,288 - #36 [
INFO  01:32:37,288 - #9 6
INFO  01:32:37,288 - #37 ]
INFO  01:32:37,288 - #13 ;
INFO  01:32:37,288 - #45 s1
INFO  01:32:37,288 - #28 =
INFO  01:32:37,288 - #31 new
INFO  01:32:37,288 - #45 Sfera
INFO  01:32:37,288 - #13 ;
INFO  01:32:37,288 - #45 s2
INFO  01:32:37,288 - #28 =
INFO  01:32:37,288 - #31 new
INFO  01:32:37,288 - #45 Sfera
INFO  01:32:37,288 - #13 ;
INFO  01:32:37,288 - #45 s3
INFO  01:32:37,288 - #28 =
INFO  01:32:37,288 - #31 new
INFO  01:32:37,288 - #45 Sfera
INFO  01:32:37,288 - #13 ;
INFO  01:32:37,288 - #45 k1
INFO  01:32:37,288 - #28 =
INFO  01:32:37,288 - #31 new
INFO  01:32:37,288 - #45 Kvadar
INFO  01:32:37,289 - #13 ;
INFO  01:32:37,289 - #45 k2
INFO  01:32:37,289 - #28 =
INFO  01:32:37,289 - #31 new
INFO  01:32:37,289 - #45 Kvadar
INFO  01:32:37,289 - #13 ;
INFO  01:32:37,289 - #45 k3
INFO  01:32:37,289 - #28 =
INFO  01:32:37,289 - #31 new
INFO  01:32:37,289 - #45 Kvadar
INFO  01:32:37,289 - #13 ;
INFO  01:32:37,289 - #45 s1
INFO  01:32:37,289 - #14 .
INFO  01:32:37,289 - #45 postaviPoluprecnik
INFO  01:32:37,289 - #32 (
INFO  01:32:37,289 - #9 1
INFO  01:32:37,289 - #33 )
INFO  01:32:37,289 - #13 ;
INFO  01:32:37,289 - #45 s2
INFO  01:32:37,289 - #14 .
INFO  01:32:37,289 - #45 postaviPoluprecnik
INFO  01:32:37,289 - #32 (
INFO  01:32:37,289 - #9 2
INFO  01:32:37,289 - #33 )
INFO  01:32:37,290 - #13 ;
INFO  01:32:37,290 - #45 s3
INFO  01:32:37,290 - #14 .
INFO  01:32:37,290 - #45 postaviPoluprecnik
INFO  01:32:37,290 - #32 (
INFO  01:32:37,290 - #9 3
INFO  01:32:37,290 - #33 )
INFO  01:32:37,290 - #13 ;
INFO  01:32:37,290 - #45 k1
INFO  01:32:37,290 - #14 .
INFO  01:32:37,290 - #45 postaviStranice
INFO  01:32:37,290 - #32 (
INFO  01:32:37,290 - #9 1
INFO  01:32:37,290 - #12 ,
INFO  01:32:37,290 - #9 2
INFO  01:32:37,290 - #12 ,
INFO  01:32:37,290 - #9 3
INFO  01:32:37,290 - #33 )
INFO  01:32:37,290 - #13 ;
INFO  01:32:37,290 - #45 k2
INFO  01:32:37,290 - #14 .
INFO  01:32:37,290 - #45 postaviStranice
INFO  01:32:37,290 - #32 (
INFO  01:32:37,290 - #9 2
INFO  01:32:37,290 - #12 ,
INFO  01:32:37,290 - #9 3
INFO  01:32:37,290 - #12 ,
INFO  01:32:37,290 - #9 4
INFO  01:32:37,290 - #33 )
INFO  01:32:37,290 - #13 ;
INFO  01:32:37,291 - #45 k3
INFO  01:32:37,291 - #14 .
INFO  01:32:37,291 - #45 postaviStranice
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #9 3
INFO  01:32:37,291 - #12 ,
INFO  01:32:37,291 - #9 4
INFO  01:32:37,291 - #12 ,
INFO  01:32:37,291 - #9 5
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #13 ;
INFO  01:32:37,291 - #41 print
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #45 s1
INFO  01:32:37,291 - #14 .
INFO  01:32:37,291 - #45 zapremina
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #13 ;
INFO  01:32:37,291 - #41 print
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #45 s2
INFO  01:32:37,291 - #14 .
INFO  01:32:37,291 - #45 zapremina
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #13 ;
INFO  01:32:37,291 - #41 print
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #45 s3
INFO  01:32:37,291 - #14 .
INFO  01:32:37,291 - #45 zapremina
INFO  01:32:37,291 - #32 (
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #33 )
INFO  01:32:37,291 - #13 ;
INFO  01:32:37,292 - #41 print
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #45 k1
INFO  01:32:37,292 - #14 .
INFO  01:32:37,292 - #45 zapremina
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #13 ;
INFO  01:32:37,292 - #41 print
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #45 k2
INFO  01:32:37,292 - #14 .
INFO  01:32:37,292 - #45 zapremina
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #13 ;
INFO  01:32:37,292 - #41 print
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #45 k3
INFO  01:32:37,292 - #14 .
INFO  01:32:37,292 - #45 zapremina
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #13 ;
INFO  01:32:37,292 - #41 print
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #45 eol
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #13 ;
INFO  01:32:37,292 - #41 print
INFO  01:32:37,292 - #32 (
INFO  01:32:37,292 - #45 s1
INFO  01:32:37,292 - #14 .
INFO  01:32:37,292 - #45 r
INFO  01:32:37,292 - #33 )
INFO  01:32:37,292 - #13 ;
INFO  01:32:37,292 - #41 print
INFO  01:32:37,292 - #32 (
INFO  01:32:37,293 - #45 s2
INFO  01:32:37,293 - #14 .
INFO  01:32:37,293 - #45 r
INFO  01:32:37,293 - #33 )
INFO  01:32:37,293 - #13 ;
INFO  01:32:37,293 - #41 print
INFO  01:32:37,293 - #32 (
INFO  01:32:37,293 - #45 s3
INFO  01:32:37,293 - #14 .
INFO  01:32:37,293 - #45 r
INFO  01:32:37,293 - #33 )
INFO  01:32:37,293 - #13 ;
INFO  01:32:37,293 - #45 predmeti
INFO  01:32:37,293 - #36 [
INFO  01:32:37,293 - #9 0
INFO  01:32:37,293 - #37 ]
INFO  01:32:37,293 - #28 =
INFO  01:32:37,293 - #45 s1
INFO  01:32:37,293 - #13 ;
INFO  01:32:37,293 - #45 predmeti
INFO  01:32:37,293 - #36 [
INFO  01:32:37,293 - #9 2
INFO  01:32:37,294 - #37 ]
INFO  01:32:37,294 - #28 =
INFO  01:32:37,294 - #45 s2
INFO  01:32:37,294 - #13 ;
INFO  01:32:37,294 - #45 predmeti
INFO  01:32:37,294 - #36 [
INFO  01:32:37,294 - #9 4
INFO  01:32:37,294 - #37 ]
INFO  01:32:37,294 - #28 =
INFO  01:32:37,294 - #45 s3
INFO  01:32:37,294 - #13 ;
INFO  01:32:37,294 - #45 predmeti
INFO  01:32:37,294 - #36 [
INFO  01:32:37,294 - #9 1
INFO  01:32:37,294 - #37 ]
INFO  01:32:37,294 - #28 =
INFO  01:32:37,294 - #45 k1
INFO  01:32:37,294 - #13 ;
INFO  01:32:37,294 - #45 predmeti
INFO  01:32:37,294 - #36 [
INFO  01:32:37,294 - #9 3
INFO  01:32:37,294 - #37 ]
INFO  01:32:37,294 - #28 =
INFO  01:32:37,294 - #45 k2
INFO  01:32:37,294 - #13 ;
INFO  01:32:37,294 - #45 predmeti
INFO  01:32:37,294 - #36 [
INFO  01:32:37,294 - #9 5
INFO  01:32:37,294 - #37 ]
INFO  01:32:37,294 - #28 =
INFO  01:32:37,295 - #45 k3
INFO  01:32:37,295 - #13 ;
INFO  01:32:37,295 - #42 read
INFO  01:32:37,295 - #32 (
INFO  01:32:37,295 - #45 t
INFO  01:32:37,295 - #33 )
INFO  01:32:37,295 - #13 ;
INFO  01:32:37,295 - #45 i
INFO  01:32:37,295 - #28 =
INFO  01:32:37,295 - #9 0
INFO  01:32:37,295 - #13 ;
INFO  01:32:37,295 - #5 do
INFO  01:32:37,295 - #34 {
INFO  01:32:37,296 - #45 predmeti
INFO  01:32:37,296 - #36 [
INFO  01:32:37,296 - #45 i
INFO  01:32:37,296 - #37 ]
INFO  01:32:37,296 - #14 .
INFO  01:32:37,296 - #45 postaviTezinu
INFO  01:32:37,296 - #32 (
INFO  01:32:37,296 - #45 t
INFO  01:32:37,296 - #33 )
INFO  01:32:37,296 - #13 ;
INFO  01:32:37,296 - #45 i
INFO  01:32:37,296 - #29 ++
INFO  01:32:37,296 - #13 ;
INFO  01:32:37,296 - #35 }
INFO  01:32:37,296 - #6 while
INFO  01:32:37,297 - #32 (
INFO  01:32:37,297 - #45 i
INFO  01:32:37,297 - #23 <
INFO  01:32:37,297 - #9 6
INFO  01:32:37,298 - #33 )
INFO  01:32:37,298 - #13 ;
INFO  01:32:37,298 - #45 i
INFO  01:32:37,299 - #28 =
INFO  01:32:37,299 - #9 0
INFO  01:32:37,299 - #13 ;
INFO  01:32:37,299 - #45 zapreminaS
INFO  01:32:37,299 - #28 =
INFO  01:32:37,299 - #9 0
INFO  01:32:37,299 - #13 ;
INFO  01:32:37,299 - #45 tezinaS
INFO  01:32:37,299 - #28 =
INFO  01:32:37,299 - #9 0
INFO  01:32:37,299 - #13 ;
INFO  01:32:37,299 - #5 do
INFO  01:32:37,299 - #34 {
INFO  01:32:37,299 - #45 i
INFO  01:32:37,299 - #29 ++
INFO  01:32:37,299 - #13 ;
INFO  01:32:37,299 - #2 if
INFO  01:32:37,299 - #32 (
INFO  01:32:37,299 - #45 i
INFO  01:32:37,299 - #19 %
INFO  01:32:37,299 - #9 2
INFO  01:32:37,300 - #20 ==
INFO  01:32:37,300 - #9 0
INFO  01:32:37,300 - #33 )
INFO  01:32:37,300 - #7 continue
INFO  01:32:37,300 - #13 ;
INFO  01:32:37,300 - #45 zapreminaS
INFO  01:32:37,301 - #28 =
INFO  01:32:37,301 - #45 zapreminaS
INFO  01:32:37,301 - #15 +
INFO  01:32:37,301 - #45 predmeti
INFO  01:32:37,302 - #36 [
INFO  01:32:37,302 - #45 i
INFO  01:32:37,302 - #16 -
INFO  01:32:37,302 - #9 1
INFO  01:32:37,302 - #37 ]
INFO  01:32:37,302 - #14 .
INFO  01:32:37,302 - #45 zapremina
INFO  01:32:37,302 - #32 (
INFO  01:32:37,303 - #33 )
INFO  01:32:37,303 - #13 ;
INFO  01:32:37,303 - #45 tezinaS
INFO  01:32:37,303 - #28 =
INFO  01:32:37,303 - #45 tezinaS
INFO  01:32:37,303 - #15 +
INFO  01:32:37,303 - #45 predmeti
INFO  01:32:37,303 - #36 [
INFO  01:32:37,303 - #45 i
INFO  01:32:37,303 - #16 -
INFO  01:32:37,303 - #9 1
INFO  01:32:37,303 - #37 ]
INFO  01:32:37,303 - #14 .
INFO  01:32:37,303 - #45 Q
INFO  01:32:37,303 - #32 (
INFO  01:32:37,303 - #33 )
INFO  01:32:37,303 - #13 ;
INFO  01:32:37,303 - #45 ispis
INFO  01:32:37,303 - #32 (
INFO  01:32:37,303 - #45 predmeti
INFO  01:32:37,303 - #36 [
INFO  01:32:37,303 - #45 i
INFO  01:32:37,303 - #16 -
INFO  01:32:37,303 - #9 1
INFO  01:32:37,303 - #37 ]
INFO  01:32:37,303 - #33 )
INFO  01:32:37,303 - #13 ;
INFO  01:32:37,303 - #35 }
INFO  01:32:37,303 - #6 while
INFO  01:32:37,303 - #32 (
INFO  01:32:37,303 - #45 i
INFO  01:32:37,303 - #23 <
INFO  01:32:37,303 - #9 6
INFO  01:32:37,303 - #33 )
INFO  01:32:37,303 - #13 ;
INFO  01:32:37,303 - #45 i
INFO  01:32:37,303 - #28 =
INFO  01:32:37,303 - #9 0
INFO  01:32:37,303 - #13 ;
INFO  01:32:37,303 - #45 zapreminaK
INFO  01:32:37,303 - #28 =
INFO  01:32:37,303 - #9 0
INFO  01:32:37,303 - #13 ;
INFO  01:32:37,304 - #45 tezinaK
INFO  01:32:37,304 - #28 =
INFO  01:32:37,304 - #9 0
INFO  01:32:37,304 - #13 ;
INFO  01:32:37,304 - #5 do
INFO  01:32:37,304 - #34 {
INFO  01:32:37,304 - #45 i
INFO  01:32:37,304 - #29 ++
INFO  01:32:37,304 - #13 ;
INFO  01:32:37,304 - #2 if
INFO  01:32:37,304 - #32 (
INFO  01:32:37,304 - #45 i
INFO  01:32:37,304 - #19 %
INFO  01:32:37,304 - #9 2
INFO  01:32:37,304 - #20 ==
INFO  01:32:37,304 - #9 1
INFO  01:32:37,304 - #33 )
INFO  01:32:37,304 - #7 continue
INFO  01:32:37,304 - #13 ;
INFO  01:32:37,304 - #45 zapreminaK
INFO  01:32:37,304 - #28 =
INFO  01:32:37,306 - #45 zapreminaK
INFO  01:32:37,306 - #15 +
INFO  01:32:37,306 - #45 predmeti
INFO  01:32:37,306 - #36 [
INFO  01:32:37,306 - #45 i
INFO  01:32:37,306 - #16 -
INFO  01:32:37,307 - #9 1
INFO  01:32:37,307 - #37 ]
INFO  01:32:37,307 - #14 .
INFO  01:32:37,307 - #45 zapremina
INFO  01:32:37,307 - #32 (
INFO  01:32:37,307 - #33 )
INFO  01:32:37,307 - #13 ;
INFO  01:32:37,307 - #45 tezinaK
INFO  01:32:37,307 - #28 =
INFO  01:32:37,307 - #45 tezinaK
INFO  01:32:37,307 - #15 +
INFO  01:32:37,307 - #45 predmeti
INFO  01:32:37,307 - #36 [
INFO  01:32:37,307 - #45 i
INFO  01:32:37,307 - #16 -
INFO  01:32:37,307 - #9 1
INFO  01:32:37,307 - #37 ]
INFO  01:32:37,307 - #14 .
INFO  01:32:37,307 - #45 Q
INFO  01:32:37,307 - #32 (
INFO  01:32:37,307 - #33 )
INFO  01:32:37,307 - #13 ;
INFO  01:32:37,307 - #45 ispis
INFO  01:32:37,307 - #32 (
INFO  01:32:37,307 - #45 predmeti
INFO  01:32:37,307 - #36 [
INFO  01:32:37,307 - #45 i
INFO  01:32:37,307 - #16 -
INFO  01:32:37,307 - #9 1
INFO  01:32:37,307 - #37 ]
INFO  01:32:37,307 - #33 )
INFO  01:32:37,307 - #13 ;
INFO  01:32:37,307 - #35 }
INFO  01:32:37,307 - #6 while
INFO  01:32:37,307 - #32 (
INFO  01:32:37,307 - #45 i
INFO  01:32:37,307 - #23 <
INFO  01:32:37,307 - #9 6
INFO  01:32:37,307 - #33 )
INFO  01:32:37,307 - #13 ;
INFO  01:32:37,307 - #41 print
INFO  01:32:37,307 - #32 (
INFO  01:32:37,307 - #45 zapreminaS
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 eol
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 zapreminaK
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 eol
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 tezinaS
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 eol
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 tezinaK
INFO  01:32:37,308 - #33 )
INFO  01:32:37,308 - #13 ;
INFO  01:32:37,308 - #41 print
INFO  01:32:37,308 - #32 (
INFO  01:32:37,308 - #45 eol
INFO  01:32:37,308 - #33 )
INFO  01:32:37,309 - #13 ;
INFO  01:32:37,309 - #35 }
INFO  01:32:37,309 - #35 }
INFO  01:32:37,310 - ***Abstract tree****
INFO  01:32:37,310 - #0
DEBUG 01:32:37,344 - program name
DEBUG 01:32:37,344 - found constant with value 4of type 1
DEBUG 01:32:37,344 - found constant with value 3of type 1
DEBUG 01:32:37,344 - ClassBegin
DEBUG 01:32:39,449 - Variable with name tezina has the address of 1
DEBUG 01:32:40,701 - Variable with name vrsta has the address of 2
DEBUG 01:32:40,702 - designator simple at line 12: this
DEBUG 01:32:40,702 - designator simple at line 12: tezina
DEBUG 01:32:40,702 - designator simple at line 12: tezina
DEBUG 01:32:40,702 - term SingleFactorterm is type 1
DEBUG 01:32:40,702 - exprWithNoMinus
DEBUG 01:32:40,703 - designator simple at line 13: tezina
DEBUG 01:32:40,703 - found constant with value 0of type 1
DEBUG 01:32:40,703 - constant factor is type 1
DEBUG 01:32:40,703 - term SingleFactorterm is type 1
DEBUG 01:32:40,703 - exprWithNoMinus
DEBUG 01:32:40,703 - designator simple at line 15: this
DEBUG 01:32:40,703 - designator simple at line 15: zapremina
DEBUG 01:32:40,703 - designator simple at line 15: tezina
DEBUG 01:32:40,703 - term element is type 1
DEBUG 01:32:40,703 - term list single is type 1
DEBUG 01:32:40,703 - term MultiFactorTerm is type 1
DEBUG 01:32:40,703 - exprWithNoMinus
DEBUG 01:32:40,703 - designator simple at line 16: this
DEBUG 01:32:40,703 - designator simple at line 16: vrsta
DEBUG 01:32:40,703 - designator simple at line 16: vrsta
DEBUG 01:32:40,703 - term SingleFactorterm is type 2
DEBUG 01:32:40,703 - exprWithNoMinus
DEBUG 01:32:40,703 - class decl end
DEBUG 01:32:44,368 - class decl 1
DEBUG 01:32:44,368 - derived ClassBegin
DEBUG 01:32:50,234 - Variable with name r has the address of 3
DEBUG 01:32:50,235 - designator simple at line 24: this
DEBUG 01:32:50,235 - designator simple at line 24: tezina
DEBUG 01:32:50,235 - designator simple at line 24: tezina
DEBUG 01:32:50,235 - term SingleFactorterm is type 1
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - designator simple at line 24: vrsta
DEBUG 01:32:50,235 - found constant with value *****of type 2
DEBUG 01:32:50,235 - found constant with value 115of type 2
DEBUG 01:32:50,235 - constant factor is type 2
DEBUG 01:32:50,235 - term SingleFactorterm is type 2
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - designator simple at line 26: this
DEBUG 01:32:50,235 - designator simple at line 26: r
DEBUG 01:32:50,235 - designator simple at line 26: r
DEBUG 01:32:50,235 - term SingleFactorterm is type 1
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - designator simple at line 27: postaviVrstu
DEBUG 01:32:50,235 - found constant with value *****of type 2
DEBUG 01:32:50,235 - found constant with value 115of type 2
DEBUG 01:32:50,235 - constant factor is type 2
DEBUG 01:32:50,235 - term SingleFactorterm is type 2
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - found constant with value *****of type 2
DEBUG 01:32:50,235 - found constant with value 120of type 2
DEBUG 01:32:50,235 - constant factor is type 2
DEBUG 01:32:50,235 - term SingleFactorterm is type 2
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - print statement has arg of type 2
DEBUG 01:32:50,235 - designator simple at line 29: r
DEBUG 01:32:50,235 - term SingleFactorterm is type 1
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - found constant with value 1of type 1
DEBUG 01:32:50,235 - print statement has arg of type 1
DEBUG 01:32:50,235 - found constant with value *****of type 2
DEBUG 01:32:50,235 - found constant with value 58of type 2
DEBUG 01:32:50,235 - constant factor is type 2
DEBUG 01:32:50,235 - term SingleFactorterm is type 2
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - print statement has arg of type 2
DEBUG 01:32:50,235 - designator simple at line 31: this
DEBUG 01:32:50,235 - designator simple at line 31: r
DEBUG 01:32:50,235 - term SingleFactorterm is type 1
DEBUG 01:32:50,235 - exprWithNoMinus
DEBUG 01:32:50,235 - found constant with value 1of type 1
DEBUG 01:32:50,235 - print statement has arg of type 1
