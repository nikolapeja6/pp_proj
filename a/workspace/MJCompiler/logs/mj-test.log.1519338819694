INFO  23:30:16,065 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  23:30:16,108 - #40 program
INFO  23:30:16,108 - #45 MJProgram
INFO  23:30:16,108 - #45 int
INFO  23:30:16,109 - #45 x
INFO  23:30:16,109 - #13 ;
INFO  23:30:16,109 - #45 int
INFO  23:30:16,109 - #45 z
INFO  23:30:16,109 - #36 [
INFO  23:30:16,109 - #37 ]
INFO  23:30:16,109 - #13 ;
INFO  23:30:16,110 - #34 {
INFO  23:30:16,110 - #45 int
INFO  23:30:16,110 - #45 main
INFO  23:30:16,111 - #32 (
INFO  23:30:16,111 - #33 )
INFO  23:30:16,111 - #45 int
INFO  23:30:16,111 - #45 y
INFO  23:30:16,111 - #13 ;
INFO  23:30:16,111 - #34 {
INFO  23:30:16,111 - #41 print
INFO  23:30:16,111 - #32 (
INFO  23:30:16,111 - #9 1
INFO  23:30:16,112 - #12 ,
INFO  23:30:16,113 - #9 1
INFO  23:30:16,113 - #33 )
INFO  23:30:16,113 - #13 ;
INFO  23:30:16,113 - #41 print
INFO  23:30:16,113 - #32 (
INFO  23:30:16,113 - #10 a
INFO  23:30:16,113 - #12 ,
INFO  23:30:16,113 - #9 1
INFO  23:30:16,113 - #33 )
INFO  23:30:16,113 - #13 ;
INFO  23:30:16,113 - #45 z
INFO  23:30:19,664 - #28 =
INFO  23:30:19,664 - #31 new
INFO  23:30:19,664 - #45 int
INFO  23:30:19,664 - #36 [
INFO  23:30:19,664 - #9 5
INFO  23:30:19,664 - #37 ]
INFO  23:30:19,664 - #13 ;
INFO  23:30:19,665 - #45 z
INFO  23:30:20,640 - #36 [
INFO  23:30:20,640 - #9 0
INFO  23:30:20,640 - #37 ]
INFO  23:30:20,640 - #28 =
INFO  23:30:20,641 - #9 0
INFO  23:30:20,641 - #13 ;
INFO  23:30:20,641 - #41 print
INFO  23:30:21,322 - #32 (
INFO  23:30:21,322 - #45 z
INFO  23:30:21,322 - #36 [
INFO  23:30:21,322 - #9 0
INFO  23:30:21,322 - #37 ]
INFO  23:30:21,322 - #33 )
INFO  23:30:21,323 - #13 ;
INFO  23:30:21,323 - #45 y
INFO  23:30:22,128 - #28 =
INFO  23:30:22,128 - #9 5
INFO  23:30:22,128 - #13 ;
INFO  23:30:22,128 - #45 x
INFO  23:30:22,756 - #28 =
INFO  23:30:22,757 - #45 y
INFO  23:30:22,757 - #15 +
INFO  23:30:22,757 - #9 3
INFO  23:30:22,758 - #13 ;
INFO  23:30:22,758 - #41 print
INFO  23:30:23,406 - #32 (
INFO  23:30:23,406 - #45 x
INFO  23:30:23,406 - #33 )
INFO  23:30:23,406 - #13 ;
INFO  23:30:23,406 - #45 y
INFO  23:30:24,228 - #28 =
INFO  23:30:24,228 - #32 (
INFO  23:30:24,228 - #45 x
INFO  23:30:24,228 - #33 )
INFO  23:30:24,228 - #13 ;
INFO  23:30:24,229 - #45 x
INFO  23:30:24,886 - #29 ++
INFO  23:30:24,886 - #13 ;
INFO  23:30:24,887 - #41 print
INFO  23:30:25,819 - #32 (
INFO  23:30:25,819 - #45 x
INFO  23:30:25,819 - #33 )
INFO  23:30:25,819 - #13 ;
INFO  23:30:25,819 - #45 x
INFO  23:30:26,624 - #30 --
INFO  23:30:26,624 - #13 ;
INFO  23:30:26,624 - #41 print
INFO  23:30:30,964 - #32 (
INFO  23:30:30,964 - #32 (
INFO  23:30:30,964 - #32 (
INFO  23:30:30,964 - #45 x
INFO  23:30:30,964 - #33 )
INFO  23:30:30,964 - #33 )
INFO  23:30:30,964 - #33 )
INFO  23:30:30,964 - #13 ;
INFO  23:30:30,965 - #45 x
INFO  23:30:30,965 - #28 =
INFO  23:30:30,965 - #45 x
INFO  23:30:30,965 - #15 +
INFO  23:30:30,965 - #32 (
INFO  23:30:30,965 - #16 -
INFO  23:30:30,965 - #9 2
INFO  23:30:30,965 - #33 )
INFO  23:30:30,965 - #13 ;
INFO  23:30:30,965 - #41 print
INFO  23:30:30,965 - #32 (
INFO  23:30:30,965 - #45 x
INFO  23:30:30,965 - #33 )
INFO  23:30:30,965 - #13 ;
INFO  23:30:30,965 - #45 x
INFO  23:30:30,965 - #28 =
INFO  23:30:30,965 - #45 y
INFO  23:30:30,965 - #17 *
INFO  23:30:30,965 - #9 2
INFO  23:30:30,966 - #13 ;
INFO  23:30:30,967 - #41 print
INFO  23:30:30,967 - #32 (
INFO  23:30:30,967 - #45 x
INFO  23:30:30,967 - #33 )
INFO  23:30:30,967 - #13 ;
INFO  23:30:30,967 - #45 y
INFO  23:30:30,967 - #28 =
INFO  23:30:30,968 - #45 x
INFO  23:30:30,968 - #18 /
INFO  23:30:30,968 - #9 4
INFO  23:30:30,968 - #13 ;
INFO  23:30:30,968 - #41 print
INFO  23:30:30,969 - #32 (
INFO  23:30:30,969 - #45 y
INFO  23:30:30,969 - #33 )
INFO  23:30:30,970 - #13 ;
INFO  23:30:30,970 - #45 x
INFO  23:30:30,970 - #28 =
INFO  23:30:30,970 - #45 y
INFO  23:30:30,970 - #19 %
INFO  23:30:30,970 - #9 3
INFO  23:30:30,970 - #13 ;
INFO  23:30:30,970 - #41 print
INFO  23:30:30,971 - #32 (
INFO  23:30:30,971 - #45 x
INFO  23:30:30,971 - #33 )
INFO  23:30:30,971 - #13 ;
INFO  23:30:30,971 - #42 read
INFO  23:30:30,971 - #32 (
INFO  23:30:30,971 - #45 x
INFO  23:30:30,971 - #33 )
INFO  23:30:30,971 - #13 ;
INFO  23:30:30,972 - #45 x
INFO  23:30:30,972 - #28 =
INFO  23:30:30,972 - #45 x
INFO  23:30:30,972 - #17 *
INFO  23:30:30,972 - #45 y
INFO  23:30:30,972 - #13 ;
INFO  23:30:30,972 - #41 print
INFO  23:30:30,972 - #32 (
INFO  23:30:30,972 - #45 x
INFO  23:30:30,972 - #33 )
INFO  23:30:30,972 - #13 ;
INFO  23:30:30,972 - #41 print
INFO  23:30:30,973 - #32 (
INFO  23:30:30,973 - #11 false
INFO  23:30:30,973 - #12 ,
INFO  23:30:30,973 - #9 20
INFO  23:30:30,973 - #33 )
INFO  23:30:30,973 - #13 ;
INFO  23:30:30,973 - #8 return
INFO  23:30:30,973 - #9 0
INFO  23:30:30,973 - #13 ;
INFO  23:30:30,973 - #35 }
INFO  23:30:30,973 - #35 }
INFO  23:30:30,975 - ***Abstract tree****
INFO  23:30:30,976 - #0
DEBUG 23:30:46,602 - Variable with name x has the address of 0
DEBUG 23:30:49,758 - Variable with name y has the address of 0
DEBUG 23:30:49,758 - found constant with value 1of type 1
DEBUG 23:30:49,758 - constant factor is type 1
DEBUG 23:30:49,759 - term SingleFactorterm is type 1
DEBUG 23:30:49,759 - exprWithNoMinus is type 1
DEBUG 23:30:49,759 - found constant with value 1of type 1
DEBUG 23:30:49,759 - print statement has arg of type 1
DEBUG 23:30:49,759 - found constant with value *****of type 2
DEBUG 23:30:49,759 - found constant with value 97of type 2
DEBUG 23:30:49,759 - constant factor is type 2
DEBUG 23:30:49,759 - term SingleFactorterm is type 2
DEBUG 23:30:49,759 - exprWithNoMinus is type 2
DEBUG 23:30:49,759 - found constant with value 1of type 1
DEBUG 23:30:49,759 - print statement has arg of type 2
DEBUG 23:30:49,759 - found constant with value 5of type 1
DEBUG 23:30:49,759 - constant factor is type 1
DEBUG 23:30:49,759 - term SingleFactorterm is type 1
DEBUG 23:30:49,759 - exprWithNoMinus is type 1
DEBUG 23:30:49,759 - term SingleFactorterm is type 3
DEBUG 23:30:49,759 - exprWithNoMinus is type 3
