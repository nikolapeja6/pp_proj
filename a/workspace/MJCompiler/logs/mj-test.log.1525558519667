INFO  00:00:46,826 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\class2.mj
INFO  00:00:46,881 - #40 program
INFO  00:00:46,881 - #45 BBB
INFO  00:00:46,881 - #38 class
INFO  00:00:46,881 - #45 A
INFO  00:00:46,881 - #34 {
INFO  00:00:46,881 - #34 {
INFO  00:00:46,882 - #45 int
INFO  00:00:46,882 - #45 op
INFO  00:00:46,882 - #32 (
INFO  00:00:46,882 - #45 int
INFO  00:00:46,882 - #45 a
INFO  00:00:46,882 - #33 )
INFO  00:00:46,882 - #34 {
INFO  00:00:46,882 - #8 return
INFO  00:00:46,883 - #45 a
INFO  00:00:46,884 - #17 *
INFO  00:00:46,884 - #45 a
INFO  00:00:46,885 - #13 ;
INFO  00:00:46,886 - #35 }
INFO  00:00:46,886 - #35 }
INFO  00:00:46,887 - #35 }
INFO  00:00:46,887 - #38 class
INFO  00:00:46,889 - #45 B
INFO  00:00:46,889 - #39 extends
INFO  00:00:46,889 - #45 A
INFO  00:00:46,889 - #34 {
INFO  00:00:46,889 - #35 }
INFO  00:00:46,889 - #38 class
INFO  00:00:46,889 - #45 C
INFO  00:00:46,890 - #39 extends
INFO  00:00:46,890 - #45 B
INFO  00:00:46,890 - #34 {
INFO  00:00:46,890 - #34 {
INFO  00:00:46,890 - #45 int
INFO  00:00:46,890 - #45 op
INFO  00:00:46,890 - #32 (
INFO  00:00:46,890 - #45 int
INFO  00:00:46,890 - #45 a
INFO  00:00:46,890 - #33 )
INFO  00:00:46,890 - #34 {
INFO  00:00:46,890 - #8 return
INFO  00:00:46,890 - #45 a
INFO  00:00:46,890 - #15 +
INFO  00:00:46,890 - #45 a
INFO  00:00:46,891 - #13 ;
INFO  00:00:46,891 - #35 }
INFO  00:00:46,892 - #35 }
INFO  00:00:46,892 - #35 }
INFO  00:00:46,892 - #34 {
INFO  00:00:46,892 - #43 void
INFO  00:00:46,893 - #45 main
INFO  00:00:46,893 - #32 (
INFO  00:00:46,893 - #33 )
INFO  00:00:46,894 - #45 A
INFO  00:00:46,894 - #45 a
INFO  00:00:46,894 - #13 ;
INFO  00:00:46,894 - #34 {
INFO  00:00:46,894 - #45 a
INFO  00:00:46,894 - #28 =
INFO  00:00:46,894 - #31 new
INFO  00:00:46,894 - #45 A
INFO  00:00:46,894 - #13 ;
INFO  00:00:46,895 - #41 print
INFO  00:00:46,895 - #32 (
INFO  00:00:46,895 - #45 a
INFO  00:00:46,895 - #14 .
INFO  00:00:46,895 - #45 op
INFO  00:00:46,895 - #32 (
INFO  00:00:46,895 - #9 5
INFO  00:00:46,895 - #33 )
INFO  00:00:46,896 - #33 )
INFO  00:00:46,896 - #13 ;
INFO  00:00:46,896 - #41 print
INFO  00:00:46,896 - #32 (
INFO  00:00:46,896 - #45 eol
INFO  00:00:46,896 - #33 )
INFO  00:00:46,896 - #13 ;
INFO  00:00:46,896 - #45 a
INFO  00:00:46,896 - #28 =
INFO  00:00:46,896 - #31 new
INFO  00:00:46,896 - #45 B
INFO  00:00:46,896 - #13 ;
INFO  00:00:46,897 - #41 print
INFO  00:00:46,897 - #32 (
INFO  00:00:46,897 - #45 a
INFO  00:00:46,897 - #14 .
INFO  00:00:46,897 - #45 op
INFO  00:00:46,897 - #32 (
INFO  00:00:46,897 - #9 5
INFO  00:00:46,897 - #33 )
INFO  00:00:46,897 - #33 )
INFO  00:00:46,897 - #13 ;
INFO  00:00:46,897 - #41 print
INFO  00:00:46,897 - #32 (
INFO  00:00:46,897 - #45 eol
INFO  00:00:46,897 - #33 )
INFO  00:00:46,897 - #13 ;
INFO  00:00:46,897 - #45 a
INFO  00:00:46,897 - #28 =
INFO  00:00:46,897 - #31 new
INFO  00:00:46,897 - #45 C
INFO  00:00:46,897 - #13 ;
INFO  00:00:46,897 - #41 print
INFO  00:00:46,897 - #32 (
INFO  00:00:46,897 - #45 a
INFO  00:00:46,897 - #14 .
INFO  00:00:46,897 - #45 op
INFO  00:00:46,897 - #32 (
INFO  00:00:46,897 - #9 5
INFO  00:00:46,897 - #33 )
INFO  00:00:46,898 - #33 )
INFO  00:00:46,898 - #13 ;
INFO  00:00:46,898 - #41 print
INFO  00:00:46,898 - #32 (
INFO  00:00:46,898 - #45 eol
INFO  00:00:46,898 - #33 )
INFO  00:00:46,898 - #13 ;
INFO  00:00:46,898 - #35 }
INFO  00:00:46,898 - #35 }
INFO  00:00:46,899 - ***Abstract tree****
INFO  00:00:46,899 - #0
DEBUG 00:00:46,906 - program name
DEBUG 00:00:46,906 - ClassBegin
DEBUG 00:00:46,907 - designator simple at line 6: a
DEBUG 00:00:46,907 - designator simple at line 6: a
DEBUG 00:00:46,907 - term element is type 1
DEBUG 00:00:46,908 - term list single is type 1
DEBUG 00:00:46,908 - term MultiFactorTerm is type 1
DEBUG 00:00:46,908 - exprWithNoMinus is type 1
DEBUG 00:00:46,908 - class decl end
DEBUG 00:00:46,908 - class decl 2
DEBUG 00:00:46,908 - derived ClassBegin
DEBUG 00:00:46,908 - class decl end
DEBUG 00:00:46,908 - class decl 4
DEBUG 00:00:46,908 - derived ClassBegin
DEBUG 00:00:46,908 - designator simple at line 18: a
DEBUG 00:00:46,908 - term SingleFactorterm is type 1
DEBUG 00:00:46,908 - designator simple at line 18: a
DEBUG 00:00:46,908 - term SingleFactorterm is type 1
DEBUG 00:00:46,908 - exprWithNoMinus is type 1
DEBUG 00:00:46,908 - class decl end
DEBUG 00:00:46,908 - class decl 2
DEBUG 00:00:46,909 - program begin
DEBUG 00:00:46,909 - Variable with name a has the address of 0
DEBUG 00:00:46,909 - designator simple at line 25: a
DEBUG 00:00:46,909 - term SingleFactorterm is type 4
DEBUG 00:00:46,909 - exprWithNoMinus is type 4
DEBUG 00:00:46,909 - designator simple at line 27: a
DEBUG 00:00:46,909 - designator simple at line 27: op
DEBUG 00:00:46,909 - found constant with value 5of type 1
DEBUG 00:00:46,909 - constant factor is type 1
DEBUG 00:00:46,909 - term SingleFactorterm is type 1
DEBUG 00:00:46,909 - exprWithNoMinus is type 1
DEBUG 00:00:46,909 - term SingleFactorterm is type 1
DEBUG 00:00:46,909 - exprWithNoMinus is type 1
DEBUG 00:00:46,909 - print statement has arg of type 1
DEBUG 00:00:46,909 - designator simple at line 28: eol
DEBUG 00:00:46,909 - term SingleFactorterm is type 2
DEBUG 00:00:46,909 - exprWithNoMinus is type 2
DEBUG 00:00:46,909 - print statement has arg of type 2
DEBUG 00:00:46,909 - designator simple at line 30: a
DEBUG 00:00:46,909 - term SingleFactorterm is type 4
DEBUG 00:00:46,909 - exprWithNoMinus is type 4
DEBUG 00:00:46,909 - designator simple at line 31: a
DEBUG 00:00:46,909 - designator simple at line 31: op
DEBUG 00:00:46,910 - found constant with value 5of type 1
DEBUG 00:00:46,910 - constant factor is type 1
DEBUG 00:00:46,910 - term SingleFactorterm is type 1
DEBUG 00:00:46,910 - exprWithNoMinus is type 1
DEBUG 00:00:46,910 - term SingleFactorterm is type 1
DEBUG 00:00:46,910 - exprWithNoMinus is type 1
DEBUG 00:00:46,910 - print statement has arg of type 1
DEBUG 00:00:46,910 - designator simple at line 32: eol
DEBUG 00:00:46,910 - term SingleFactorterm is type 2
DEBUG 00:00:46,910 - exprWithNoMinus is type 2
DEBUG 00:00:46,910 - print statement has arg of type 2
DEBUG 00:00:46,910 - designator simple at line 34: a
DEBUG 00:00:46,910 - term SingleFactorterm is type 4
DEBUG 00:00:46,910 - exprWithNoMinus is type 4
DEBUG 00:00:46,910 - designator simple at line 35: a
DEBUG 00:00:46,910 - designator simple at line 35: op
DEBUG 00:00:46,910 - found constant with value 5of type 1
DEBUG 00:00:46,910 - constant factor is type 1
DEBUG 00:00:46,910 - term SingleFactorterm is type 1
DEBUG 00:00:46,910 - exprWithNoMinus is type 1
DEBUG 00:00:46,910 - term SingleFactorterm is type 1
DEBUG 00:00:46,910 - exprWithNoMinus is type 1
DEBUG 00:00:46,910 - print statement has arg of type 1
DEBUG 00:00:46,910 - designator simple at line 36: eol
DEBUG 00:00:46,910 - term SingleFactorterm is type 2
DEBUG 00:00:46,910 - exprWithNoMinus is type 2
DEBUG 00:00:46,910 - print statement has arg of type 2
INFO  00:00:46,910 - Print calls = 0
DEBUG 00:00:46,911 - A
	op(0); 
B
	op(0); 
C
	op(0); op(0); 

INFO  00:00:46,912 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
DEBUG 00:00:46,915 - updating vTableAddress by A class. OldValue =  1
DEBUG 00:00:46,915 - ^new value = 6
DEBUG 00:00:46,915 - updating vTableAddress by B class. OldValue =  6
DEBUG 00:00:46,915 - ^new value = 11
DEBUG 00:00:46,915 - updating vTableAddress by C class. OldValue =  11
DEBUG 00:00:46,915 - ^new value = 20
DEBUG 00:00:46,916 - new called with level = 0
DEBUG 00:00:46,916 - class is 4
DEBUG 00:00:46,916 - class methoad call op
DEBUG 00:00:46,916 - new called with level = 0
DEBUG 00:00:46,916 - class is 4
DEBUG 00:00:46,916 - class methoad call op
DEBUG 00:00:46,916 - new called with level = 0
DEBUG 00:00:46,916 - class is 4
DEBUG 00:00:46,916 - class methoad call op
INFO  00:00:46,919 - Parsiranje uspesno zavrseno!
