INFO  23:35:45,664 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  23:35:45,699 - #40 program
INFO  23:35:45,700 - #45 MJProgram
INFO  23:35:45,700 - #45 int
INFO  23:35:45,700 - #45 x
INFO  23:35:45,700 - #13 ;
INFO  23:35:45,700 - #45 int
INFO  23:35:45,701 - #45 z
INFO  23:35:45,701 - #36 [
INFO  23:35:45,701 - #37 ]
INFO  23:35:45,701 - #13 ;
INFO  23:35:45,701 - #34 {
INFO  23:35:45,701 - #45 int
INFO  23:35:45,702 - #45 main
INFO  23:35:45,702 - #32 (
INFO  23:35:45,702 - #33 )
INFO  23:35:45,702 - #45 int
INFO  23:35:45,703 - #45 y
INFO  23:35:45,703 - #13 ;
INFO  23:35:45,703 - #34 {
INFO  23:35:45,703 - #41 print
INFO  23:35:45,703 - #32 (
INFO  23:35:45,703 - #9 1
INFO  23:35:45,703 - #12 ,
INFO  23:35:45,704 - #9 1
INFO  23:35:45,704 - #33 )
INFO  23:35:45,704 - #13 ;
INFO  23:35:45,704 - #41 print
INFO  23:35:45,705 - #32 (
INFO  23:35:45,705 - #10 a
INFO  23:35:45,705 - #12 ,
INFO  23:35:45,705 - #9 1
INFO  23:35:45,705 - #33 )
INFO  23:35:45,705 - #13 ;
INFO  23:35:45,705 - #45 z
INFO  23:35:45,706 - #28 =
INFO  23:35:45,706 - #31 new
INFO  23:35:45,706 - #45 int
INFO  23:35:45,706 - #36 [
INFO  23:35:45,706 - #9 5
INFO  23:35:45,706 - #37 ]
INFO  23:35:45,706 - #13 ;
INFO  23:35:45,706 - #45 z
INFO  23:35:45,706 - #36 [
INFO  23:35:45,706 - #9 0
INFO  23:35:45,707 - #37 ]
INFO  23:35:45,707 - #28 =
INFO  23:35:45,707 - #9 0
INFO  23:35:45,707 - #13 ;
INFO  23:35:45,707 - #41 print
INFO  23:35:45,707 - #32 (
INFO  23:35:45,707 - #45 z
INFO  23:35:45,707 - #36 [
INFO  23:35:45,707 - #9 0
INFO  23:35:45,707 - #37 ]
INFO  23:35:45,707 - #33 )
INFO  23:35:45,707 - #13 ;
INFO  23:35:45,707 - #45 y
INFO  23:35:45,707 - #28 =
INFO  23:35:45,708 - #9 5
INFO  23:35:45,708 - #13 ;
INFO  23:35:45,708 - #45 x
INFO  23:35:45,708 - #28 =
INFO  23:35:45,708 - #45 y
INFO  23:35:45,708 - #15 +
INFO  23:35:45,708 - #9 3
INFO  23:35:45,708 - #13 ;
INFO  23:35:45,709 - #41 print
INFO  23:35:45,709 - #32 (
INFO  23:35:45,709 - #45 x
INFO  23:35:45,709 - #33 )
INFO  23:35:45,709 - #13 ;
INFO  23:35:45,709 - #45 y
INFO  23:35:45,709 - #28 =
INFO  23:35:45,709 - #32 (
INFO  23:35:45,709 - #45 x
INFO  23:35:45,709 - #33 )
INFO  23:35:45,709 - #13 ;
INFO  23:35:45,710 - #45 x
INFO  23:35:45,710 - #29 ++
INFO  23:35:45,710 - #13 ;
INFO  23:35:45,710 - #41 print
INFO  23:35:45,710 - #32 (
INFO  23:35:45,710 - #45 x
INFO  23:35:45,710 - #33 )
INFO  23:35:45,710 - #13 ;
INFO  23:35:45,710 - #45 x
INFO  23:35:45,710 - #30 --
INFO  23:35:45,710 - #13 ;
INFO  23:35:45,710 - #41 print
INFO  23:35:45,710 - #32 (
INFO  23:35:45,710 - #32 (
INFO  23:35:45,710 - #32 (
INFO  23:35:45,710 - #45 x
INFO  23:35:45,710 - #33 )
INFO  23:35:45,710 - #33 )
INFO  23:35:45,710 - #33 )
INFO  23:35:45,710 - #13 ;
INFO  23:35:45,710 - #45 x
INFO  23:35:45,710 - #28 =
INFO  23:35:45,711 - #45 x
INFO  23:35:45,711 - #15 +
INFO  23:35:45,711 - #32 (
INFO  23:35:45,711 - #16 -
INFO  23:35:45,711 - #9 2
INFO  23:35:45,711 - #33 )
INFO  23:35:45,711 - #13 ;
INFO  23:35:45,711 - #41 print
INFO  23:35:45,711 - #32 (
INFO  23:35:45,711 - #45 x
INFO  23:35:45,711 - #33 )
INFO  23:35:45,711 - #13 ;
INFO  23:35:45,711 - #45 x
INFO  23:35:45,711 - #28 =
INFO  23:35:45,711 - #45 y
INFO  23:35:45,711 - #17 *
INFO  23:35:45,711 - #9 2
INFO  23:35:45,712 - #13 ;
INFO  23:35:45,712 - #41 print
INFO  23:35:45,713 - #32 (
INFO  23:35:45,713 - #45 x
INFO  23:35:45,713 - #33 )
INFO  23:35:45,713 - #13 ;
INFO  23:35:45,713 - #45 y
INFO  23:35:45,713 - #28 =
INFO  23:35:45,713 - #45 x
INFO  23:35:45,713 - #18 /
INFO  23:35:45,713 - #9 4
INFO  23:35:45,713 - #13 ;
INFO  23:35:45,713 - #41 print
INFO  23:35:45,713 - #32 (
INFO  23:35:45,713 - #45 y
INFO  23:35:45,713 - #33 )
INFO  23:35:45,713 - #13 ;
INFO  23:35:45,713 - #45 x
INFO  23:35:45,713 - #28 =
INFO  23:35:45,714 - #45 y
INFO  23:35:45,714 - #19 %
INFO  23:35:45,714 - #9 3
INFO  23:35:45,714 - #13 ;
INFO  23:35:45,714 - #41 print
INFO  23:35:45,714 - #32 (
INFO  23:35:45,714 - #45 x
INFO  23:35:45,714 - #33 )
INFO  23:35:45,714 - #13 ;
INFO  23:35:45,714 - #42 read
INFO  23:35:45,714 - #32 (
INFO  23:35:45,714 - #45 x
INFO  23:35:45,714 - #33 )
INFO  23:35:45,714 - #13 ;
INFO  23:35:45,714 - #45 x
INFO  23:35:45,715 - #28 =
INFO  23:35:45,715 - #45 x
INFO  23:35:45,715 - #17 *
INFO  23:35:45,715 - #45 y
INFO  23:35:45,715 - #13 ;
INFO  23:35:45,715 - #41 print
INFO  23:35:45,715 - #32 (
INFO  23:35:45,715 - #45 x
INFO  23:35:45,715 - #33 )
INFO  23:35:45,715 - #13 ;
INFO  23:35:45,715 - #41 print
INFO  23:35:45,715 - #32 (
INFO  23:35:45,715 - #11 false
INFO  23:35:45,715 - #12 ,
INFO  23:35:45,715 - #9 20
INFO  23:35:45,715 - #33 )
INFO  23:35:45,715 - #13 ;
INFO  23:35:45,715 - #8 return
INFO  23:35:45,715 - #9 0
INFO  23:35:45,715 - #13 ;
INFO  23:35:45,715 - #35 }
INFO  23:35:45,715 - #35 }
INFO  23:35:45,717 - ***Abstract tree****
INFO  23:35:45,717 - #0
DEBUG 23:35:45,734 - Variable with name x has the address of 0
DEBUG 23:35:45,734 - Variable with name y has the address of 0
DEBUG 23:35:45,734 - found constant with value 1of type 1
DEBUG 23:35:45,734 - constant factor is type 1
DEBUG 23:35:45,734 - term SingleFactorterm is type 1
DEBUG 23:35:45,734 - exprWithNoMinus is type 1
DEBUG 23:35:45,735 - found constant with value 1of type 1
DEBUG 23:35:45,735 - print statement has arg of type 1
DEBUG 23:35:45,735 - found constant with value *****of type 2
DEBUG 23:35:45,735 - found constant with value 97of type 2
DEBUG 23:35:45,735 - constant factor is type 2
DEBUG 23:35:45,735 - term SingleFactorterm is type 2
DEBUG 23:35:45,735 - exprWithNoMinus is type 2
DEBUG 23:35:45,735 - found constant with value 1of type 1
DEBUG 23:35:45,735 - print statement has arg of type 2
DEBUG 23:35:45,735 - found constant with value 5of type 1
DEBUG 23:35:45,735 - constant factor is type 1
DEBUG 23:35:45,735 - term SingleFactorterm is type 1
DEBUG 23:35:45,735 - exprWithNoMinus is type 1
DEBUG 23:35:45,735 - term SingleFactorterm is type 3
DEBUG 23:35:45,735 - exprWithNoMinus is type 3
