// generated with ast extension for cup
// version 0.8
// 3/4/2018 17:41:29


package rs.ac.bg.etf.pp1.ast;

public abstract class VisitorAdaptor implements Visitor { 

    public void visit(Unmatched Unmatched) { }
    public void visit(ArrayName ArrayName) { }
    public void visit(ReturnType ReturnType) { }
    public void visit(ArrayFieldName ArrayFieldName) { }
    public void visit(Mulop Mulop) { }
    public void visit(MethodDecl MethodDecl) { }
    public void visit(Constant Constant) { }
    public void visit(CondFactElement CondFactElement) { }
    public void visit(Matched Matched) { }
    public void visit(MethodBegin MethodBegin) { }
    public void visit(ConstDeclElement ConstDeclElement) { }
    public void visit(Relop Relop) { }
    public void visit(TermList TermList) { }
    public void visit(DoWhileBegin DoWhileBegin) { }
    public void visit(ConditionList ConditionList) { }
    public void visit(MultipleMethodDecl MultipleMethodDecl) { }
    public void visit(CondTermList CondTermList) { }
    public void visit(MethodDesignator MethodDesignator) { }
    public void visit(ProgramEnd ProgramEnd) { }
    public void visit(OptionalExprList OptionalExprList) { }
    public void visit(DesignatorClassElement DesignatorClassElement) { }
    public void visit(FormParsElement FormParsElement) { }
    public void visit(MatchedThen MatchedThen) { }
    public void visit(Addop Addop) { }
    public void visit(ProgramBegin ProgramBegin) { }
    public void visit(Factor Factor) { }
    public void visit(CondTerm CondTerm) { }
    public void visit(CondFactList CondFactList) { }
    public void visit(MethodEnd MethodEnd) { }
    public void visit(RValueDesignator RValueDesignator) { }
    public void visit(Designator Designator) { }
    public void visit(Term Term) { }
    public void visit(DesignatorClassElementMultiple DesignatorClassElementMultiple) { }
    public void visit(Condition Condition) { }
    public void visit(DesignatorClassElementList DesignatorClassElementList) { }
    public void visit(ConstDeclList ConstDeclList) { }
    public void visit(MultipleVarDecl MultipleVarDecl) { }
    public void visit(ConditionWhile ConditionWhile) { }
    public void visit(MultipleStatements MultipleStatements) { }
    public void visit(ExprList ExprList) { }
    public void visit(DesignatorClassElemenListFirst DesignatorClassElemenListFirst) { }
    public void visit(ActParElement ActParElement) { }
    public void visit(VarDeclElement VarDeclElement) { }
    public void visit(ProgramName ProgramName) { }
    public void visit(StatementWhile StatementWhile) { }
    public void visit(LValueDesignator LValueDesignator) { }
    public void visit(VarDeclList VarDeclList) { }
    public void visit(MethodNameAndRetType MethodNameAndRetType) { }
    public void visit(Expr Expr) { }
    public void visit(VoidType VoidType) { }
    public void visit(ActPars ActPars) { }
    public void visit(ConditionElement ConditionElement) { }
    public void visit(DesignatorStatement DesignatorStatement) { }
    public void visit(MultipleDecl MultipleDecl) { }
    public void visit(Statement Statement) { }
    public void visit(ClassDeclBegin ClassDeclBegin) { }
    public void visit(VarDecl VarDecl) { }
    public void visit(ClassMethodBegin ClassMethodBegin) { }
    public void visit(Type Type) { }
    public void visit(CondTermElement CondTermElement) { }
    public void visit(ClassDecl ClassDecl) { }
    public void visit(ConstDecl ConstDecl) { }
    public void visit(ExprElement ExprElement) { }
    public void visit(CondFact CondFact) { }
    public void visit(Program Program) { }
    public void visit(TermElement TermElement) { }
    public void visit(FormPars FormPars) { }
    public void visit(DesignatorClassBegin DesignatorClassBegin) { }
    public void visit(ClassDeclEnd ClassDeclEnd) { }
    public void visit(MulopMod MulopMod) { visit(); }
    public void visit(MulopDiv MulopDiv) { visit(); }
    public void visit(MulopMultiply MulopMultiply) { visit(); }
    public void visit(AddopMinus AddopMinus) { visit(); }
    public void visit(AddopPlus AddopPlus) { visit(); }
    public void visit(RelopLEq RelopLEq) { visit(); }
    public void visit(RelopGEq RelopGEq) { visit(); }
    public void visit(RelopLs RelopLs) { visit(); }
    public void visit(RelopGr RelopGr) { visit(); }
    public void visit(RelopNEq RelopNEq) { visit(); }
    public void visit(RelopEq RelopEq) { visit(); }
    public void visit(ArrayName1 ArrayName1) { visit(); }
    public void visit(DesignatorSimple DesignatorSimple) { visit(); }
    public void visit(DesignatorArray DesignatorArray) { visit(); }
    public void visit(DesignatorClassElement1 DesignatorClassElement1) { visit(); }
    public void visit(DesignatorClassElementMultipleSingle DesignatorClassElementMultipleSingle) { visit(); }
    public void visit(DesignatorClassElementMultipleMultiple DesignatorClassElementMultipleMultiple) { visit(); }
    public void visit(MethodDesignator1 MethodDesignator1) { visit(); }
    public void visit(RValueDesignator1 RValueDesignator1) { visit(); }
    public void visit(RValueClassDesignator RValueClassDesignator) { visit(); }
    public void visit(RValueMethodCall2 RValueMethodCall2) { visit(); }
    public void visit(RValueMethodCall1 RValueMethodCall1) { visit(); }
    public void visit(LValueDesignator1 LValueDesignator1) { visit(); }
    public void visit(LValueClassDesignator LValueClassDesignator) { visit(); }
    public void visit(BoolConstant BoolConstant) { visit(); }
    public void visit(CharConstant CharConstant) { visit(); }
    public void visit(NumberConstant NumberConstant) { visit(); }
    public void visit(FactorNewObject FactorNewObject) { visit(); }
    public void visit(FactorNewArray FactorNewArray) { visit(); }
    public void visit(FactorParenExpr FactorParenExpr) { visit(); }
    public void visit(ConstantFactor ConstantFactor) { visit(); }
    public void visit(FuncttionCallFactor FuncttionCallFactor) { visit(); }
    public void visit(FuncttionCallFactorComplex FuncttionCallFactorComplex) { visit(); }
    public void visit(VariableFactor VariableFactor) { visit(); }
    public void visit(TermElement1 TermElement1) { visit(); }
    public void visit(TermListSingle TermListSingle) { visit(); }
    public void visit(TermListMultiple TermListMultiple) { visit(); }
    public void visit(SingleFactorTerm SingleFactorTerm) { visit(); }
    public void visit(MultiFactorTerm MultiFactorTerm) { visit(); }
    public void visit(ExprElement1 ExprElement1) { visit(); }
    public void visit(ExprListDerived2 ExprListDerived2) { visit(); }
    public void visit(ExprListDerived1 ExprListDerived1) { visit(); }
    public void visit(OptionalExprListDerived2 OptionalExprListDerived2) { visit(); }
    public void visit(OptionalExprListDerived1 OptionalExprListDerived1) { visit(); }
    public void visit(ExprWithNoMinus ExprWithNoMinus) { visit(); }
    public void visit(ExprWithMinus ExprWithMinus) { visit(); }
    public void visit(CondFactElement1 CondFactElement1) { visit(); }
    public void visit(CondFactListSingle CondFactListSingle) { visit(); }
    public void visit(CondFactListMultiple CondFactListMultiple) { visit(); }
    public void visit(CondFactSingle CondFactSingle) { visit(); }
    public void visit(CondFactMultiple CondFactMultiple) { visit(); }
    public void visit(CondTermElement1 CondTermElement1) { visit(); }
    public void visit(CondTermListSingle CondTermListSingle) { visit(); }
    public void visit(CondTermListMultiple CondTermListMultiple) { visit(); }
    public void visit(CondTermSingle CondTermSingle) { visit(); }
    public void visit(CondTermMultiple CondTermMultiple) { visit(); }
    public void visit(ConditionElement1 ConditionElement1) { visit(); }
    public void visit(ConditionListSingle ConditionListSingle) { visit(); }
    public void visit(ConditionListMultiple ConditionListMultiple) { visit(); }
    public void visit(ConditionSingleWhile ConditionSingleWhile) { visit(); }
    public void visit(ConditionMultipleWhile ConditionMultipleWhile) { visit(); }
    public void visit(ConditionSingle ConditionSingle) { visit(); }
    public void visit(ConditionMultiple ConditionMultiple) { visit(); }
    public void visit(DesignatorStatementDec DesignatorStatementDec) { visit(); }
    public void visit(DesignatorStatementInc DesignatorStatementInc) { visit(); }
    public void visit(DesignatorStatementFunctionCall DesignatorStatementFunctionCall) { visit(); }
    public void visit(DesignatorStatementFunctionCallComplex DesignatorStatementFunctionCallComplex) { visit(); }
    public void visit(RValueDesignatorStatement RValueDesignatorStatement) { visit(); }
    public void visit(DesignatorStatementAssignment DesignatorStatementAssignment) { visit(); }
    public void visit(MatchedThen1 MatchedThen1) { visit(); }
    public void visit(UnmatchedIfElse UnmatchedIfElse) { visit(); }
    public void visit(UnmatchedIf UnmatchedIf) { visit(); }
    public void visit(StatementWhile1 StatementWhile1) { visit(); }
    public void visit(DoWhileBegin1 DoWhileBegin1) { visit(); }
    public void visit(MatchedContinue MatchedContinue) { visit(); }
    public void visit(MatchedBreak MatchedBreak) { visit(); }
    public void visit(MatchdWhile MatchdWhile) { visit(); }
    public void visit(MatchedIf MatchedIf) { visit(); }
    public void visit(ReadStatement ReadStatement) { visit(); }
    public void visit(PrintStatement PrintStatement) { visit(); }
    public void visit(PrintStatementComplex PrintStatementComplex) { visit(); }
    public void visit(StatementReturnValue StatementReturnValue) { visit(); }
    public void visit(StatementReturnVoid StatementReturnVoid) { visit(); }
    public void visit(MatchedDerived1 MatchedDerived1) { visit(); }
    public void visit(StatementDerived4 StatementDerived4) { visit(); }
    public void visit(StatementDerived3 StatementDerived3) { visit(); }
    public void visit(StatementDerived2 StatementDerived2) { visit(); }
    public void visit(StatementDerived1 StatementDerived1) { visit(); }
    public void visit(MultipleStatementsDerived2 MultipleStatementsDerived2) { visit(); }
    public void visit(MultipleStatementsDerived1 MultipleStatementsDerived1) { visit(); }
    public void visit(Type1 Type1) { visit(); }
    public void visit(ActParElement1 ActParElement1) { visit(); }
    public void visit(ActParsDerived2 ActParsDerived2) { visit(); }
    public void visit(ActParsDerived1 ActParsDerived1) { visit(); }
    public void visit(FormParsElementSingle FormParsElementSingle) { visit(); }
    public void visit(FormParsElementArray FormParsElementArray) { visit(); }
    public void visit(FormParsDerived2 FormParsDerived2) { visit(); }
    public void visit(FormParsDerived1 FormParsDerived1) { visit(); }
    public void visit(VoidTypeDerived1 VoidTypeDerived1) { visit(); }
    public void visit(TypeReturnType TypeReturnType) { visit(); }
    public void visit(VoidReturnType VoidReturnType) { visit(); }
    public void visit(MethodEnd1 MethodEnd1) { visit(); }
    public void visit(MethodBegin1 MethodBegin1) { visit(); }
    public void visit(MethodNameAndRetType1 MethodNameAndRetType1) { visit(); }
    public void visit(MethodDeclDerived4 MethodDeclDerived4) { visit(); }
    public void visit(MethodDeclDerived3 MethodDeclDerived3) { visit(); }
    public void visit(MethodDeclDerived2 MethodDeclDerived2) { visit(); }
    public void visit(MethodDeclDerived1 MethodDeclDerived1) { visit(); }
    public void visit(MultipleMethodDeclDerived2 MultipleMethodDeclDerived2) { visit(); }
    public void visit(MultipleMethodDeclDerived1 MultipleMethodDeclDerived1) { visit(); }
    public void visit(VarDeclElementSingle VarDeclElementSingle) { visit(); }
    public void visit(VarDeclElementArray VarDeclElementArray) { visit(); }
    public void visit(VarDeclListDerived2 VarDeclListDerived2) { visit(); }
    public void visit(VarDeclListDerived1 VarDeclListDerived1) { visit(); }
    public void visit(VarDecl1 VarDecl1) { visit(); }
    public void visit(MultipleVarDeclDerived2 MultipleVarDeclDerived2) { visit(); }
    public void visit(MultipleVarDeclDerived1 MultipleVarDeclDerived1) { visit(); }
    public void visit(ConstDeclElement1 ConstDeclElement1) { visit(); }
    public void visit(ConstDeclListDerived2 ConstDeclListDerived2) { visit(); }
    public void visit(ConstDeclListDerived1 ConstDeclListDerived1) { visit(); }
    public void visit(ConstDecl1 ConstDecl1) { visit(); }
    public void visit(ClassDeclEnd1 ClassDeclEnd1) { visit(); }
    public void visit(NewClassBegin NewClassBegin) { visit(); }
    public void visit(DerivedClassBegin DerivedClassBegin) { visit(); }
    public void visit(ClassDecl4 ClassDecl4) { visit(); }
    public void visit(ClassDecl3 ClassDecl3) { visit(); }
    public void visit(ClassDecl2 ClassDecl2) { visit(); }
    public void visit(ClassDecl1 ClassDecl1) { visit(); }
    public void visit(MultipleDeclDerived6 MultipleDeclDerived6) { visit(); }
    public void visit(MultipleDeclDerived5 MultipleDeclDerived5) { visit(); }
    public void visit(MultipleDeclDerived4 MultipleDeclDerived4) { visit(); }
    public void visit(MultipleDeclDerived3 MultipleDeclDerived3) { visit(); }
    public void visit(MultipleDeclDerived2 MultipleDeclDerived2) { visit(); }
    public void visit(MultipleDeclDerived1 MultipleDeclDerived1) { visit(); }
    public void visit(ProgramEnd1 ProgramEnd1) { visit(); }
    public void visit(ProgramBegin1 ProgramBegin1) { visit(); }
    public void visit(ProgName ProgName) { visit(); }
    public void visit(Program1 Program1) { visit(); }
    public void visit(Program2 Program2) { visit(); }


    public void visit() { }
}
