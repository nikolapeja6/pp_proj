// generated with ast extension for cup
// version 0.8
// 22/1/2018 22:14:56


package rs.ac.bg.etf.pp1.ast;

public class DesignatorComplex extends Designator {

    private String I1;
    private DesignatorElementList DesignatorElementList;

    public DesignatorComplex (String I1, DesignatorElementList DesignatorElementList) {
        this.I1=I1;
        this.DesignatorElementList=DesignatorElementList;
        if(DesignatorElementList!=null) DesignatorElementList.setParent(this);
    }

    public String getI1() {
        return I1;
    }

    public void setI1(String I1) {
        this.I1=I1;
    }

    public DesignatorElementList getDesignatorElementList() {
        return DesignatorElementList;
    }

    public void setDesignatorElementList(DesignatorElementList DesignatorElementList) {
        this.DesignatorElementList=DesignatorElementList;
    }

    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    public void childrenAccept(Visitor visitor) {
        if(DesignatorElementList!=null) DesignatorElementList.accept(visitor);
    }

    public void traverseTopDown(Visitor visitor) {
        accept(visitor);
        if(DesignatorElementList!=null) DesignatorElementList.traverseTopDown(visitor);
    }

    public void traverseBottomUp(Visitor visitor) {
        if(DesignatorElementList!=null) DesignatorElementList.traverseBottomUp(visitor);
        accept(visitor);
    }

    public String toString(String tab) {
        StringBuffer buffer=new StringBuffer();
        buffer.append(tab);
        buffer.append("DesignatorComplex(\n");

        buffer.append(" "+tab+I1);
        buffer.append("\n");

        if(DesignatorElementList!=null)
            buffer.append(DesignatorElementList.toString("  "+tab));
        else
            buffer.append(tab+"  null");
        buffer.append("\n");

        buffer.append(tab);
        buffer.append(") [DesignatorComplex]");
        return buffer.toString();
    }
}
