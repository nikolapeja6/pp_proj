

/**
 *  TERMINALS: 
 *  
 *  CONTROL FLOW
 *  LITERALS
 *  PUNCTUATION
 *  OPERATORS
 *  	ARITHMETIC
 *  	COMPARISON
 *  	LOGIC
 *  	ASSIGNMENT
 *  	SIDE-EFFECT
 *  	ALLOCATION
 *  PARENTHESES
 *  CLASS REALATED
 *  OTHER
 *  
 */

/** CONTROL FLOW TERMINALS */
terminal IF, ELSE, BREAK, DO, WHILE, CONTINUE, RETURN;


/** LITERALS */
terminal NUMBER, CHAR, STRING, BOOL;


/** PUNCTUATION */
terminal COMMA, SEMICOLON, DOT;


/** OPERATORS */

/** ARITHMETIC OPERATORS */
terminal PLUS, MINUS, MULTUPLY, DIV, MOD;

/** COMPARISON OPERATORS */
terminal EQUAL, NOT_EQUAL, GREATER, LESS, GREATER_OR_EQUEL, LESS_OR_EQUEL;

/** LOGIC OPERATORS */
terminal AND, OR;

/** ASSIGNMENT */
terminal ASSIGN;

/** SIDE-EFFECT */
terminal INC, DEC;

/** ALLOCATION */
terminal NEW;

/** END OF OPERATORS */


/** PARENTHESES */
terminal	OPEN_PARENTHESES, 	CLOSE_PARENTHESES,
			OPEN_BRACES, 		CLOSE_BRACES,
			OPEN_CHEVRONS, 		CLOSE_CHEVRONS;


/** CLASS RELATED */
terminal CLASS, EXTENDS;


/** OTHER */
terminal IDENT, EOF, PROG, PRINT, error, VOID, CONST;

/**
 * END OF TERMINALS
 */





/** NON TERMINALS */

non terminal Program;

non terminal Decl;
non terminal ConstDecl, VarDecl, ClassDecl;

non terminal DeclAssignmenList;
non terminal VarDeclList, VarDeclElem;


non terminal Type;
non terminal Literal;


non terminal MethodDecl;

/** END OF NON TERMINALS */





Program ::= PROG IDENT OPEN_BRACES MethodDecl CLOSED_BRACED;
			|
			PROG IDENT Decl OPEN_BRACES MethodDecl CLOSED_BRACED
			;


Decl ::= ConstDecl
		 |
		 VarDecl
		 |
		 ClassDecl
		 |
		 Decl ConstDecl
		 | 
		 Decl VarDecl
		 |
		 Decl ClassDecl
		 ;


Literal ::= NUMBER
			|
			STRING
			|
			BOOL
			;


DeclAssignmenList ::= IDENT ASSIGN Literal
					  |
					  DeclAssignmenList COMMA IDENT ASSIGN Literal
					  ;

ConstDecl ::= CONST Type DeclAssignmenList SEMICOLON
			  ;

VarDeclElem ::= IDENT
				|
				IDENT OPEN_CHEVRONS CLOSE_CHEVRONS
				;

VarDeclList ::= VarDeclElem
				|
				VarDeclList COMMA VarDeclElem
				;

VarDecl ::= Type VarDeclList
			;


ClassDecl ::= CLASS IDENT OPEN
			  |
			  CLASS IDENT EXTENDS Type
				

