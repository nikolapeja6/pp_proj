
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sat Jan 27 17:12:12 CET 2018
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import java.io.*;
import org.apache.log4j.*;
import rs.etf.pp1.symboltable.*;
import rs.etf.pp1.symboltable.concepts.*;

/** CUP v0.10k generated parser.
  * @version Sat Jan 27 17:12:12 CET 2018
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\154\000\002\003\007\000\002\002\004\000\002\003" +
    "\010\000\002\050\003\000\002\004\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\004\000\002\004\004\000" +
    "\002\004\004\000\002\047\003\000\002\047\003\000\002" +
    "\047\003\000\002\031\005\000\002\031\007\000\002\005" +
    "\006\000\002\033\003\000\002\033\005\000\002\032\003" +
    "\000\002\032\005\000\002\006\005\000\002\035\003\000" +
    "\002\035\004\000\002\034\003\000\002\034\005\000\002" +
    "\034\006\000\002\007\010\000\002\007\011\000\002\007" +
    "\007\000\002\007\010\000\002\046\003\000\002\046\003" +
    "\000\002\010\012\000\002\010\013\000\002\010\011\000" +
    "\002\010\012\000\002\041\004\000\002\041\006\000\002" +
    "\011\003\000\002\011\005\000\002\051\003\000\002\012" +
    "\003\000\002\012\003\000\002\012\005\000\002\027\004" +
    "\000\002\027\011\000\002\027\011\000\002\027\004\000" +
    "\002\027\004\000\002\027\004\000\002\027\005\000\002" +
    "\027\007\000\002\027\007\000\002\027\011\000\002\027" +
    "\004\000\002\030\007\000\002\030\011\000\002\037\004" +
    "\000\002\037\003\000\002\040\004\000\002\040\003\000" +
    "\002\013\005\000\002\013\005\000\002\013\006\000\002" +
    "\013\004\000\002\013\004\000\002\015\003\000\002\015" +
    "\005\000\002\016\003\000\002\016\005\000\002\017\003" +
    "\000\002\017\005\000\002\020\003\000\002\020\005\000" +
    "\002\021\004\000\002\021\005\000\002\042\005\000\002" +
    "\042\002\000\002\022\003\000\002\022\004\000\002\043" +
    "\005\000\002\043\004\000\002\023\003\000\002\023\005" +
    "\000\002\023\006\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\004\000\002\023\007\000\002" +
    "\023\005\000\002\044\004\000\002\044\005\000\002\045" +
    "\004\000\002\045\003\000\002\014\003\000\002\014\004" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\025\003\000\002\025\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\323\000\004\053\005\001\002\000\004\002\325\001" +
    "\002\000\004\060\006\001\002\000\012\045\ufffe\051\ufffe" +
    "\057\ufffe\060\ufffe\001\002\000\012\045\015\051\017\057" +
    "\020\060\012\001\002\000\004\060\317\001\002\000\012" +
    "\045\312\051\017\057\020\060\012\001\002\000\052\017" +
    "\uffd9\020\uffd9\022\uffd9\023\uffd9\024\uffd9\025\uffd9\026\uffd9" +
    "\027\uffd9\030\uffd9\031\uffd9\032\uffd9\033\uffd9\034\uffd9\035" +
    "\uffd9\036\uffd9\044\uffd9\045\uffd9\047\uffd9\050\uffd9\060\uffd9" +
    "\001\002\000\012\045\ufffb\051\ufffb\057\ufffb\060\ufffb\001" +
    "\002\000\012\045\ufffc\051\ufffc\057\ufffc\060\ufffc\001\002" +
    "\000\006\056\065\060\012\001\002\000\012\045\ufffd\051" +
    "\ufffd\057\ufffd\060\ufffd\001\002\000\004\060\036\001\002" +
    "\000\004\060\012\001\002\000\004\060\023\001\002\000" +
    "\006\017\031\020\032\001\002\000\004\037\024\001\002" +
    "\000\010\013\027\015\026\016\030\001\002\000\006\017" +
    "\ufff4\020\ufff4\001\002\000\006\017\ufff6\020\ufff6\001\002" +
    "\000\006\017\ufff7\020\ufff7\001\002\000\006\017\ufff5\020" +
    "\ufff5\001\002\000\004\060\033\001\002\000\012\045\ufff2" +
    "\051\ufff2\057\ufff2\060\ufff2\001\002\000\004\037\034\001" +
    "\002\000\010\013\027\015\026\016\030\001\002\000\006" +
    "\017\ufff3\020\ufff3\001\002\000\006\052\040\060\012\001" +
    "\002\000\004\045\057\001\002\000\004\060\012\001\002" +
    "\000\004\045\042\001\002\000\010\045\047\046\045\060" +
    "\012\001\002\000\004\046\056\001\002\000\010\045\uffec" +
    "\046\uffec\060\uffec\001\002\000\012\045\uffe4\051\uffe4\057" +
    "\uffe4\060\uffe4\001\002\000\010\045\053\046\uffea\060\012" +
    "\001\002\000\002\001\002\000\004\046\051\001\002\000" +
    "\004\046\uffe9\001\002\000\010\045\uffeb\046\uffeb\060\uffeb" +
    "\001\002\000\002\001\002\000\004\046\055\001\002\000" +
    "\004\046\uffe8\001\002\000\012\045\uffe6\051\uffe6\057\uffe6" +
    "\060\uffe6\001\002\000\010\045\047\046\061\060\012\001" +
    "\002\000\004\046\062\001\002\000\012\045\uffe5\051\uffe5" +
    "\057\uffe5\060\uffe5\001\002\000\012\045\uffe7\051\uffe7\057" +
    "\uffe7\060\uffe7\001\002\000\004\060\uffe3\001\002\000\004" +
    "\046\306\001\002\000\004\060\uffe2\001\002\000\004\060" +
    "\067\001\002\000\004\043\070\001\002\000\006\044\073" +
    "\060\012\001\002\000\004\060\303\001\002\000\006\017" +
    "\273\044\274\001\002\000\004\060\012\001\002\000\006" +
    "\017\uffdb\044\uffdb\001\002\000\006\045\076\060\012\001" +
    "\002\000\026\004\104\006\114\007\113\011\111\012\112" +
    "\045\103\046\115\054\107\055\077\060\100\001\002\000" +
    "\004\043\267\001\002\000\060\017\uffa2\020\uffa2\021\262" +
    "\022\uffa2\023\uffa2\024\uffa2\025\uffa2\026\uffa2\027\uffa2\030" +
    "\uffa2\031\uffa2\032\uffa2\033\uffa2\034\uffa2\035\uffa2\036\uffa2" +
    "\037\uffa2\040\uffa2\041\uffa2\043\uffa2\044\uffa2\047\260\050" +
    "\uffa2\001\002\000\030\004\uffd7\006\uffd7\007\uffd7\010\uffd7" +
    "\011\uffd7\012\uffd7\045\uffd7\046\uffd7\054\uffd7\055\uffd7\060" +
    "\uffd7\001\002\000\012\037\252\040\247\041\250\043\251" +
    "\001\002\000\026\004\104\006\114\007\113\011\111\012" +
    "\112\045\103\046\242\054\107\055\077\060\100\001\002" +
    "\000\004\043\231\001\002\000\004\020\230\001\002\000" +
    "\026\004\uffc7\006\uffc7\007\uffc7\011\uffc7\012\uffc7\045\uffc7" +
    "\046\uffc7\054\uffc7\055\uffc7\060\uffc7\001\002\000\004\045" +
    "\220\001\002\000\030\004\uffd8\006\uffd8\007\uffd8\010\uffd8" +
    "\011\uffd8\012\uffd8\045\uffd8\046\uffd8\054\uffd8\055\uffd8\060" +
    "\uffd8\001\002\000\004\020\217\001\002\000\022\013\132" +
    "\015\135\016\127\020\215\023\125\042\126\043\133\060" +
    "\100\001\002\000\024\004\104\006\114\007\113\011\111" +
    "\012\112\045\103\054\107\055\077\060\100\001\002\000" +
    "\004\020\121\001\002\000\004\046\uffdf\001\002\000\026" +
    "\004\104\006\114\007\113\011\111\012\112\045\103\046" +
    "\120\054\107\055\077\060\100\001\002\000\026\004\uffc8" +
    "\006\uffc8\007\uffc8\011\uffc8\012\uffc8\045\uffc8\046\uffc8\054" +
    "\uffc8\055\uffc8\060\uffc8\001\002\000\004\046\uffe1\001\002" +
    "\000\032\004\uffd2\005\uffd2\006\uffd2\007\uffd2\010\uffd2\011" +
    "\uffd2\012\uffd2\045\uffd2\046\uffd2\054\uffd2\055\uffd2\060\uffd2" +
    "\001\002\000\004\010\123\001\002\000\004\043\124\001" +
    "\002\000\020\013\132\015\135\016\127\023\125\042\126" +
    "\043\133\060\100\001\002\000\016\013\132\015\135\016" +
    "\127\042\126\043\133\060\100\001\002\000\004\060\012" +
    "\001\002\000\044\017\uffaa\020\uffaa\022\uffaa\023\uffaa\024" +
    "\uffaa\025\uffaa\026\uffaa\027\uffaa\030\uffaa\031\uffaa\032\uffaa" +
    "\033\uffaa\034\uffaa\035\uffaa\036\uffaa\044\uffaa\050\uffaa\001" +
    "\002\000\024\027\201\030\176\031\200\032\202\033\177" +
    "\034\203\035\uffb9\036\uffb9\044\uffb9\001\002\000\046\017" +
    "\uffaf\020\uffaf\022\uffaf\023\uffaf\024\uffaf\025\uffaf\026\uffaf" +
    "\027\uffaf\030\uffaf\031\uffaf\032\uffaf\033\uffaf\034\uffaf\035" +
    "\uffaf\036\uffaf\043\167\044\uffaf\050\uffaf\001\002\000\044" +
    "\017\uffac\020\uffac\022\uffac\023\uffac\024\uffac\025\uffac\026" +
    "\uffac\027\uffac\030\uffac\031\uffac\032\uffac\033\uffac\034\uffac" +
    "\035\uffac\036\uffac\044\uffac\050\uffac\001\002\000\020\013" +
    "\132\015\135\016\127\023\125\042\126\043\133\060\100" +
    "\001\002\000\006\036\162\044\161\001\002\000\044\017" +
    "\uffab\020\uffab\022\uffab\023\uffab\024\uffab\025\uffab\026\uffab" +
    "\027\uffab\030\uffab\031\uffab\032\uffab\033\uffab\034\uffab\035" +
    "\uffab\036\uffab\044\uffab\050\uffab\001\002\000\010\035\uffbb" +
    "\036\uffbb\044\uffbb\001\002\000\036\017\uffb4\020\uffb4\022" +
    "\uffb4\023\uffb4\027\uffb4\030\uffb4\031\uffb4\032\uffb4\033\uffb4" +
    "\034\uffb4\035\uffb4\036\uffb4\044\uffb4\050\uffb4\001\002\000" +
    "\044\017\uffb3\020\uffb3\022\uffb3\023\uffb3\024\146\025\147" +
    "\026\144\027\uffb3\030\uffb3\031\uffb3\032\uffb3\033\uffb3\034" +
    "\uffb3\035\uffb3\036\uffb3\044\uffb3\050\uffb3\001\002\000\010" +
    "\035\142\036\uffbd\044\uffbd\001\002\000\020\013\132\015" +
    "\135\016\127\023\125\042\126\043\133\060\100\001\002" +
    "\000\010\035\uffba\036\uffba\044\uffba\001\002\000\016\013" +
    "\uff96\015\uff96\016\uff96\042\uff96\043\uff96\060\uff96\001\002" +
    "\000\044\017\uffb2\020\uffb2\022\uffb2\023\uffb2\024\146\025" +
    "\147\026\144\027\uffb2\030\uffb2\031\uffb2\032\uffb2\033\uffb2" +
    "\034\uffb2\035\uffb2\036\uffb2\044\uffb2\050\uffb2\001\002\000" +
    "\016\013\uff98\015\uff98\016\uff98\042\uff98\043\uff98\060\uff98" +
    "\001\002\000\016\013\uff97\015\uff97\016\uff97\042\uff97\043" +
    "\uff97\060\uff97\001\002\000\016\013\132\015\135\016\127" +
    "\042\126\043\133\060\100\001\002\000\044\017\uffb0\020" +
    "\uffb0\022\uffb0\023\uffb0\024\uffb0\025\uffb0\026\uffb0\027\uffb0" +
    "\030\uffb0\031\uffb0\032\uffb0\033\uffb0\034\uffb0\035\uffb0\036" +
    "\uffb0\044\uffb0\050\uffb0\001\002\000\016\013\132\015\135" +
    "\016\127\042\126\043\133\060\100\001\002\000\044\017" +
    "\uffb1\020\uffb1\022\uffb1\023\uffb1\024\uffb1\025\uffb1\026\uffb1" +
    "\027\uffb1\030\uffb1\031\uffb1\032\uffb1\033\uffb1\034\uffb1\035" +
    "\uffb1\036\uffb1\044\uffb1\050\uffb1\001\002\000\036\017\uffb7" +
    "\020\uffb7\022\155\023\156\027\uffb7\030\uffb7\031\uffb7\032" +
    "\uffb7\033\uffb7\034\uffb7\035\uffb7\036\uffb7\044\uffb7\050\uffb7" +
    "\001\002\000\016\013\uff9a\015\uff9a\016\uff9a\042\uff9a\043" +
    "\uff9a\060\uff9a\001\002\000\016\013\uff99\015\uff99\016\uff99" +
    "\042\uff99\043\uff99\060\uff99\001\002\000\016\013\132\015" +
    "\135\016\127\042\126\043\133\060\100\001\002\000\036" +
    "\017\uffb5\020\uffb5\022\uffb5\023\uffb5\027\uffb5\030\uffb5\031" +
    "\uffb5\032\uffb5\033\uffb5\034\uffb5\035\uffb5\036\uffb5\044\uffb5" +
    "\050\uffb5\001\002\000\004\020\164\001\002\000\020\013" +
    "\132\015\135\016\127\023\125\042\126\043\133\060\100" +
    "\001\002\000\010\035\142\036\uffbc\044\uffbc\001\002\000" +
    "\032\004\uffd3\005\uffd3\006\uffd3\007\uffd3\010\uffd3\011\uffd3" +
    "\012\uffd3\045\uffd3\046\uffd3\054\uffd3\055\uffd3\060\uffd3\001" +
    "\002\000\004\044\166\001\002\000\044\017\uffa7\020\uffa7" +
    "\022\uffa7\023\uffa7\024\uffa7\025\uffa7\026\uffa7\027\uffa7\030" +
    "\uffa7\031\uffa7\032\uffa7\033\uffa7\034\uffa7\035\uffa7\036\uffa7" +
    "\044\uffa7\050\uffa7\001\002\000\022\013\132\015\135\016" +
    "\127\023\125\042\126\043\133\044\172\060\100\001\002" +
    "\000\006\017\uffbf\044\uffbf\001\002\000\006\017\173\044" +
    "\174\001\002\000\044\017\uffae\020\uffae\022\uffae\023\uffae" +
    "\024\uffae\025\uffae\026\uffae\027\uffae\030\uffae\031\uffae\032" +
    "\uffae\033\uffae\034\uffae\035\uffae\036\uffae\044\uffae\050\uffae" +
    "\001\002\000\020\013\132\015\135\016\127\023\125\042" +
    "\126\043\133\060\100\001\002\000\044\017\uffad\020\uffad" +
    "\022\uffad\023\uffad\024\uffad\025\uffad\026\uffad\027\uffad\030" +
    "\uffad\031\uffad\032\uffad\033\uffad\034\uffad\035\uffad\036\uffad" +
    "\044\uffad\050\uffad\001\002\000\006\017\uffbe\044\uffbe\001" +
    "\002\000\020\013\uff9f\015\uff9f\016\uff9f\023\uff9f\042\uff9f" +
    "\043\uff9f\060\uff9f\001\002\000\020\013\uff9c\015\uff9c\016" +
    "\uff9c\023\uff9c\042\uff9c\043\uff9c\060\uff9c\001\002\000\020" +
    "\013\uff9e\015\uff9e\016\uff9e\023\uff9e\042\uff9e\043\uff9e\060" +
    "\uff9e\001\002\000\020\013\uffa0\015\uffa0\016\uffa0\023\uffa0" +
    "\042\uffa0\043\uffa0\060\uffa0\001\002\000\020\013\uff9d\015" +
    "\uff9d\016\uff9d\023\uff9d\042\uff9d\043\uff9d\060\uff9d\001\002" +
    "\000\020\013\uff9b\015\uff9b\016\uff9b\023\uff9b\042\uff9b\043" +
    "\uff9b\060\uff9b\001\002\000\020\013\132\015\135\016\127" +
    "\023\125\042\126\043\133\060\100\001\002\000\010\035" +
    "\uffb8\036\uffb8\044\uffb8\001\002\000\046\017\uffa9\020\uffa9" +
    "\022\uffa9\023\uffa9\024\uffa9\025\uffa9\026\uffa9\027\uffa9\030" +
    "\uffa9\031\uffa9\032\uffa9\033\uffa9\034\uffa9\035\uffa9\036\uffa9" +
    "\044\uffa9\047\207\050\uffa9\001\002\000\020\013\132\015" +
    "\135\016\127\023\125\042\126\043\133\060\100\001\002" +
    "\000\004\050\211\001\002\000\044\017\uffa8\020\uffa8\022" +
    "\uffa8\023\uffa8\024\uffa8\025\uffa8\026\uffa8\027\uffa8\030\uffa8" +
    "\031\uffa8\032\uffa8\033\uffa8\034\uffa8\035\uffa8\036\uffa8\044" +
    "\uffa8\050\uffa8\001\002\000\036\017\uffb4\020\uffb4\022\uffb4" +
    "\023\uffb4\027\uffb4\030\uffb4\031\uffb4\032\uffb4\033\uffb4\034" +
    "\uffb4\035\uffb4\036\uffb4\044\uffb4\050\uffb4\001\002\000\036" +
    "\017\uffb6\020\uffb6\022\155\023\156\027\uffb6\030\uffb6\031" +
    "\uffb6\032\uffb6\033\uffb6\034\uffb6\035\uffb6\036\uffb6\044\uffb6" +
    "\050\uffb6\001\002\000\004\020\216\001\002\000\032\004" +
    "\uffd0\005\uffd0\006\uffd0\007\uffd0\010\uffd0\011\uffd0\012\uffd0" +
    "\045\uffd0\046\uffd0\054\uffd0\055\uffd0\060\uffd0\001\002\000" +
    "\032\004\uffcf\005\uffcf\006\uffcf\007\uffcf\010\uffcf\011\uffcf" +
    "\012\uffcf\045\uffcf\046\uffcf\054\uffcf\055\uffcf\060\uffcf\001" +
    "\002\000\032\004\uffd1\005\uffd1\006\uffd1\007\uffd1\010\uffd1" +
    "\011\uffd1\012\uffd1\045\uffd1\046\uffd1\054\uffd1\055\uffd1\060" +
    "\uffd1\001\002\000\020\013\132\015\135\016\127\023\125" +
    "\042\126\043\133\060\100\001\002\000\006\017\222\044" +
    "\223\001\002\000\004\013\225\001\002\000\004\020\224" +
    "\001\002\000\032\004\uffcd\005\uffcd\006\uffcd\007\uffcd\010" +
    "\uffcd\011\uffcd\012\uffcd\045\uffcd\046\uffcd\054\uffcd\055\uffcd" +
    "\060\uffcd\001\002\000\004\044\226\001\002\000\004\020" +
    "\227\001\002\000\032\004\uffcc\005\uffcc\006\uffcc\007\uffcc" +
    "\010\uffcc\011\uffcc\012\uffcc\045\uffcc\046\uffcc\054\uffcc\055" +
    "\uffcc\060\uffcc\001\002\000\032\004\uffd5\005\uffd5\006\uffd5" +
    "\007\uffd5\010\uffd5\011\uffd5\012\uffd5\045\uffd5\046\uffd5\054" +
    "\uffd5\055\uffd5\060\uffd5\001\002\000\020\013\132\015\135" +
    "\016\127\023\125\042\126\043\133\060\100\001\002\000" +
    "\006\036\162\044\233\001\002\000\024\004\104\006\114" +
    "\007\113\011\111\012\112\045\103\054\107\055\077\060" +
    "\100\001\002\000\030\004\uffca\006\uffca\007\uffca\010\uffca" +
    "\011\uffca\012\uffca\045\uffca\046\uffca\054\uffca\055\uffca\060" +
    "\uffca\001\002\000\032\004\uffd8\005\236\006\uffd8\007\uffd8" +
    "\010\uffd8\011\uffd8\012\uffd8\045\uffd8\046\uffd8\054\uffd8\055" +
    "\uffd8\060\uffd8\001\002\000\024\004\104\006\114\007\113" +
    "\011\111\012\112\045\240\054\107\055\077\060\100\001" +
    "\002\000\030\004\uffc9\006\uffc9\007\uffc9\010\uffc9\011\uffc9" +
    "\012\uffc9\045\uffc9\046\uffc9\054\uffc9\055\uffc9\060\uffc9\001" +
    "\002\000\004\046\242\001\002\000\032\004\uffd4\005\uffd4" +
    "\006\uffd4\007\uffd4\010\uffd4\011\uffd4\012\uffd4\045\uffd4\046" +
    "\uffd4\054\uffd4\055\uffd4\060\uffd4\001\002\000\032\004\uffcb" +
    "\005\uffcb\006\uffcb\007\uffcb\010\uffcb\011\uffcb\012\uffcb\045" +
    "\uffcb\046\uffcb\054\uffcb\055\uffcb\060\uffcb\001\002\000\026" +
    "\004\uffc5\006\uffc5\007\uffc5\011\uffc5\012\uffc5\045\uffc5\046" +
    "\uffc5\054\uffc5\055\uffc5\060\uffc5\001\002\000\026\004\104" +
    "\006\114\007\113\011\111\012\112\045\103\046\246\054" +
    "\107\055\077\060\100\001\002\000\026\004\uffc6\006\uffc6" +
    "\007\uffc6\011\uffc6\012\uffc6\045\uffc6\046\uffc6\054\uffc6\055" +
    "\uffc6\060\uffc6\001\002\000\030\004\uffd6\006\uffd6\007\uffd6" +
    "\010\uffd6\011\uffd6\012\uffd6\045\uffd6\046\uffd6\054\uffd6\055" +
    "\uffd6\060\uffd6\001\002\000\004\020\uffc1\001\002\000\004" +
    "\020\uffc0\001\002\000\022\013\132\015\135\016\127\023" +
    "\125\042\126\043\133\044\255\060\100\001\002\000\020" +
    "\013\132\015\135\016\127\023\125\042\126\043\133\060" +
    "\100\001\002\000\004\020\uffc4\001\002\000\006\017\173" +
    "\044\256\001\002\000\004\020\uffc3\001\002\000\004\020" +
    "\uffc2\001\002\000\060\017\uffa1\020\uffa1\021\262\022\uffa1" +
    "\023\uffa1\024\uffa1\025\uffa1\026\uffa1\027\uffa1\030\uffa1\031" +
    "\uffa1\032\uffa1\033\uffa1\034\uffa1\035\uffa1\036\uffa1\037\uffa1" +
    "\040\uffa1\041\uffa1\043\uffa1\044\uffa1\047\260\050\uffa1\001" +
    "\002\000\020\013\132\015\135\016\127\023\125\042\126" +
    "\043\133\060\100\001\002\000\060\017\uffa3\020\uffa3\021" +
    "\uffa3\022\uffa3\023\uffa3\024\uffa3\025\uffa3\026\uffa3\027\uffa3" +
    "\030\uffa3\031\uffa3\032\uffa3\033\uffa3\034\uffa3\035\uffa3\036" +
    "\uffa3\037\uffa3\040\uffa3\041\uffa3\043\uffa3\044\uffa3\047\uffa3" +
    "\050\uffa3\001\002\000\004\060\263\001\002\000\060\017" +
    "\uffa6\020\uffa6\021\uffa6\022\uffa6\023\uffa6\024\uffa6\025\uffa6" +
    "\026\uffa6\027\uffa6\030\uffa6\031\uffa6\032\uffa6\033\uffa6\034" +
    "\uffa6\035\uffa6\036\uffa6\037\uffa6\040\uffa6\041\uffa6\043\uffa6" +
    "\044\uffa6\047\uffa6\050\uffa6\001\002\000\004\050\265\001" +
    "\002\000\060\017\uffa5\020\uffa5\021\uffa5\022\uffa5\023\uffa5" +
    "\024\uffa5\025\uffa5\026\uffa5\027\uffa5\030\uffa5\031\uffa5\032" +
    "\uffa5\033\uffa5\034\uffa5\035\uffa5\036\uffa5\037\uffa5\040\uffa5" +
    "\041\uffa5\043\uffa5\044\uffa5\047\uffa5\050\uffa5\001\002\000" +
    "\060\017\uffa4\020\uffa4\021\uffa4\022\uffa4\023\uffa4\024\uffa4" +
    "\025\uffa4\026\uffa4\027\uffa4\030\uffa4\031\uffa4\032\uffa4\033" +
    "\uffa4\034\uffa4\035\uffa4\036\uffa4\037\uffa4\040\uffa4\041\uffa4" +
    "\043\uffa4\044\uffa4\047\uffa4\050\uffa4\001\002\000\004\060" +
    "\100\001\002\000\004\044\271\001\002\000\004\020\272" +
    "\001\002\000\032\004\uffce\005\uffce\006\uffce\007\uffce\010" +
    "\uffce\011\uffce\012\uffce\045\uffce\046\uffce\054\uffce\055\uffce" +
    "\060\uffce\001\002\000\004\060\012\001\002\000\004\060" +
    "\012\001\002\000\006\045\276\060\012\001\002\000\026" +
    "\004\104\006\114\007\113\011\111\012\112\045\103\046" +
    "\277\054\107\055\077\060\100\001\002\000\004\046\uffde" +
    "\001\002\000\026\004\104\006\114\007\113\011\111\012" +
    "\112\045\103\046\301\054\107\055\077\060\100\001\002" +
    "\000\004\046\uffe0\001\002\000\006\017\uffda\044\uffda\001" +
    "\002\000\010\017\uffdd\044\uffdd\047\304\001\002\000\004" +
    "\050\305\001\002\000\006\017\uffdc\044\uffdc\001\002\000" +
    "\004\002\001\001\002\000\012\045\ufffa\051\ufffa\057\ufffa" +
    "\060\ufffa\001\002\000\012\045\ufff8\051\ufff8\057\ufff8\060" +
    "\ufff8\001\002\000\012\045\ufff9\051\ufff9\057\ufff9\060\ufff9" +
    "\001\002\000\006\056\065\060\012\001\002\000\004\046" +
    "\314\001\002\000\004\002\uffff\001\002\000\006\017\uffef" +
    "\020\uffef\001\002\000\006\017\322\020\323\001\002\000" +
    "\010\017\ufff1\020\ufff1\047\320\001\002\000\004\050\321" +
    "\001\002\000\006\017\ufff0\020\ufff0\001\002\000\004\060" +
    "\317\001\002\000\014\045\uffed\046\uffed\051\uffed\057\uffed" +
    "\060\uffed\001\002\000\006\017\uffee\020\uffee\001\002\000" +
    "\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\323\000\004\003\003\001\001\000\002\001\001\000" +
    "\004\050\006\001\001\000\002\001\001\000\014\004\010" +
    "\005\015\006\013\007\012\051\007\001\001\000\006\032" +
    "\315\033\314\001\001\000\012\005\306\006\310\007\307" +
    "\051\007\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\010\063\046\065\051\062\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\051\020\001" +
    "\001\000\004\031\021\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\047\024\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\047" +
    "\034\001\001\000\002\001\001\000\004\051\036\001\001" +
    "\000\002\001\001\000\004\051\040\001\001\000\002\001" +
    "\001\000\012\006\043\034\042\035\045\051\007\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\051\051\007\001\001\000\004\036\047\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\036\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\006\043\034\057\035\045\051" +
    "\007\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\011\071" +
    "\041\073\051\070\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\006\043\035\074\051\007\001\001\000\002" +
    "\001\001\000\006\006\051\051\007\001\001\000\016\012" +
    "\105\013\104\014\101\027\107\030\100\037\115\001\001" +
    "\000\002\001\001\000\006\044\260\045\256\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\012\242\013\104" +
    "\014\101\027\107\030\100\040\243\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\014\130\021" +
    "\213\022\136\023\137\001\001\000\014\012\121\013\104" +
    "\014\101\027\107\030\100\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\012\116\013\104\014\101\027\107" +
    "\030\100\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\014\130\016\133\017\140\020\135\021\127\022\136\023" +
    "\137\001\001\000\010\014\130\022\211\023\137\001\001" +
    "\000\004\051\205\001\001\000\002\001\001\000\004\024" +
    "\203\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\014\130\021\164\022\136\023\137\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\042\153" +
    "\001\001\000\006\026\147\043\144\001\001\000\002\001" +
    "\001\000\014\014\130\020\142\021\127\022\136\023\137" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\026" +
    "\151\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\014\130\023\150\001\001\000\002\001\001\000\006\014" +
    "\130\023\152\001\001\000\002\001\001\000\004\025\156" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\014" +
    "\130\022\157\023\137\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\014\130\017\162\020\135\021\127\022" +
    "\136\023\137\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\014\130\015" +
    "\170\021\167\022\136\023\137\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\014\130\021" +
    "\174\022\136\023\137\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\014\130\021\204\022\136\023\137\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\014\130\021\207" +
    "\022\136\023\137\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\042\212\001\001\000\004\025\156\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\014\130\021\220\022\136\023\137" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\014\130\016" +
    "\231\017\140\020\135\021\127\022\136\023\137\001\001" +
    "\000\002\001\001\000\014\012\233\013\104\014\101\027" +
    "\234\030\100\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\013\104\014\101\027\240\030\236\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\012\244\013\104\014" +
    "\101\027\107\030\100\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\014" +
    "\130\015\253\021\167\022\136\023\137\001\001\000\012" +
    "\014\130\021\252\022\136\023\137\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\265\001\001\000\012\014\130\021\263\022" +
    "\136\023\137\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\014\267\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\041\301\051" +
    "\070\001\001\000\010\006\043\035\274\051\007\001\001" +
    "\000\006\006\051\051\007\001\001\000\016\012\105\013" +
    "\104\014\101\027\107\030\100\037\277\001\001\000\002" +
    "\001\001\000\014\012\116\013\104\014\101\027\107\030" +
    "\100\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\010\312\046\065\051\062\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\033\323\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {

	Tab.init();
	

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	if(s != null && s.value != null)
		log.info(s.toString() + " " + s.value.toString());
	return s;

    }


	
	Logger log = Logger.getLogger(getClass());
	
	public void report_fatal_error(String message, Object info) throws java.lang.Exception
	{
		done_parsing();
		report_error(message, info);
	}
	
	public void syntax_error(Symbol cur_token)
	{
		report_error("\nSintaksna greska", cur_token);
	}
	
	public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception
	{
		report_fatal_error("Fatalna greska, parsiranje se ne moze nastaviti", cur_token);
	}
	
	public void report_error(String message, Object info)
	{
		StringBuilder msg = new StringBuilder(message);
		if(info instanceof Symbol)
		{
			msg.append(" na liniji ").append(((Symbol)info).left);
		}
		log.error(msg.toString());
	}
	
	public void report_info(String message, Object info)
	{
		StringBuilder msg = new StringBuilder(message);
		if(info instanceof Symbol)
		{
			msg.append(" na liniji ").append(((Symbol)info).left);
		}
		log.info(msg.toString());
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Mulop ::= MOD 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Mulop ::= DIV 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Mulop ::= MULTUPLY 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Addop ::= MINUS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Addop ::= PLUS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Relop ::= LESS_OR_EQUEL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Relop ::= GREATER_OR_EQUEL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Relop ::= LESS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Relop ::= GREATER 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Relop ::= NOT_EQUAL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Relop ::= EQUAL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Designator ::= IDENT MultipleDesignatorElem 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Designator ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // MultipleDesignatorElem ::= DesignatorElem 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*MultipleDesignatorElem*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // MultipleDesignatorElem ::= MultipleDesignatorElem DesignatorElem 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*MultipleDesignatorElem*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DesignatorElem ::= OPEN_CHEVRONS Expr CLOSE_CHEVRONS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*DesignatorElem*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // DesignatorElem ::= DOT IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*DesignatorElem*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Factor ::= OPEN_PARENTHESES Expr CLOSE_PARENTHESES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Factor ::= NEW Type OPEN_CHEVRONS Expr CLOSE_CHEVRONS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Factor ::= NEW Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Factor ::= BOOL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Factor ::= STRING 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Factor ::= NUMBER 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Factor ::= Designator OPEN_PARENTHESES ActPars CLOSE_PARENTHESES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Factor ::= Designator OPEN_PARENTHESES CLOSE_PARENTHESES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Factor ::= Designator 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // MultipleMulopFactor ::= Mulop Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*MultipleMulopFactor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // MultipleMulopFactor ::= MultipleMulopFactor Mulop Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*MultipleMulopFactor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Term ::= Factor MultipleMulopFactor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Term ::= Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // MultipleAddopTerm ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*MultipleAddopTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // MultipleAddopTerm ::= MultipleAddopTerm Addop Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*MultipleAddopTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Expr ::= MINUS Term MultipleAddopTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Expr ::= Term MultipleAddopTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // CondFact ::= Expr Relop Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // CondFact ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // CondTerm ::= CondTerm AND CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // CondTerm ::= CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Condition ::= Condition OR CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Condition ::= CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ActPars ::= ActPars COMMA Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ActPars ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // DesignatorStatement ::= Designator DEC 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // DesignatorStatement ::= Designator INC 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // DesignatorStatement ::= Designator OPEN_PARENTHESES ActPars CLOSE_PARENTHESES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // DesignatorStatement ::= Designator OPEN_PARENTHESES CLOSE_PARENTHESES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // DesignatorStatement ::= Designator ASSIGN Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // MultipleStatementHelper ::= Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*MultipleStatementHelper*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // MultipleStatementHelper ::= MultipleStatementHelper Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*MultipleStatementHelper*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // MultipleStatement ::= Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*MultipleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // MultipleStatement ::= MultipleStatement Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*MultipleStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Unmatched ::= IF OPEN_PARENTHESES Condition CLOSE_PARENTHESES Matched ELSE Unmatched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Unmatched ::= IF OPEN_PARENTHESES Condition CLOSE_PARENTHESES Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*Unmatched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Matched ::= OPEN_BRACES CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Matched ::= PRINT OPEN_BRACES Expr COMMA NUMBER CLOSE_PARENTHESES SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Matched ::= PRINT OPEN_BRACES Expr CLOSE_PARENTHESES SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Matched ::= READ OPEN_PARENTHESES Designator CLOSE_PARENTHESES SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Matched ::= RETURN Expr SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Matched ::= RETURN SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Matched ::= CONTINUE SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Matched ::= BREAK SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Matched ::= DO Statement WHILE OPEN_PARENTHESES Condition CLOSE_PARENTHESES SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Matched ::= IF OPEN_PARENTHESES Condition CLOSE_PARENTHESES Matched ELSE Matched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Matched ::= DesignatorStatement SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*Matched*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Statement ::= OPEN_BRACES MultipleStatementHelper CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Statement ::= Unmatched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Statement ::= Matched 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Type ::= IDENT 
            {
              Struct RESULT = null;
		int typeNameleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int typeNameright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String typeName = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		
	Obj typeNode = Tab.find(typeName);
	if(typeNode == Tab.noObj)
	{
		parser.report_error("Nije pronadjen tip "+typeName+"u tabeli simbola", null);
		RESULT = Tab.noType;
	}
	else
	{
		if(Obj.Type != typeNode.getKind())
		{
			parser.report_error("Ime "+typeName+"ne predstavlja tip", null);
			RESULT = Tab.noType;
		}
		else
		{
			parser.report_info("Pronadjen tip "+typeName, null);
			RESULT = typeNode.getType();
		}
		
	}

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // FormalPars ::= FormalPars COMMA FormalPar 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*FormalPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // FormalPars ::= FormalPar 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*FormalPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // FormalPar ::= Type IDENT OPEN_CHEVRONS CLOSE_CHEVRONS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*FormalPar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // FormalPar ::= Type IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*FormalPar*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // MethodDecl ::= ReturnType IDENT OPEN_PARENTHESES FormalPars CLOSE_PARENTHESES MultipleVarDecl OPEN_BRACES CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // MethodDecl ::= ReturnType IDENT OPEN_PARENTHESES CLOSE_PARENTHESES MultipleVarDecl OPEN_BRACES CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // MethodDecl ::= ReturnType IDENT OPEN_PARENTHESES FormalPars CLOSE_PARENTHESES MultipleVarDecl OPEN_BRACES MultipleStatement CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // MethodDecl ::= ReturnType IDENT OPEN_PARENTHESES CLOSE_PARENTHESES MultipleVarDecl OPEN_BRACES MultipleStatement CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ReturnType ::= VOID 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ReturnType ::= Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ClassDecl ::= CLASS IDENT EXTENDS Type OPEN_BRACES CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ClassDecl ::= CLASS IDENT Type OPEN_BRACES CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ClassDecl ::= CLASS IDENT EXTENDS Type OPEN_BRACES ClassBodyDecl CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ClassDecl ::= CLASS IDENT Type OPEN_BRACES ClassBodyDecl CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ClassBodyDecl ::= MultipleVarDecl OPEN_BRACES MultipleMethodDecl CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*ClassBodyDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ClassBodyDecl ::= OPEN_BRACES MultipleMethodDecl CLOSE_BRACES 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*ClassBodyDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ClassBodyDecl ::= MultipleVarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*ClassBodyDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // MultipleVarDecl ::= MultipleVarDecl VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*MultipleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // MultipleVarDecl ::= VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*MultipleVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // VarDecl ::= Type VarDeclList SEMICOLON 
            {
              Object RESULT = null;
		int varTypeleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int varTyperight = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Struct varType = (Struct)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		
	

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // VarDeclList ::= VarDeclList COMMA VarDeclElem 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDeclList ::= VarDeclElem 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VarDeclElem ::= IDENT OPEN_CHEVRONS CLOSE_CHEVRONS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*VarDeclElem*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarDeclElem ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*VarDeclElem*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ConstDecl ::= CONST Type DeclAssignmenList SEMICOLON 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // DeclAssignmenList ::= DeclAssignmenList COMMA IDENT ASSIGN Literal 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*DeclAssignmenList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // DeclAssignmenList ::= IDENT ASSIGN Literal 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*DeclAssignmenList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Literal ::= BOOL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Literal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Literal ::= STRING 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Literal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Literal ::= NUMBER 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*Literal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Decl ::= Decl ClassDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Decl ::= Decl VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Decl ::= Decl ConstDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Decl ::= ClassDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Decl ::= VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Decl ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*Decl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ProgName ::= IDENT 
            {
              Obj RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		
	RESULT = Tab.insert(Obj.Prog, p, Tab.noType);
	Tab.openScope();

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*ProgName*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= PROG ProgName Decl OPEN_BRACES MethodDecl CLOSE_BRACES 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Obj p = (Obj)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROG ProgName OPEN_BRACES MethodDecl CLOSE_BRACES 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Obj p = (Obj)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

