INFO  01:51:08,329 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\err.mj
INFO  01:51:08,382 - #40 program
INFO  01:51:08,382 - #45 AAA
INFO  01:51:08,382 - #45 int
INFO  01:51:08,382 - #45 a
ERROR 01:51:08,382 - Lexical error on line 3 (6): (!).
INFO  01:51:08,382 - #13 ;
INFO  01:51:08,382 - #45 int
INFO  01:51:08,383 - #2 if
ERROR 01:51:08,383 - Syntax error on line 4
INFO  01:51:08,383 - #45 a
INFO  01:51:08,383 - #12 ,
INFO  01:51:08,383 - #45 b
INFO  01:51:08,383 - #13 ;
INFO  01:51:08,384 - #38 class
INFO  01:51:08,384 - #45 KK
INFO  01:51:08,384 - #39 extends
ERROR 01:51:08,384 - Error
INFO  01:51:08,384 - #45 K
INFO  01:51:08,384 - #45 asdasdasda
ERROR 01:51:08,385 - Syntax error on line 12
INFO  01:51:08,385 - #45 as
INFO  01:51:08,385 - #45 dasdasda
INFO  01:51:08,385 - #45 asdadasdas
INFO  01:51:08,385 - #45 dasdasd
INFO  01:51:08,385 - #34 {
INFO  01:51:08,385 - #35 }
INFO  01:51:08,385 - #34 {
INFO  01:51:08,385 - #45 int
ERROR 01:51:08,385 - Error
INFO  01:51:08,387 - #45 f
INFO  01:51:08,387 - #32 (
INFO  01:51:08,387 - #45 x
INFO  01:51:08,387 - #45 x
INFO  01:51:08,387 - #45 x
ERROR 01:51:08,387 - Syntax error on line 15
INFO  01:51:08,387 - #33 )
INFO  01:51:08,387 - #34 {
INFO  01:51:08,387 - #8 return
INFO  01:51:08,388 - #9 1
ERROR 01:51:08,388 - Error
INFO  01:51:08,388 - #13 ;
INFO  01:51:08,389 - #35 }
INFO  01:51:08,389 - #43 void
INFO  01:51:08,390 - #45 main
INFO  01:51:08,391 - #32 (
INFO  01:51:08,391 - #33 )
INFO  01:51:08,391 - #34 {
INFO  01:51:08,391 - #45 x
INFO  01:51:08,391 - #28 =
INFO  01:51:08,391 - #9 5
INFO  01:51:08,391 - #13 ;
INFO  01:51:08,391 - #45 b
INFO  01:51:08,392 - #28 =
INFO  01:51:08,392 - #9 4
INFO  01:51:08,392 - #9 3
ERROR 01:51:08,392 - Syntax error on line 22
INFO  01:51:08,392 - #9 2
INFO  01:51:08,392 - #9 1
INFO  01:51:08,392 - #13 ;
INFO  01:51:08,392 - #2 if
INFO  01:51:08,392 - #32 (
INFO  01:51:08,392 - #45 a
ERROR 01:51:08,392 - Error
INFO  01:51:08,392 - #45 a
ERROR 01:51:08,392 - Syntax error on line 24
INFO  01:51:08,392 - #45 a
INFO  01:51:08,392 - #45 a
INFO  01:51:08,392 - #45 a
INFO  01:51:08,393 - #45 a
INFO  01:51:08,393 - #45 a
INFO  01:51:08,393 - #45 a
INFO  01:51:08,393 - #33 )
INFO  01:51:08,393 - #34 {
INFO  01:51:08,393 - #35 }
INFO  01:51:08,393 - #45 b
ERROR 01:51:08,393 - Error
INFO  01:51:08,393 - #28 =
INFO  01:51:08,394 - #9 5
INFO  01:51:08,394 - #13 ;
INFO  01:51:08,394 - #41 print
INFO  01:51:08,394 - #32 (
INFO  01:51:08,394 - #45 x
INFO  01:51:08,394 - #33 )
INFO  01:51:08,394 - #13 ;
INFO  01:51:08,394 - #35 }
INFO  01:51:08,394 - #35 }
ERROR 01:51:08,403 - Identifier x was not defined.
ERROR 01:51:08,403 - designator is null in designator statement assignment na liniji 21
ERROR 01:51:08,403 - Identifier b was not defined.
ERROR 01:51:08,403 - designator is null in designator statement assignment na liniji 26
ERROR 01:51:08,403 - Identifier x was not defined.
ERROR 01:51:08,403 - designator obj is null in rvaluedesignator1  na liniji 27
ERROR 01:51:08,403 - obj is null
ERROR 01:51:08,403 - Print function can only be called with 'int' or 'char' expression, is called with null
INFO  01:51:08,404 - Print calls = 0
INFO  01:51:08,405 - Program2(
  ProgName(
   AAA
  ) [ProgName]
  MultipleDeclDerived3(
    MultipleDeclDerived2(
      MultipleDeclDerived6(
        VarDecl1(
          Type1(
           int
          ) [Type1]
          VarDeclListDerived2(
            VarDeclElementSingle(
             a
            ) [VarDeclElementSingle]
          ) [VarDeclListDerived2]
        ) [VarDecl1]
      ) [MultipleDeclDerived6]
      VarDeclDerived1(
      ) [VarDeclDerived1]
    ) [MultipleDeclDerived2]
    ClassDecl4(
      ErrorClass(
      ) [ErrorClass]
      ClassDeclEnd1(
      ) [ClassDeclEnd1]
    ) [ClassDecl4]
  ) [MultipleDeclDerived3]
  ProgramBegin1(
  ) [ProgramBegin1]
  MultipleMethodDeclDerived1(
    MultipleMethodDeclDerived2(
      MethodDeclDerived3(
        MethodNameAndRetType1(
          TypeReturnType(
            Type1(
             int
            ) [Type1]
          ) [TypeReturnType]
         f
        ) [MethodNameAndRetType1]
        FormParsDerived2(
          FormParsElementDerived1(
          ) [FormParsElementDerived1]
        ) [FormParsDerived2]
        MethodBegin1(
        ) [MethodBegin1]
        MultipleStatementsDerived2(
          StatementDerived1(
            StatementReturnValue(
              ExprWithNoMinus(
                SingleFactorTerm(
                  ConstantFactor(
                    NumberConstant(
                     1
                    ) [NumberConstant]
                  ) [ConstantFactor]
                ) [SingleFactorTerm]
                OptionalExprListDerived2(
                ) [OptionalExprListDerived2]
              ) [ExprWithNoMinus]
            ) [StatementReturnValue]
          ) [StatementDerived1]
        ) [MultipleStatementsDerived2]
        MethodEnd1(
        ) [MethodEnd1]
      ) [MethodDeclDerived3]
    ) [MultipleMethodDeclDerived2]
    MethodDeclDerived1(
      MethodNameAndRetType1(
        VoidReturnType(
          VoidTypeDerived1(
          ) [VoidTypeDerived1]
        ) [VoidReturnType]
       main
      ) [MethodNameAndRetType1]
      MethodBegin1(
      ) [MethodBegin1]
      MultipleStatementsDerived1(
        MultipleStatementsDerived1(
          MultipleStatementsDerived1(
            MultipleStatementsDerived1(
              MultipleStatementsDerived2(
                StatementDerived1(
                  MatchedDerived1(
                    DesignatorStatementAssignment(
                      LValueDesignator1(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [LValueDesignator1]
                      ExprWithNoMinus(
                        SingleFactorTerm(
                          ConstantFactor(
                            NumberConstant(
                             5
                            ) [NumberConstant]
                          ) [ConstantFactor]
                        ) [SingleFactorTerm]
                        OptionalExprListDerived2(
                        ) [OptionalExprListDerived2]
                      ) [ExprWithNoMinus]
                    ) [DesignatorStatementAssignment]
                  ) [MatchedDerived1]
                ) [StatementDerived1]
              ) [MultipleStatementsDerived2]
              StatementDerived1(
                MatchedDerived1(
                  DesignatorStatementDerived1(
                  ) [DesignatorStatementDerived1]
                ) [MatchedDerived1]
              ) [StatementDerived1]
            ) [MultipleStatementsDerived1]
            StatementDerived2(
              UnmatchedIf(
                ConditionDerived1(
                ) [ConditionDerived1]
                StatementDerived1(
                  MatchedDerived2(
                  ) [MatchedDerived2]
                ) [StatementDerived1]
              ) [UnmatchedIf]
            ) [StatementDerived2]
          ) [MultipleStatementsDerived1]
          StatementDerived1(
            MatchedDerived1(
              DesignatorStatementAssignment(
                LValueDesignator1(
                  DesignatorSimple(
                   b
                  ) [DesignatorSimple]
                ) [LValueDesignator1]
                ExprWithNoMinus(
                  SingleFactorTerm(
                    ConstantFactor(
                      NumberConstant(
                       5
                      ) [NumberConstant]
                    ) [ConstantFactor]
                  ) [SingleFactorTerm]
                  OptionalExprListDerived2(
                  ) [OptionalExprListDerived2]
                ) [ExprWithNoMinus]
              ) [DesignatorStatementAssignment]
            ) [MatchedDerived1]
          ) [StatementDerived1]
        ) [MultipleStatementsDerived1]
        StatementDerived1(
          PrintStatement(
            ExprWithNoMinus(
              SingleFactorTerm(
                VariableFactor(
                  RValueDesignator1(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [RValueDesignator1]
                ) [VariableFactor]
              ) [SingleFactorTerm]
              OptionalExprListDerived2(
              ) [OptionalExprListDerived2]
            ) [ExprWithNoMinus]
          ) [PrintStatement]
        ) [StatementDerived1]
      ) [MultipleStatementsDerived1]
      MethodEnd1(
      ) [MethodEnd1]
    ) [MethodDeclDerived1]
  ) [MultipleMethodDeclDerived1]
  ProgramEnd1(
  ) [ProgramEnd1]
) [Program2]
ERROR 01:51:08,406 - Parsiranje NIJE uspesno zavrseno!
