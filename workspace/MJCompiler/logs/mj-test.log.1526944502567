INFO  01:12:08,864 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test303.mj
INFO  01:12:08,925 - #40 program
INFO  01:12:08,925 - #45 test_303
INFO  01:12:08,925 - #44 const
INFO  01:12:08,925 - #45 int
INFO  01:12:08,925 - #45 cinilac
INFO  01:12:08,926 - #28 =
INFO  01:12:08,926 - #9 4
INFO  01:12:08,926 - #12 ,
INFO  01:12:08,926 - #45 delilac
INFO  01:12:08,926 - #28 =
INFO  01:12:08,926 - #9 3
INFO  01:12:08,926 - #13 ;
INFO  01:12:08,926 - #38 class
INFO  01:12:08,927 - #45 Predmet
INFO  01:12:08,927 - #34 {
INFO  01:12:08,927 - #45 int
INFO  01:12:08,927 - #45 tezina
INFO  01:12:08,927 - #13 ;
INFO  01:12:08,929 - #45 char
INFO  01:12:08,929 - #45 vrsta
INFO  01:12:08,929 - #13 ;
INFO  01:12:08,929 - #34 {
INFO  01:12:08,929 - #43 void
INFO  01:12:08,929 - #45 postaviTezinu
INFO  01:12:08,930 - #32 (
INFO  01:12:08,930 - #45 int
INFO  01:12:08,930 - #45 tezina
INFO  01:12:08,930 - #33 )
INFO  01:12:08,930 - #34 {
INFO  01:12:08,930 - #45 this
INFO  01:12:08,931 - #14 .
INFO  01:12:08,931 - #45 tezina
INFO  01:12:08,931 - #28 =
INFO  01:12:08,931 - #45 tezina
INFO  01:12:08,932 - #13 ;
INFO  01:12:08,933 - #35 }
INFO  01:12:08,933 - #43 void
INFO  01:12:08,934 - #45 ucitajTezinu
INFO  01:12:08,934 - #32 (
INFO  01:12:08,934 - #33 )
INFO  01:12:08,934 - #34 {
INFO  01:12:08,934 - #42 read
INFO  01:12:08,934 - #32 (
INFO  01:12:08,934 - #45 tezina
INFO  01:12:08,934 - #33 )
INFO  01:12:08,934 - #13 ;
INFO  01:12:08,935 - #35 }
INFO  01:12:08,935 - #45 int
INFO  01:12:08,935 - #45 zapremina
INFO  01:12:08,935 - #32 (
INFO  01:12:08,935 - #33 )
INFO  01:12:08,935 - #34 {
INFO  01:12:08,935 - #8 return
INFO  01:12:08,935 - #9 0
INFO  01:12:08,935 - #13 ;
INFO  01:12:08,935 - #35 }
INFO  01:12:08,936 - #45 int
INFO  01:12:08,936 - #45 Q
INFO  01:12:08,936 - #32 (
INFO  01:12:08,936 - #33 )
INFO  01:12:08,936 - #34 {
INFO  01:12:08,936 - #8 return
INFO  01:12:08,936 - #45 this
INFO  01:12:08,936 - #14 .
INFO  01:12:08,936 - #45 zapremina
INFO  01:12:08,936 - #32 (
INFO  01:12:08,936 - #33 )
INFO  01:12:08,936 - #17 *
INFO  01:12:08,936 - #45 tezina
INFO  01:12:08,937 - #13 ;
INFO  01:12:08,937 - #35 }
INFO  01:12:08,937 - #43 void
INFO  01:12:08,937 - #45 postaviVrstu
INFO  01:12:08,937 - #32 (
INFO  01:12:08,937 - #45 char
INFO  01:12:08,937 - #45 vrsta
INFO  01:12:08,937 - #33 )
INFO  01:12:08,938 - #34 {
INFO  01:12:08,938 - #45 this
INFO  01:12:08,938 - #14 .
INFO  01:12:08,938 - #45 vrsta
INFO  01:12:08,938 - #28 =
INFO  01:12:08,938 - #45 vrsta
INFO  01:12:08,938 - #13 ;
INFO  01:12:08,938 - #35 }
INFO  01:12:08,938 - #35 }
INFO  01:12:08,938 - #35 }
INFO  01:12:08,938 - #38 class
INFO  01:12:08,939 - #45 Sfera
INFO  01:12:08,939 - #39 extends
INFO  01:12:08,939 - #45 Predmet
INFO  01:12:08,939 - #34 {
INFO  01:12:08,939 - #45 int
INFO  01:12:08,939 - #45 r
INFO  01:12:08,939 - #13 ;
INFO  01:12:08,939 - #34 {
INFO  01:12:08,939 - #43 void
INFO  01:12:08,939 - #45 postaviTezinu
INFO  01:12:08,939 - #32 (
INFO  01:12:08,939 - #45 int
INFO  01:12:08,939 - #45 tezina
INFO  01:12:08,939 - #33 )
INFO  01:12:08,939 - #34 {
INFO  01:12:08,939 - #45 this
INFO  01:12:08,939 - #14 .
INFO  01:12:08,940 - #45 tezina
INFO  01:12:08,940 - #28 =
INFO  01:12:08,940 - #45 tezina
INFO  01:12:08,940 - #13 ;
INFO  01:12:08,940 - #45 vrsta
INFO  01:12:08,940 - #28 =
INFO  01:12:08,940 - #10 s
INFO  01:12:08,940 - #13 ;
INFO  01:12:08,940 - #35 }
INFO  01:12:08,940 - #43 void
INFO  01:12:08,940 - #45 postaviPoluprecnik
INFO  01:12:08,940 - #32 (
INFO  01:12:08,940 - #45 int
INFO  01:12:08,940 - #45 r
INFO  01:12:08,940 - #33 )
INFO  01:12:08,940 - #34 {
INFO  01:12:08,940 - #45 this
INFO  01:12:08,940 - #14 .
INFO  01:12:08,941 - #45 r
INFO  01:12:08,941 - #28 =
INFO  01:12:08,941 - #45 r
INFO  01:12:08,941 - #13 ;
INFO  01:12:08,941 - #45 postaviVrstu
INFO  01:12:08,941 - #32 (
INFO  01:12:08,941 - #10 s
INFO  01:12:08,941 - #33 )
INFO  01:12:08,941 - #13 ;
INFO  01:12:08,941 - #41 print
INFO  01:12:08,941 - #32 (
INFO  01:12:08,941 - #10 x
INFO  01:12:08,941 - #33 )
INFO  01:12:08,941 - #13 ;
INFO  01:12:08,941 - #41 print
INFO  01:12:08,942 - #32 (
INFO  01:12:08,942 - #45 r
INFO  01:12:08,942 - #12 ,
INFO  01:12:08,942 - #9 1
INFO  01:12:08,942 - #33 )
INFO  01:12:08,942 - #13 ;
INFO  01:12:08,942 - #41 print
INFO  01:12:08,942 - #32 (
INFO  01:12:08,942 - #10 :
INFO  01:12:08,942 - #33 )
INFO  01:12:08,942 - #13 ;
INFO  01:12:08,942 - #41 print
INFO  01:12:08,942 - #32 (
INFO  01:12:08,942 - #45 this
INFO  01:12:08,942 - #14 .
INFO  01:12:08,942 - #45 r
INFO  01:12:08,942 - #12 ,
INFO  01:12:08,942 - #9 1
INFO  01:12:08,942 - #33 )
INFO  01:12:08,942 - #13 ;
INFO  01:12:08,943 - #35 }
INFO  01:12:08,943 - #45 int
INFO  01:12:08,943 - #45 zapremina
INFO  01:12:08,943 - #32 (
INFO  01:12:08,943 - #33 )
INFO  01:12:08,943 - #45 int
INFO  01:12:08,943 - #45 z
INFO  01:12:08,943 - #13 ;
INFO  01:12:08,943 - #34 {
INFO  01:12:08,943 - #45 z
INFO  01:12:08,943 - #28 =
INFO  01:12:08,943 - #45 cinilac
INFO  01:12:08,943 - #13 ;
INFO  01:12:08,943 - #8 return
INFO  01:12:08,943 - #45 z
INFO  01:12:08,943 - #17 *
INFO  01:12:08,943 - #32 (
INFO  01:12:08,943 - #45 r
INFO  01:12:08,943 - #18 /
INFO  01:12:08,943 - #45 delilac
INFO  01:12:08,944 - #33 )
INFO  01:12:08,944 - #13 ;
INFO  01:12:08,944 - #35 }
INFO  01:12:08,944 - #35 }
INFO  01:12:08,944 - #35 }
INFO  01:12:08,944 - #38 class
INFO  01:12:08,945 - #45 Kvadar
INFO  01:12:08,945 - #39 extends
INFO  01:12:08,945 - #45 Predmet
INFO  01:12:08,945 - #34 {
INFO  01:12:08,945 - #45 int
INFO  01:12:08,945 - #45 a
INFO  01:12:08,945 - #12 ,
INFO  01:12:08,945 - #45 b
INFO  01:12:08,945 - #12 ,
INFO  01:12:08,945 - #45 c
INFO  01:12:08,945 - #13 ;
INFO  01:12:08,945 - #34 {
INFO  01:12:08,945 - #43 void
INFO  01:12:08,945 - #45 postaviTezinu
INFO  01:12:08,945 - #32 (
INFO  01:12:08,945 - #45 int
INFO  01:12:08,945 - #45 tezina
INFO  01:12:08,945 - #33 )
INFO  01:12:08,945 - #34 {
INFO  01:12:08,945 - #45 this
INFO  01:12:08,945 - #14 .
INFO  01:12:08,945 - #45 tezina
INFO  01:12:08,945 - #28 =
INFO  01:12:08,946 - #45 tezina
INFO  01:12:08,946 - #13 ;
INFO  01:12:08,946 - #45 vrsta
INFO  01:12:08,946 - #28 =
INFO  01:12:08,946 - #10 k
INFO  01:12:08,946 - #13 ;
INFO  01:12:08,946 - #35 }
INFO  01:12:08,946 - #43 void
INFO  01:12:08,946 - #45 postaviStranice
INFO  01:12:08,946 - #32 (
INFO  01:12:08,946 - #45 int
INFO  01:12:08,946 - #45 a
INFO  01:12:08,946 - #12 ,
INFO  01:12:08,946 - #45 int
INFO  01:12:08,946 - #45 b
INFO  01:12:08,946 - #12 ,
INFO  01:12:08,946 - #45 int
INFO  01:12:08,946 - #45 c
INFO  01:12:08,946 - #33 )
INFO  01:12:08,947 - #34 {
INFO  01:12:08,947 - #45 this
INFO  01:12:08,947 - #14 .
INFO  01:12:08,947 - #45 a
INFO  01:12:08,947 - #28 =
INFO  01:12:08,947 - #45 a
INFO  01:12:08,947 - #13 ;
INFO  01:12:08,947 - #45 this
INFO  01:12:08,947 - #14 .
INFO  01:12:08,947 - #45 b
INFO  01:12:08,947 - #28 =
INFO  01:12:08,947 - #45 b
INFO  01:12:08,947 - #13 ;
INFO  01:12:08,947 - #45 this
INFO  01:12:08,947 - #14 .
INFO  01:12:08,947 - #45 c
INFO  01:12:08,947 - #28 =
INFO  01:12:08,947 - #45 c
INFO  01:12:08,947 - #13 ;
INFO  01:12:08,947 - #45 vrsta
INFO  01:12:08,947 - #28 =
INFO  01:12:08,947 - #10 k
INFO  01:12:08,947 - #13 ;
INFO  01:12:08,947 - #35 }
INFO  01:12:08,947 - #45 int
INFO  01:12:08,948 - #45 zapremina
INFO  01:12:08,948 - #32 (
INFO  01:12:08,948 - #33 )
INFO  01:12:08,948 - #45 int
INFO  01:12:08,948 - #45 z
INFO  01:12:08,948 - #13 ;
INFO  01:12:08,948 - #34 {
INFO  01:12:08,948 - #45 z
INFO  01:12:08,948 - #28 =
INFO  01:12:08,948 - #45 a
INFO  01:12:08,948 - #17 *
INFO  01:12:08,948 - #45 b
INFO  01:12:08,948 - #17 *
INFO  01:12:08,948 - #45 c
INFO  01:12:08,948 - #13 ;
INFO  01:12:08,948 - #8 return
INFO  01:12:08,948 - #45 z
INFO  01:12:08,948 - #13 ;
INFO  01:12:08,948 - #35 }
INFO  01:12:08,948 - #35 }
INFO  01:12:08,948 - #35 }
INFO  01:12:08,948 - #45 int
INFO  01:12:08,949 - #45 zapreminaK
INFO  01:12:08,949 - #12 ,
INFO  01:12:08,949 - #45 zapreminaS
INFO  01:12:08,949 - #13 ;
INFO  01:12:08,949 - #45 int
INFO  01:12:08,949 - #45 tezinaK
INFO  01:12:08,949 - #12 ,
INFO  01:12:08,949 - #45 tezinaS
INFO  01:12:08,949 - #13 ;
INFO  01:12:08,949 - #34 {
INFO  01:12:08,949 - #43 void
INFO  01:12:08,950 - #45 ispis
INFO  01:12:08,950 - #32 (
INFO  01:12:08,950 - #45 Predmet
INFO  01:12:08,950 - #45 p
INFO  01:12:08,950 - #33 )
INFO  01:12:08,950 - #34 {
INFO  01:12:08,950 - #41 print
INFO  01:12:08,950 - #32 (
INFO  01:12:08,950 - #45 p
INFO  01:12:08,951 - #14 .
INFO  01:12:08,951 - #45 vrsta
INFO  01:12:08,951 - #33 )
INFO  01:12:08,951 - #13 ;
INFO  01:12:08,951 - #41 print
INFO  01:12:08,951 - #32 (
INFO  01:12:08,951 - #45 p
INFO  01:12:08,951 - #14 .
INFO  01:12:08,951 - #45 tezina
INFO  01:12:08,951 - #33 )
INFO  01:12:08,951 - #13 ;
INFO  01:12:08,951 - #41 print
INFO  01:12:08,951 - #32 (
INFO  01:12:08,951 - #45 eol
INFO  01:12:08,951 - #33 )
INFO  01:12:08,951 - #13 ;
INFO  01:12:08,951 - #35 }
INFO  01:12:08,951 - #43 void
INFO  01:12:08,951 - #45 main
INFO  01:12:08,951 - #32 (
INFO  01:12:08,951 - #33 )
INFO  01:12:08,951 - #45 Predmet
INFO  01:12:08,951 - #45 predmeti
INFO  01:12:08,951 - #36 [
INFO  01:12:08,952 - #37 ]
INFO  01:12:08,952 - #13 ;
INFO  01:12:08,952 - #45 int
INFO  01:12:08,952 - #45 i
INFO  01:12:08,952 - #13 ;
INFO  01:12:08,952 - #45 Sfera
INFO  01:12:08,952 - #45 s1
INFO  01:12:08,952 - #12 ,
INFO  01:12:08,952 - #45 s2
INFO  01:12:08,952 - #12 ,
INFO  01:12:08,952 - #45 s3
INFO  01:12:08,952 - #13 ;
INFO  01:12:08,952 - #45 Kvadar
INFO  01:12:08,952 - #45 k1
INFO  01:12:08,952 - #12 ,
INFO  01:12:08,952 - #45 k2
INFO  01:12:08,952 - #12 ,
INFO  01:12:08,952 - #45 k3
INFO  01:12:08,952 - #13 ;
INFO  01:12:08,952 - #45 int
INFO  01:12:08,952 - #45 t
INFO  01:12:08,952 - #13 ;
INFO  01:12:08,952 - #34 {
INFO  01:12:08,953 - #45 predmeti
INFO  01:12:08,953 - #28 =
INFO  01:12:08,953 - #31 new
INFO  01:12:08,953 - #45 Predmet
INFO  01:12:08,953 - #36 [
INFO  01:12:08,953 - #9 6
INFO  01:12:08,953 - #37 ]
INFO  01:12:08,953 - #13 ;
INFO  01:12:08,953 - #45 s1
INFO  01:12:08,953 - #28 =
INFO  01:12:08,953 - #31 new
INFO  01:12:08,953 - #45 Sfera
INFO  01:12:08,953 - #13 ;
INFO  01:12:08,953 - #45 s2
INFO  01:12:08,953 - #28 =
INFO  01:12:08,953 - #31 new
INFO  01:12:08,953 - #45 Sfera
INFO  01:12:08,953 - #13 ;
INFO  01:12:08,953 - #45 s3
INFO  01:12:08,953 - #28 =
INFO  01:12:08,953 - #31 new
INFO  01:12:08,953 - #45 Sfera
INFO  01:12:08,953 - #13 ;
INFO  01:12:08,953 - #45 k1
INFO  01:12:08,955 - #28 =
INFO  01:12:08,955 - #31 new
INFO  01:12:08,955 - #45 Kvadar
INFO  01:12:08,955 - #13 ;
INFO  01:12:08,955 - #45 k2
INFO  01:12:08,955 - #28 =
INFO  01:12:08,955 - #31 new
INFO  01:12:08,955 - #45 Kvadar
INFO  01:12:08,955 - #13 ;
INFO  01:12:08,955 - #45 k3
INFO  01:12:08,955 - #28 =
INFO  01:12:08,955 - #31 new
INFO  01:12:08,955 - #45 Kvadar
INFO  01:12:08,955 - #13 ;
INFO  01:12:08,955 - #45 s1
INFO  01:12:08,955 - #14 .
INFO  01:12:08,955 - #45 postaviPoluprecnik
INFO  01:12:08,955 - #32 (
INFO  01:12:08,955 - #9 1
INFO  01:12:08,955 - #33 )
INFO  01:12:08,955 - #13 ;
INFO  01:12:08,955 - #45 s2
INFO  01:12:08,955 - #14 .
INFO  01:12:08,955 - #45 postaviPoluprecnik
INFO  01:12:08,956 - #32 (
INFO  01:12:08,956 - #9 2
INFO  01:12:08,956 - #33 )
INFO  01:12:08,956 - #13 ;
INFO  01:12:08,956 - #45 s3
INFO  01:12:08,956 - #14 .
INFO  01:12:08,956 - #45 postaviPoluprecnik
INFO  01:12:08,956 - #32 (
INFO  01:12:08,956 - #9 3
INFO  01:12:08,956 - #33 )
INFO  01:12:08,956 - #13 ;
INFO  01:12:08,956 - #45 k1
INFO  01:12:08,956 - #14 .
INFO  01:12:08,956 - #45 postaviStranice
INFO  01:12:08,956 - #32 (
INFO  01:12:08,956 - #9 1
INFO  01:12:08,956 - #12 ,
INFO  01:12:08,956 - #9 2
INFO  01:12:08,956 - #12 ,
INFO  01:12:08,956 - #9 3
INFO  01:12:08,956 - #33 )
INFO  01:12:08,956 - #13 ;
INFO  01:12:08,956 - #45 k2
INFO  01:12:08,956 - #14 .
INFO  01:12:08,956 - #45 postaviStranice
INFO  01:12:08,956 - #32 (
INFO  01:12:08,957 - #9 2
INFO  01:12:08,957 - #12 ,
INFO  01:12:08,957 - #9 3
INFO  01:12:08,957 - #12 ,
INFO  01:12:08,957 - #9 4
INFO  01:12:08,957 - #33 )
INFO  01:12:08,957 - #13 ;
INFO  01:12:08,957 - #45 k3
INFO  01:12:08,957 - #14 .
INFO  01:12:08,957 - #45 postaviStranice
INFO  01:12:08,957 - #32 (
INFO  01:12:08,957 - #9 3
INFO  01:12:08,957 - #12 ,
INFO  01:12:08,957 - #9 4
INFO  01:12:08,957 - #12 ,
INFO  01:12:08,957 - #9 5
INFO  01:12:08,957 - #33 )
INFO  01:12:08,957 - #13 ;
INFO  01:12:08,957 - #41 print
INFO  01:12:08,957 - #32 (
INFO  01:12:08,957 - #45 s1
INFO  01:12:08,957 - #14 .
INFO  01:12:08,957 - #45 zapremina
INFO  01:12:08,957 - #32 (
INFO  01:12:08,957 - #33 )
INFO  01:12:08,957 - #33 )
INFO  01:12:08,957 - #13 ;
INFO  01:12:08,957 - #41 print
INFO  01:12:08,957 - #32 (
INFO  01:12:08,957 - #45 s2
INFO  01:12:08,957 - #14 .
INFO  01:12:08,957 - #45 zapremina
INFO  01:12:08,957 - #32 (
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #13 ;
INFO  01:12:08,958 - #41 print
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #45 s3
INFO  01:12:08,958 - #14 .
INFO  01:12:08,958 - #45 zapremina
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #13 ;
INFO  01:12:08,958 - #41 print
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #45 k1
INFO  01:12:08,958 - #14 .
INFO  01:12:08,958 - #45 zapremina
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #13 ;
INFO  01:12:08,958 - #41 print
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #45 k2
INFO  01:12:08,958 - #14 .
INFO  01:12:08,958 - #45 zapremina
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #13 ;
INFO  01:12:08,958 - #41 print
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #45 k3
INFO  01:12:08,958 - #14 .
INFO  01:12:08,958 - #45 zapremina
INFO  01:12:08,958 - #32 (
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #33 )
INFO  01:12:08,958 - #13 ;
INFO  01:12:08,958 - #41 print
INFO  01:12:08,959 - #32 (
INFO  01:12:08,959 - #45 eol
INFO  01:12:08,959 - #33 )
INFO  01:12:08,959 - #13 ;
INFO  01:12:08,959 - #41 print
INFO  01:12:08,959 - #32 (
INFO  01:12:08,959 - #45 s1
INFO  01:12:08,959 - #14 .
INFO  01:12:08,959 - #45 r
INFO  01:12:08,959 - #33 )
INFO  01:12:08,959 - #13 ;
INFO  01:12:08,959 - #41 print
INFO  01:12:08,959 - #32 (
INFO  01:12:08,959 - #45 s2
INFO  01:12:08,959 - #14 .
INFO  01:12:08,959 - #45 r
INFO  01:12:08,959 - #33 )
INFO  01:12:08,959 - #13 ;
INFO  01:12:08,959 - #41 print
INFO  01:12:08,959 - #32 (
INFO  01:12:08,959 - #45 s3
INFO  01:12:08,959 - #14 .
INFO  01:12:08,959 - #45 r
INFO  01:12:08,959 - #33 )
INFO  01:12:08,959 - #13 ;
INFO  01:12:08,959 - #45 predmeti
INFO  01:12:08,959 - #36 [
INFO  01:12:08,960 - #9 0
INFO  01:12:08,960 - #37 ]
INFO  01:12:08,960 - #28 =
INFO  01:12:08,960 - #45 s1
INFO  01:12:08,960 - #13 ;
INFO  01:12:08,960 - #45 predmeti
INFO  01:12:08,960 - #36 [
INFO  01:12:08,960 - #9 2
INFO  01:12:08,960 - #37 ]
INFO  01:12:08,960 - #28 =
INFO  01:12:08,960 - #45 s2
INFO  01:12:08,960 - #13 ;
INFO  01:12:08,960 - #45 predmeti
INFO  01:12:08,960 - #36 [
INFO  01:12:08,960 - #9 4
INFO  01:12:08,960 - #37 ]
INFO  01:12:08,960 - #28 =
INFO  01:12:08,960 - #45 s3
INFO  01:12:08,960 - #13 ;
INFO  01:12:08,960 - #45 predmeti
INFO  01:12:08,960 - #36 [
INFO  01:12:08,960 - #9 1
INFO  01:12:08,960 - #37 ]
INFO  01:12:08,960 - #28 =
INFO  01:12:08,960 - #45 k1
INFO  01:12:08,960 - #13 ;
INFO  01:12:08,960 - #45 predmeti
INFO  01:12:08,961 - #36 [
INFO  01:12:08,961 - #9 3
INFO  01:12:08,961 - #37 ]
INFO  01:12:08,961 - #28 =
INFO  01:12:08,961 - #45 k2
INFO  01:12:08,961 - #13 ;
INFO  01:12:08,961 - #45 predmeti
INFO  01:12:08,961 - #36 [
INFO  01:12:08,961 - #9 5
INFO  01:12:08,961 - #37 ]
INFO  01:12:08,961 - #28 =
INFO  01:12:08,961 - #45 k3
INFO  01:12:08,961 - #13 ;
INFO  01:12:08,961 - #42 read
INFO  01:12:08,961 - #32 (
INFO  01:12:08,961 - #45 t
INFO  01:12:08,961 - #33 )
INFO  01:12:08,961 - #13 ;
INFO  01:12:08,961 - #45 i
INFO  01:12:08,961 - #28 =
INFO  01:12:08,961 - #9 0
INFO  01:12:08,961 - #13 ;
INFO  01:12:08,961 - #5 do
INFO  01:12:08,961 - #34 {
INFO  01:12:08,962 - #45 predmeti
INFO  01:12:08,962 - #36 [
INFO  01:12:08,962 - #45 i
INFO  01:12:08,962 - #37 ]
INFO  01:12:08,962 - #14 .
INFO  01:12:08,962 - #45 postaviTezinu
INFO  01:12:08,962 - #32 (
INFO  01:12:08,962 - #45 t
INFO  01:12:08,962 - #33 )
INFO  01:12:08,962 - #13 ;
INFO  01:12:08,962 - #45 i
INFO  01:12:08,962 - #29 ++
INFO  01:12:08,962 - #13 ;
INFO  01:12:08,962 - #35 }
INFO  01:12:08,962 - #6 while
INFO  01:12:08,963 - #32 (
INFO  01:12:08,963 - #45 i
INFO  01:12:08,963 - #23 <
INFO  01:12:08,963 - #9 6
INFO  01:12:08,963 - #33 )
INFO  01:12:08,964 - #13 ;
INFO  01:12:08,964 - #45 i
INFO  01:12:08,964 - #28 =
INFO  01:12:08,964 - #9 0
INFO  01:12:08,964 - #13 ;
INFO  01:12:08,964 - #45 zapreminaS
INFO  01:12:08,964 - #28 =
INFO  01:12:08,964 - #9 0
INFO  01:12:08,964 - #13 ;
INFO  01:12:08,964 - #45 tezinaS
INFO  01:12:08,965 - #28 =
INFO  01:12:08,965 - #9 0
INFO  01:12:08,965 - #13 ;
INFO  01:12:08,965 - #5 do
INFO  01:12:08,965 - #34 {
INFO  01:12:08,965 - #45 i
INFO  01:12:08,965 - #29 ++
INFO  01:12:08,965 - #13 ;
INFO  01:12:08,965 - #2 if
INFO  01:12:08,965 - #32 (
INFO  01:12:08,965 - #45 i
INFO  01:12:08,965 - #19 %
INFO  01:12:08,965 - #9 2
INFO  01:12:08,965 - #20 ==
INFO  01:12:08,965 - #9 0
INFO  01:12:08,966 - #33 )
INFO  01:12:08,966 - #7 continue
INFO  01:12:08,966 - #13 ;
INFO  01:12:08,966 - #45 zapreminaS
INFO  01:12:08,967 - #28 =
INFO  01:12:08,967 - #45 zapreminaS
INFO  01:12:08,967 - #15 +
INFO  01:12:08,967 - #45 predmeti
INFO  01:12:08,967 - #36 [
INFO  01:12:08,968 - #45 i
INFO  01:12:08,968 - #16 -
INFO  01:12:08,968 - #9 1
INFO  01:12:08,968 - #37 ]
INFO  01:12:08,969 - #14 .
INFO  01:12:08,969 - #45 zapremina
INFO  01:12:08,969 - #32 (
INFO  01:12:08,969 - #33 )
INFO  01:12:08,969 - #13 ;
INFO  01:12:08,969 - #45 tezinaS
INFO  01:12:08,969 - #28 =
INFO  01:12:08,969 - #45 tezinaS
INFO  01:12:08,969 - #15 +
INFO  01:12:08,969 - #45 predmeti
INFO  01:12:08,969 - #36 [
INFO  01:12:08,969 - #45 i
INFO  01:12:08,969 - #16 -
INFO  01:12:08,969 - #9 1
INFO  01:12:08,969 - #37 ]
INFO  01:12:08,969 - #14 .
INFO  01:12:08,969 - #45 Q
INFO  01:12:08,969 - #32 (
INFO  01:12:08,969 - #33 )
INFO  01:12:08,969 - #13 ;
INFO  01:12:08,969 - #45 ispis
INFO  01:12:08,969 - #32 (
INFO  01:12:08,969 - #45 predmeti
INFO  01:12:08,969 - #36 [
INFO  01:12:08,969 - #45 i
INFO  01:12:08,969 - #16 -
INFO  01:12:08,970 - #9 1
INFO  01:12:08,970 - #37 ]
INFO  01:12:08,970 - #33 )
INFO  01:12:08,970 - #13 ;
INFO  01:12:08,970 - #35 }
INFO  01:12:08,970 - #6 while
INFO  01:12:08,970 - #32 (
INFO  01:12:08,970 - #45 i
INFO  01:12:08,970 - #23 <
INFO  01:12:08,970 - #9 6
INFO  01:12:08,970 - #33 )
INFO  01:12:08,970 - #13 ;
INFO  01:12:08,970 - #45 i
INFO  01:12:08,970 - #28 =
INFO  01:12:08,970 - #9 0
INFO  01:12:08,970 - #13 ;
INFO  01:12:08,970 - #45 zapreminaK
INFO  01:12:08,970 - #28 =
INFO  01:12:08,970 - #9 0
INFO  01:12:08,970 - #13 ;
INFO  01:12:08,970 - #45 tezinaK
INFO  01:12:08,970 - #28 =
INFO  01:12:08,970 - #9 0
INFO  01:12:08,971 - #13 ;
INFO  01:12:08,971 - #5 do
INFO  01:12:08,971 - #34 {
INFO  01:12:08,971 - #45 i
INFO  01:12:08,971 - #29 ++
INFO  01:12:08,971 - #13 ;
INFO  01:12:08,971 - #2 if
INFO  01:12:08,971 - #32 (
INFO  01:12:08,971 - #45 i
INFO  01:12:08,971 - #19 %
INFO  01:12:08,971 - #9 2
INFO  01:12:08,971 - #20 ==
INFO  01:12:08,971 - #9 1
INFO  01:12:08,971 - #33 )
INFO  01:12:08,971 - #7 continue
INFO  01:12:08,971 - #13 ;
INFO  01:12:08,971 - #45 zapreminaK
INFO  01:12:08,971 - #28 =
INFO  01:12:08,974 - #45 zapreminaK
INFO  01:12:08,974 - #15 +
INFO  01:12:08,974 - #45 predmeti
INFO  01:12:08,974 - #36 [
INFO  01:12:08,974 - #45 i
INFO  01:12:08,974 - #16 -
INFO  01:12:08,974 - #9 1
INFO  01:12:08,974 - #37 ]
INFO  01:12:08,975 - #14 .
INFO  01:12:08,975 - #45 zapremina
INFO  01:12:08,975 - #32 (
INFO  01:12:08,975 - #33 )
INFO  01:12:08,975 - #13 ;
INFO  01:12:08,975 - #45 tezinaK
INFO  01:12:08,975 - #28 =
INFO  01:12:08,975 - #45 tezinaK
INFO  01:12:08,975 - #15 +
INFO  01:12:08,975 - #45 predmeti
INFO  01:12:08,975 - #36 [
INFO  01:12:08,975 - #45 i
INFO  01:12:08,975 - #16 -
INFO  01:12:08,975 - #9 1
INFO  01:12:08,975 - #37 ]
INFO  01:12:08,976 - #14 .
INFO  01:12:08,976 - #45 Q
INFO  01:12:08,976 - #32 (
INFO  01:12:08,976 - #33 )
INFO  01:12:08,976 - #13 ;
INFO  01:12:08,976 - #45 ispis
INFO  01:12:08,976 - #32 (
INFO  01:12:08,976 - #45 predmeti
INFO  01:12:08,976 - #36 [
INFO  01:12:08,976 - #45 i
INFO  01:12:08,976 - #16 -
INFO  01:12:08,976 - #9 1
INFO  01:12:08,976 - #37 ]
INFO  01:12:08,977 - #33 )
INFO  01:12:08,977 - #13 ;
INFO  01:12:08,977 - #35 }
INFO  01:12:08,977 - #6 while
INFO  01:12:08,977 - #32 (
INFO  01:12:08,977 - #45 i
INFO  01:12:08,977 - #23 <
INFO  01:12:08,977 - #9 6
INFO  01:12:08,977 - #33 )
INFO  01:12:08,977 - #13 ;
INFO  01:12:08,977 - #41 print
INFO  01:12:08,978 - #32 (
INFO  01:12:08,978 - #45 zapreminaS
INFO  01:12:08,978 - #33 )
INFO  01:12:08,978 - #13 ;
INFO  01:12:08,978 - #41 print
INFO  01:12:08,978 - #32 (
INFO  01:12:08,978 - #45 eol
INFO  01:12:08,978 - #33 )
INFO  01:12:08,978 - #13 ;
INFO  01:12:08,978 - #41 print
INFO  01:12:08,978 - #32 (
INFO  01:12:08,978 - #45 zapreminaK
INFO  01:12:08,978 - #33 )
INFO  01:12:08,978 - #13 ;
INFO  01:12:08,978 - #41 print
INFO  01:12:08,978 - #32 (
INFO  01:12:08,978 - #45 eol
INFO  01:12:08,978 - #33 )
INFO  01:12:08,979 - #13 ;
INFO  01:12:08,979 - #41 print
INFO  01:12:08,979 - #32 (
INFO  01:12:08,979 - #45 tezinaS
INFO  01:12:08,979 - #33 )
INFO  01:12:08,979 - #13 ;
INFO  01:12:08,979 - #41 print
INFO  01:12:08,979 - #32 (
INFO  01:12:08,979 - #45 eol
INFO  01:12:08,979 - #33 )
INFO  01:12:08,979 - #13 ;
INFO  01:12:08,979 - #41 print
INFO  01:12:08,979 - #32 (
INFO  01:12:08,979 - #45 tezinaK
INFO  01:12:08,979 - #33 )
INFO  01:12:08,980 - #13 ;
INFO  01:12:08,980 - #41 print
INFO  01:12:08,980 - #32 (
INFO  01:12:08,980 - #45 eol
INFO  01:12:08,980 - #33 )
INFO  01:12:08,980 - #13 ;
INFO  01:12:08,980 - #35 }
INFO  01:12:08,980 - #35 }
INFO  01:12:08,982 - ***Abstract tree****
INFO  01:12:08,982 - #0
DEBUG 01:12:09,019 - program name
DEBUG 01:12:09,019 - found constant with value 4of type 1
DEBUG 01:12:09,019 - found constant with value 3of type 1
DEBUG 01:12:09,020 - ClassBegin
DEBUG 01:12:09,023 - Variable with name tezina has the address of 1
DEBUG 01:12:09,023 - Variable with name vrsta has the address of 2
DEBUG 01:12:09,024 - designator simple at line 12: this
DEBUG 01:12:09,024 - designator simple at line 12: tezina
DEBUG 01:12:09,024 - designator simple at line 12: tezina
DEBUG 01:12:09,024 - term SingleFactorterm is type 1
DEBUG 01:12:09,024 - exprWithNoMinus
DEBUG 01:12:09,024 - designator simple at line 13: tezina
DEBUG 01:12:09,024 - found constant with value 0of type 1
DEBUG 01:12:09,024 - constant factor is type 1
DEBUG 01:12:09,024 - term SingleFactorterm is type 1
DEBUG 01:12:09,024 - exprWithNoMinus
DEBUG 01:12:09,024 - designator simple at line 15: this
DEBUG 01:12:09,024 - designator simple at line 15: zapremina
DEBUG 01:12:09,024 - designator simple at line 15: tezina
DEBUG 01:12:09,024 - term element is type 1
DEBUG 01:12:09,024 - term list single is type 1
DEBUG 01:12:09,024 - term MultiFactorTerm is type 1
DEBUG 01:12:09,024 - exprWithNoMinus
DEBUG 01:12:09,024 - designator simple at line 16: this
DEBUG 01:12:09,024 - designator simple at line 16: vrsta
DEBUG 01:12:09,024 - designator simple at line 16: vrsta
DEBUG 01:12:09,024 - term SingleFactorterm is type 2
DEBUG 01:12:09,024 - exprWithNoMinus
DEBUG 01:12:09,024 - class decl end
DEBUG 01:12:23,979 - class decl 1
DEBUG 01:12:23,979 - derived ClassBegin
DEBUG 01:12:55,635 - Variable with name r has the address of 3
DEBUG 01:12:55,635 - designator simple at line 24: this
DEBUG 01:12:55,635 - designator simple at line 24: tezina
DEBUG 01:12:55,635 - designator simple at line 24: tezina
DEBUG 01:12:55,635 - term SingleFactorterm is type 1
DEBUG 01:12:55,635 - exprWithNoMinus
DEBUG 01:12:55,635 - designator simple at line 24: vrsta
DEBUG 01:12:55,635 - found constant with value *****of type 2
DEBUG 01:12:55,635 - found constant with value 115of type 2
DEBUG 01:12:55,635 - constant factor is type 2
DEBUG 01:12:55,635 - term SingleFactorterm is type 2
DEBUG 01:12:55,635 - exprWithNoMinus
DEBUG 01:12:55,635 - designator simple at line 26: this
DEBUG 01:12:55,635 - designator simple at line 26: r
DEBUG 01:12:55,635 - designator simple at line 26: r
DEBUG 01:12:55,635 - term SingleFactorterm is type 1
DEBUG 01:12:55,635 - exprWithNoMinus
DEBUG 01:12:55,635 - designator simple at line 27: postaviVrstu
DEBUG 01:12:55,635 - found constant with value *****of type 2
DEBUG 01:12:55,635 - found constant with value 115of type 2
DEBUG 01:12:55,635 - constant factor is type 2
DEBUG 01:12:55,635 - term SingleFactorterm is type 2
DEBUG 01:12:55,635 - exprWithNoMinus
DEBUG 01:12:55,635 - found constant with value *****of type 2
DEBUG 01:12:55,636 - found constant with value 120of type 2
DEBUG 01:12:55,636 - constant factor is type 2
DEBUG 01:12:55,636 - term SingleFactorterm is type 2
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - print statement has arg of type 2
DEBUG 01:12:55,636 - designator simple at line 29: r
DEBUG 01:12:55,636 - term SingleFactorterm is type 1
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - found constant with value 1of type 1
DEBUG 01:12:55,636 - print statement has arg of type 1
DEBUG 01:12:55,636 - found constant with value *****of type 2
DEBUG 01:12:55,636 - found constant with value 58of type 2
DEBUG 01:12:55,636 - constant factor is type 2
DEBUG 01:12:55,636 - term SingleFactorterm is type 2
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - print statement has arg of type 2
DEBUG 01:12:55,636 - designator simple at line 31: this
DEBUG 01:12:55,636 - designator simple at line 31: r
DEBUG 01:12:55,636 - term SingleFactorterm is type 1
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - found constant with value 1of type 1
DEBUG 01:12:55,636 - print statement has arg of type 1
DEBUG 01:12:55,636 - Variable with name z has the address of 4
DEBUG 01:12:55,636 - designator simple at line 36: z
DEBUG 01:12:55,636 - designator simple at line 36: cinilac
DEBUG 01:12:55,636 - term SingleFactorterm is type 1
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - designator simple at line 37: z
DEBUG 01:12:55,636 - designator simple at line 37: r
DEBUG 01:12:55,636 - designator simple at line 37: delilac
DEBUG 01:12:55,636 - term element is type 1
DEBUG 01:12:55,636 - term list single is type 1
DEBUG 01:12:55,636 - term MultiFactorTerm is type 1
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - term element is type 1
DEBUG 01:12:55,636 - term list single is type 1
DEBUG 01:12:55,636 - term MultiFactorTerm is type 1
DEBUG 01:12:55,636 - exprWithNoMinus
DEBUG 01:12:55,636 - class decl end
