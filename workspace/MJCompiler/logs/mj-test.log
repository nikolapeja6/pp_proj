INFO  00:10:54,349 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:10:54,385 - #40 program
INFO  00:10:54,385 - #45 MJProgram
INFO  00:10:54,385 - #45 int
INFO  00:10:54,385 - #45 x
INFO  00:10:54,385 - #13 ;
INFO  00:10:54,385 - #45 int
INFO  00:10:54,386 - #45 z
INFO  00:10:54,386 - #36 [
INFO  00:10:54,386 - #37 ]
INFO  00:10:54,386 - #13 ;
INFO  00:10:54,386 - #34 {
INFO  00:10:54,386 - #45 int
INFO  00:10:54,387 - #45 main
INFO  00:10:54,387 - #32 (
INFO  00:10:54,387 - #33 )
INFO  00:10:54,387 - #45 int
INFO  00:10:54,387 - #45 y
INFO  00:10:54,388 - #13 ;
INFO  00:10:54,388 - #34 {
INFO  00:10:54,388 - #41 print
INFO  00:10:54,388 - #32 (
INFO  00:10:54,388 - #9 1
INFO  00:10:54,388 - #12 ,
INFO  00:10:54,389 - #9 1
INFO  00:10:54,389 - #33 )
INFO  00:10:54,389 - #13 ;
INFO  00:10:54,389 - #41 print
INFO  00:10:54,390 - #32 (
INFO  00:10:54,390 - #10 a
INFO  00:10:54,390 - #12 ,
INFO  00:10:54,390 - #9 1
INFO  00:10:54,390 - #33 )
INFO  00:10:54,390 - #13 ;
INFO  00:10:54,390 - #45 z
INFO  00:10:54,390 - #28 =
INFO  00:10:54,390 - #31 new
INFO  00:10:54,391 - #45 int
INFO  00:10:54,391 - #36 [
INFO  00:10:54,391 - #9 5
INFO  00:10:54,391 - #37 ]
INFO  00:10:54,391 - #13 ;
INFO  00:10:54,391 - #45 z
INFO  00:10:54,391 - #36 [
INFO  00:10:54,391 - #9 0
INFO  00:10:54,391 - #37 ]
INFO  00:10:54,391 - #28 =
INFO  00:10:54,391 - #9 0
INFO  00:10:54,391 - #13 ;
INFO  00:10:54,391 - #41 print
INFO  00:10:54,392 - #32 (
INFO  00:10:54,392 - #45 z
INFO  00:10:54,392 - #36 [
INFO  00:10:54,392 - #9 0
INFO  00:10:54,392 - #37 ]
INFO  00:10:54,392 - #33 )
INFO  00:10:54,392 - #13 ;
INFO  00:10:54,392 - #45 y
INFO  00:10:54,393 - #28 =
INFO  00:10:54,393 - #9 5
INFO  00:10:54,393 - #13 ;
INFO  00:10:54,393 - #45 x
INFO  00:10:54,393 - #28 =
INFO  00:10:54,393 - #45 y
INFO  00:10:54,393 - #15 +
INFO  00:10:54,393 - #9 3
INFO  00:10:54,394 - #13 ;
INFO  00:10:54,394 - #41 print
INFO  00:10:54,394 - #32 (
INFO  00:10:54,394 - #45 x
INFO  00:10:54,394 - #33 )
INFO  00:10:54,394 - #13 ;
INFO  00:10:54,394 - #45 y
INFO  00:10:54,394 - #28 =
INFO  00:10:54,394 - #32 (
INFO  00:10:54,394 - #45 x
INFO  00:10:54,394 - #33 )
INFO  00:10:54,394 - #13 ;
INFO  00:10:54,395 - #45 x
INFO  00:10:54,395 - #29 ++
INFO  00:10:54,395 - #13 ;
INFO  00:10:54,395 - #41 print
INFO  00:10:54,395 - #32 (
INFO  00:10:54,395 - #45 x
INFO  00:10:54,395 - #33 )
INFO  00:10:54,395 - #13 ;
INFO  00:10:54,395 - #45 x
INFO  00:10:54,395 - #30 --
INFO  00:10:54,395 - #13 ;
INFO  00:10:54,395 - #41 print
INFO  00:10:54,395 - #32 (
INFO  00:10:54,395 - #32 (
INFO  00:10:54,395 - #32 (
INFO  00:10:54,395 - #45 x
INFO  00:10:54,395 - #33 )
INFO  00:10:54,395 - #33 )
INFO  00:10:54,395 - #33 )
INFO  00:10:54,395 - #13 ;
INFO  00:10:54,395 - #45 x
INFO  00:10:54,396 - #28 =
INFO  00:10:54,396 - #45 x
INFO  00:10:54,396 - #15 +
INFO  00:10:54,396 - #32 (
INFO  00:10:54,396 - #16 -
INFO  00:10:54,396 - #9 2
INFO  00:10:54,396 - #33 )
INFO  00:10:54,396 - #13 ;
INFO  00:10:54,396 - #41 print
INFO  00:10:54,396 - #32 (
INFO  00:10:54,396 - #45 x
INFO  00:10:54,396 - #33 )
INFO  00:10:54,396 - #13 ;
INFO  00:10:54,396 - #45 x
INFO  00:10:54,396 - #28 =
INFO  00:10:54,396 - #45 y
INFO  00:10:54,396 - #17 *
INFO  00:10:54,396 - #9 2
INFO  00:10:54,397 - #13 ;
INFO  00:10:54,397 - #41 print
INFO  00:10:54,397 - #32 (
INFO  00:10:54,398 - #45 x
INFO  00:10:54,398 - #33 )
INFO  00:10:54,398 - #13 ;
INFO  00:10:54,398 - #45 y
INFO  00:10:54,398 - #28 =
INFO  00:10:54,398 - #45 x
INFO  00:10:54,398 - #18 /
INFO  00:10:54,398 - #9 4
INFO  00:10:54,398 - #13 ;
INFO  00:10:54,398 - #41 print
INFO  00:10:54,398 - #32 (
INFO  00:10:54,398 - #45 y
INFO  00:10:54,398 - #33 )
INFO  00:10:54,398 - #13 ;
INFO  00:10:54,398 - #45 x
INFO  00:10:54,398 - #28 =
INFO  00:10:54,399 - #45 y
INFO  00:10:54,399 - #19 %
INFO  00:10:54,399 - #9 3
INFO  00:10:54,399 - #13 ;
INFO  00:10:54,399 - #41 print
INFO  00:10:54,399 - #32 (
INFO  00:10:54,399 - #45 x
INFO  00:10:54,399 - #33 )
INFO  00:10:54,399 - #13 ;
INFO  00:10:54,399 - #42 read
INFO  00:10:54,399 - #32 (
INFO  00:10:54,399 - #45 x
INFO  00:10:54,400 - #33 )
INFO  00:10:54,400 - #13 ;
INFO  00:10:54,400 - #45 x
INFO  00:10:54,400 - #28 =
INFO  00:10:54,400 - #45 x
INFO  00:10:54,400 - #17 *
INFO  00:10:54,400 - #45 y
INFO  00:10:54,400 - #13 ;
INFO  00:10:54,400 - #41 print
INFO  00:10:54,400 - #32 (
INFO  00:10:54,400 - #45 x
INFO  00:10:54,400 - #33 )
INFO  00:10:54,400 - #13 ;
INFO  00:10:54,400 - #41 print
INFO  00:10:54,400 - #32 (
INFO  00:10:54,400 - #11 false
INFO  00:10:54,400 - #12 ,
INFO  00:10:54,400 - #9 20
INFO  00:10:54,400 - #33 )
INFO  00:10:54,401 - #13 ;
INFO  00:10:54,401 - #8 return
INFO  00:10:54,401 - #9 0
INFO  00:10:54,401 - #13 ;
INFO  00:10:54,401 - #35 }
INFO  00:10:54,401 - #35 }
INFO  00:10:54,403 - ***Abstract tree****
INFO  00:10:54,403 - #0
DEBUG 00:10:54,420 - Variable with name x has the address of 0
DEBUG 00:10:54,420 - Variable with name y has the address of 2
DEBUG 00:10:54,420 - found constant with value 1of type 1
DEBUG 00:10:54,420 - constant factor is type 1
DEBUG 00:10:54,420 - term SingleFactorterm is type 1
DEBUG 00:10:54,420 - exprWithNoMinus is type 1
DEBUG 00:10:54,420 - found constant with value 1of type 1
DEBUG 00:10:54,420 - print statement has arg of type 1
DEBUG 00:10:54,420 - found constant with value *****of type 2
DEBUG 00:10:54,420 - found constant with value 97of type 2
DEBUG 00:10:54,420 - constant factor is type 2
DEBUG 00:10:54,420 - term SingleFactorterm is type 2
DEBUG 00:10:54,420 - exprWithNoMinus is type 2
DEBUG 00:10:54,420 - found constant with value 1of type 1
DEBUG 00:10:54,420 - print statement has arg of type 2
DEBUG 00:10:54,420 - found constant with value 5of type 1
DEBUG 00:10:54,421 - constant factor is type 1
DEBUG 00:10:54,421 - term SingleFactorterm is type 1
DEBUG 00:10:54,421 - exprWithNoMinus is type 1
DEBUG 00:10:54,421 - term SingleFactorterm is type 3
DEBUG 00:10:54,421 - exprWithNoMinus is type 3
INFO  00:10:55,604 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:10:55,641 - #40 program
INFO  00:10:55,641 - #45 MJProgram
INFO  00:10:55,641 - #45 int
INFO  00:10:55,641 - #45 x
INFO  00:10:55,641 - #13 ;
INFO  00:10:55,642 - #45 int
INFO  00:10:55,642 - #45 z
INFO  00:10:55,642 - #36 [
INFO  00:10:55,642 - #37 ]
INFO  00:10:55,642 - #13 ;
INFO  00:10:55,642 - #34 {
INFO  00:10:55,642 - #45 int
INFO  00:10:55,643 - #45 main
INFO  00:10:55,643 - #32 (
INFO  00:10:55,643 - #33 )
INFO  00:10:55,643 - #45 int
INFO  00:10:55,643 - #45 y
INFO  00:10:55,644 - #13 ;
INFO  00:10:55,644 - #34 {
INFO  00:10:55,644 - #41 print
INFO  00:10:55,644 - #32 (
INFO  00:10:55,644 - #9 1
INFO  00:10:55,644 - #12 ,
INFO  00:10:55,645 - #9 1
INFO  00:10:55,645 - #33 )
INFO  00:10:55,645 - #13 ;
INFO  00:10:55,645 - #41 print
INFO  00:10:55,645 - #32 (
INFO  00:10:55,645 - #10 a
INFO  00:10:55,645 - #12 ,
INFO  00:10:55,645 - #9 1
INFO  00:10:55,645 - #33 )
INFO  00:10:55,645 - #13 ;
INFO  00:10:55,645 - #45 z
INFO  00:10:55,646 - #28 =
INFO  00:10:55,646 - #31 new
INFO  00:10:55,646 - #45 int
INFO  00:10:55,646 - #36 [
INFO  00:10:55,646 - #9 5
INFO  00:10:55,646 - #37 ]
INFO  00:10:55,646 - #13 ;
INFO  00:10:55,646 - #45 z
INFO  00:10:55,646 - #36 [
INFO  00:10:55,647 - #9 0
INFO  00:10:55,647 - #37 ]
INFO  00:10:55,647 - #28 =
INFO  00:10:55,647 - #9 0
INFO  00:10:55,647 - #13 ;
INFO  00:10:55,647 - #41 print
INFO  00:10:55,647 - #32 (
INFO  00:10:55,647 - #45 z
INFO  00:10:55,647 - #36 [
INFO  00:10:55,647 - #9 0
INFO  00:10:55,647 - #37 ]
INFO  00:10:55,647 - #33 )
INFO  00:10:55,647 - #13 ;
INFO  00:10:55,647 - #45 y
INFO  00:10:55,647 - #28 =
INFO  00:10:55,648 - #9 5
INFO  00:10:55,648 - #13 ;
INFO  00:10:55,648 - #45 x
INFO  00:10:55,648 - #28 =
INFO  00:10:55,648 - #45 y
INFO  00:10:55,648 - #15 +
INFO  00:10:55,648 - #9 3
INFO  00:10:55,649 - #13 ;
INFO  00:10:55,649 - #41 print
INFO  00:10:55,649 - #32 (
INFO  00:10:55,649 - #45 x
INFO  00:10:55,649 - #33 )
INFO  00:10:55,649 - #13 ;
INFO  00:10:55,649 - #45 y
INFO  00:10:55,649 - #28 =
INFO  00:10:55,649 - #32 (
INFO  00:10:55,649 - #45 x
INFO  00:10:55,649 - #33 )
INFO  00:10:55,650 - #13 ;
INFO  00:10:55,650 - #45 x
INFO  00:10:55,650 - #29 ++
INFO  00:10:55,650 - #13 ;
INFO  00:10:55,650 - #41 print
INFO  00:10:55,650 - #32 (
INFO  00:10:55,650 - #45 x
INFO  00:10:55,650 - #33 )
INFO  00:10:55,650 - #13 ;
INFO  00:10:55,650 - #45 x
INFO  00:10:55,650 - #30 --
INFO  00:10:55,650 - #13 ;
INFO  00:10:55,650 - #41 print
INFO  00:10:55,650 - #32 (
INFO  00:10:55,650 - #32 (
INFO  00:10:55,650 - #32 (
INFO  00:10:55,650 - #45 x
INFO  00:10:55,650 - #33 )
INFO  00:10:55,650 - #33 )
INFO  00:10:55,650 - #33 )
INFO  00:10:55,651 - #13 ;
INFO  00:10:55,651 - #45 x
INFO  00:10:55,651 - #28 =
INFO  00:10:55,651 - #45 x
INFO  00:10:55,651 - #15 +
INFO  00:10:55,651 - #32 (
INFO  00:10:55,651 - #16 -
INFO  00:10:55,651 - #9 2
INFO  00:10:55,651 - #33 )
INFO  00:10:55,651 - #13 ;
INFO  00:10:55,651 - #41 print
INFO  00:10:55,651 - #32 (
INFO  00:10:55,651 - #45 x
INFO  00:10:55,651 - #33 )
INFO  00:10:55,651 - #13 ;
INFO  00:10:55,651 - #45 x
INFO  00:10:55,651 - #28 =
INFO  00:10:55,651 - #45 y
INFO  00:10:55,651 - #17 *
INFO  00:10:55,651 - #9 2
INFO  00:10:55,652 - #13 ;
INFO  00:10:55,652 - #41 print
INFO  00:10:55,653 - #32 (
INFO  00:10:55,653 - #45 x
INFO  00:10:55,653 - #33 )
INFO  00:10:55,653 - #13 ;
INFO  00:10:55,653 - #45 y
INFO  00:10:55,653 - #28 =
INFO  00:10:55,653 - #45 x
INFO  00:10:55,653 - #18 /
INFO  00:10:55,653 - #9 4
INFO  00:10:55,653 - #13 ;
INFO  00:10:55,653 - #41 print
INFO  00:10:55,653 - #32 (
INFO  00:10:55,653 - #45 y
INFO  00:10:55,653 - #33 )
INFO  00:10:55,653 - #13 ;
INFO  00:10:55,653 - #45 x
INFO  00:10:55,654 - #28 =
INFO  00:10:55,654 - #45 y
INFO  00:10:55,654 - #19 %
INFO  00:10:55,654 - #9 3
INFO  00:10:55,654 - #13 ;
INFO  00:10:55,654 - #41 print
INFO  00:10:55,654 - #32 (
INFO  00:10:55,654 - #45 x
INFO  00:10:55,654 - #33 )
INFO  00:10:55,654 - #13 ;
INFO  00:10:55,654 - #42 read
INFO  00:10:55,654 - #32 (
INFO  00:10:55,654 - #45 x
INFO  00:10:55,654 - #33 )
INFO  00:10:55,654 - #13 ;
INFO  00:10:55,654 - #45 x
INFO  00:10:55,655 - #28 =
INFO  00:10:55,655 - #45 x
INFO  00:10:55,655 - #17 *
INFO  00:10:55,655 - #45 y
INFO  00:10:55,655 - #13 ;
INFO  00:10:55,655 - #41 print
INFO  00:10:55,655 - #32 (
INFO  00:10:55,655 - #45 x
INFO  00:10:55,655 - #33 )
INFO  00:10:55,655 - #13 ;
INFO  00:10:55,655 - #41 print
INFO  00:10:55,655 - #32 (
INFO  00:10:55,655 - #11 false
INFO  00:10:55,655 - #12 ,
INFO  00:10:55,655 - #9 20
INFO  00:10:55,655 - #33 )
INFO  00:10:55,655 - #13 ;
INFO  00:10:55,655 - #8 return
INFO  00:10:55,655 - #9 0
INFO  00:10:55,655 - #13 ;
INFO  00:10:55,655 - #35 }
INFO  00:10:55,656 - #35 }
INFO  00:10:55,658 - ***Abstract tree****
INFO  00:10:55,658 - #0
DEBUG 00:10:55,674 - Variable with name x has the address of 0
DEBUG 00:10:55,674 - Variable with name y has the address of 2
DEBUG 00:10:55,674 - found constant with value 1of type 1
DEBUG 00:10:55,674 - constant factor is type 1
DEBUG 00:10:55,674 - term SingleFactorterm is type 1
DEBUG 00:10:55,674 - exprWithNoMinus is type 1
DEBUG 00:10:55,674 - found constant with value 1of type 1
DEBUG 00:10:55,674 - print statement has arg of type 1
DEBUG 00:10:55,674 - found constant with value *****of type 2
DEBUG 00:10:55,675 - found constant with value 97of type 2
DEBUG 00:10:55,675 - constant factor is type 2
DEBUG 00:10:55,675 - term SingleFactorterm is type 2
DEBUG 00:10:55,675 - exprWithNoMinus is type 2
DEBUG 00:10:55,675 - found constant with value 1of type 1
DEBUG 00:10:55,675 - print statement has arg of type 2
DEBUG 00:10:55,675 - found constant with value 5of type 1
DEBUG 00:10:55,675 - constant factor is type 1
DEBUG 00:10:55,675 - term SingleFactorterm is type 1
DEBUG 00:10:55,675 - exprWithNoMinus is type 1
DEBUG 00:10:55,675 - term SingleFactorterm is type 3
DEBUG 00:10:55,675 - exprWithNoMinus is type 3
DEBUG 00:10:59,328 - found constant with value 0of type 1
DEBUG 00:10:59,328 - constant factor is type 1
DEBUG 00:10:59,328 - term SingleFactorterm is type 1
DEBUG 00:10:59,328 - exprWithNoMinus is type 1
DEBUG 00:10:59,329 - found constant with value 0of type 1
DEBUG 00:10:59,329 - constant factor is type 1
DEBUG 00:10:59,329 - term SingleFactorterm is type 1
DEBUG 00:10:59,329 - exprWithNoMinus is type 1
DEBUG 00:11:00,055 - found constant with value 0of type 1
DEBUG 00:11:00,056 - constant factor is type 1
DEBUG 00:11:00,056 - term SingleFactorterm is type 1
DEBUG 00:11:00,056 - exprWithNoMinus is type 1
DEBUG 00:11:00,056 - term SingleFactorterm is type 1
DEBUG 00:11:00,056 - exprWithNoMinus is type 1
DEBUG 00:11:00,056 - print statement has arg of type 1
DEBUG 00:11:00,056 - found constant with value 5of type 1
DEBUG 00:11:00,056 - constant factor is type 1
DEBUG 00:11:00,056 - term SingleFactorterm is type 1
DEBUG 00:11:00,056 - exprWithNoMinus is type 1
DEBUG 00:11:00,661 - term SingleFactorterm is type 1
DEBUG 00:11:00,661 - found constant with value 3of type 1
DEBUG 00:11:00,661 - constant factor is type 1
DEBUG 00:11:00,661 - term SingleFactorterm is type 1
DEBUG 00:11:00,661 - exprWithNoMinus is type 1
DEBUG 00:11:01,254 - term SingleFactorterm is type 1
DEBUG 00:11:01,254 - exprWithNoMinus is type 1
DEBUG 00:11:01,254 - print statement has arg of type 1
DEBUG 00:11:01,254 - term SingleFactorterm is type 1
DEBUG 00:11:01,254 - exprWithNoMinus is type 1
DEBUG 00:11:01,254 - term SingleFactorterm is type 1
DEBUG 00:11:01,254 - exprWithNoMinus is type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - exprWithNoMinus is type 1
DEBUG 00:11:01,851 - print statement has arg of type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - exprWithNoMinus is type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - exprWithNoMinus is type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - exprWithNoMinus is type 1
DEBUG 00:11:01,851 - print statement has arg of type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - found constant with value 2of type 1
DEBUG 00:11:01,851 - constant factor is type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - ExprWithMinus is type 1
DEBUG 00:11:01,851 - term SingleFactorterm is type 1
DEBUG 00:11:01,851 - exprWithNoMinus is type 1
DEBUG 00:11:02,437 - term SingleFactorterm is type 1
DEBUG 00:11:02,437 - exprWithNoMinus is type 1
DEBUG 00:11:02,439 - print statement has arg of type 1
DEBUG 00:11:02,439 - found constant with value 2of type 1
DEBUG 00:11:02,439 - constant factor is type 1
DEBUG 00:11:02,439 - term element is type 1
DEBUG 00:11:02,439 - term list single is type 1
DEBUG 00:11:02,439 - term MultiFactorTerm is type 1
DEBUG 00:11:02,439 - exprWithNoMinus is type 1
DEBUG 00:11:03,026 - term SingleFactorterm is type 1
DEBUG 00:11:03,027 - exprWithNoMinus is type 1
DEBUG 00:11:03,027 - print statement has arg of type 1
DEBUG 00:11:03,027 - found constant with value 4of type 1
DEBUG 00:11:03,027 - constant factor is type 1
DEBUG 00:11:03,027 - term element is type 1
DEBUG 00:11:03,027 - term list single is type 1
DEBUG 00:11:03,027 - term MultiFactorTerm is type 1
DEBUG 00:11:03,027 - exprWithNoMinus is type 1
DEBUG 00:11:03,652 - term SingleFactorterm is type 1
DEBUG 00:11:03,653 - exprWithNoMinus is type 1
DEBUG 00:11:03,653 - print statement has arg of type 1
DEBUG 00:11:03,653 - found constant with value 3of type 1
DEBUG 00:11:03,653 - constant factor is type 1
DEBUG 00:11:03,653 - term element is type 1
DEBUG 00:11:03,653 - term list single is type 1
DEBUG 00:11:03,653 - term MultiFactorTerm is type 1
DEBUG 00:11:03,653 - exprWithNoMinus is type 1
DEBUG 00:11:04,224 - term SingleFactorterm is type 1
DEBUG 00:11:04,224 - exprWithNoMinus is type 1
DEBUG 00:11:04,224 - print statement has arg of type 1
DEBUG 00:11:04,224 - term element is type 1
DEBUG 00:11:04,224 - term list single is type 1
DEBUG 00:11:04,224 - term MultiFactorTerm is type 1
DEBUG 00:11:04,225 - exprWithNoMinus is type 1
DEBUG 00:11:04,820 - term SingleFactorterm is type 1
DEBUG 00:11:04,820 - exprWithNoMinus is type 1
DEBUG 00:11:04,820 - print statement has arg of type 1
DEBUG 00:11:04,821 - found constant with value 0of type 1
DEBUG 00:11:04,821 - constant factor is type 1
DEBUG 00:11:04,821 - term SingleFactorterm is type 1
DEBUG 00:11:04,821 - exprWithNoMinus is type 1
DEBUG 00:11:04,821 - found constant with value 20of type 1
DEBUG 00:11:04,821 - print statement has arg of type 1
DEBUG 00:11:04,821 - found constant with value 0of type 1
DEBUG 00:11:04,821 - constant factor is type 1
DEBUG 00:11:04,821 - term SingleFactorterm is type 1
DEBUG 00:11:04,821 - exprWithNoMinus is type 1
INFO  00:11:04,821 - Print calls = 0
INFO  00:11:10,468 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:14:55,177 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:14:55,206 - #40 program
INFO  00:14:55,206 - #45 MJProgram
INFO  00:14:55,206 - #45 int
INFO  00:14:55,206 - #45 x
INFO  00:14:55,206 - #13 ;
INFO  00:14:55,206 - #45 int
INFO  00:14:55,207 - #45 z
INFO  00:14:55,207 - #36 [
INFO  00:14:55,207 - #37 ]
INFO  00:14:55,207 - #13 ;
INFO  00:14:55,207 - #34 {
INFO  00:14:55,207 - #45 int
INFO  00:14:55,208 - #45 main
INFO  00:14:55,208 - #32 (
INFO  00:14:55,208 - #33 )
INFO  00:14:55,208 - #45 int
INFO  00:14:55,209 - #45 y
INFO  00:14:55,209 - #13 ;
INFO  00:14:55,209 - #34 {
INFO  00:14:55,209 - #41 print
INFO  00:14:55,209 - #32 (
INFO  00:14:55,209 - #9 1
INFO  00:14:55,209 - #12 ,
INFO  00:14:55,210 - #9 1
INFO  00:14:55,210 - #33 )
INFO  00:14:55,210 - #13 ;
INFO  00:14:55,210 - #41 print
INFO  00:14:55,210 - #32 (
INFO  00:14:55,211 - #10 a
INFO  00:14:55,211 - #12 ,
INFO  00:14:55,211 - #9 1
INFO  00:14:55,211 - #33 )
INFO  00:14:55,211 - #13 ;
INFO  00:14:55,211 - #45 z
INFO  00:14:55,211 - #28 =
INFO  00:14:55,211 - #31 new
INFO  00:14:55,211 - #45 int
INFO  00:14:55,211 - #36 [
INFO  00:14:55,211 - #9 5
INFO  00:14:55,211 - #37 ]
INFO  00:14:55,211 - #13 ;
INFO  00:14:55,211 - #45 z
INFO  00:14:55,211 - #36 [
INFO  00:14:55,211 - #9 0
INFO  00:14:55,211 - #37 ]
INFO  00:14:55,211 - #28 =
INFO  00:14:55,211 - #9 0
INFO  00:14:55,211 - #13 ;
INFO  00:14:55,211 - #41 print
INFO  00:14:55,211 - #32 (
INFO  00:14:55,211 - #45 z
INFO  00:14:55,211 - #36 [
INFO  00:14:55,212 - #9 0
INFO  00:14:55,212 - #37 ]
INFO  00:14:55,212 - #33 )
INFO  00:14:55,212 - #13 ;
INFO  00:14:55,212 - #45 y
INFO  00:14:55,212 - #28 =
INFO  00:14:55,212 - #9 5
INFO  00:14:55,212 - #13 ;
INFO  00:14:55,212 - #45 x
INFO  00:14:55,212 - #28 =
INFO  00:14:55,212 - #45 y
INFO  00:14:55,212 - #15 +
INFO  00:14:55,212 - #9 3
INFO  00:14:55,213 - #13 ;
INFO  00:14:55,213 - #41 print
INFO  00:14:55,213 - #32 (
INFO  00:14:55,213 - #45 x
INFO  00:14:55,213 - #33 )
INFO  00:14:55,213 - #13 ;
INFO  00:14:55,213 - #45 y
INFO  00:14:55,213 - #28 =
INFO  00:14:55,214 - #32 (
INFO  00:14:55,214 - #45 x
INFO  00:14:55,214 - #33 )
INFO  00:14:55,214 - #13 ;
INFO  00:14:55,214 - #45 x
INFO  00:14:55,214 - #29 ++
INFO  00:14:55,214 - #13 ;
INFO  00:14:55,214 - #41 print
INFO  00:14:55,214 - #32 (
INFO  00:14:55,214 - #45 x
INFO  00:14:55,214 - #33 )
INFO  00:14:55,214 - #13 ;
INFO  00:14:55,214 - #45 x
INFO  00:14:55,214 - #30 --
INFO  00:14:55,214 - #13 ;
INFO  00:14:55,214 - #41 print
INFO  00:14:55,214 - #32 (
INFO  00:14:55,214 - #32 (
INFO  00:14:55,214 - #32 (
INFO  00:14:55,214 - #45 x
INFO  00:14:55,214 - #33 )
INFO  00:14:55,215 - #33 )
INFO  00:14:55,215 - #33 )
INFO  00:14:55,215 - #13 ;
INFO  00:14:55,215 - #45 x
INFO  00:14:55,215 - #28 =
INFO  00:14:55,215 - #45 x
INFO  00:14:55,215 - #15 +
INFO  00:14:55,215 - #32 (
INFO  00:14:55,215 - #16 -
INFO  00:14:55,215 - #9 2
INFO  00:14:55,215 - #33 )
INFO  00:14:55,215 - #13 ;
INFO  00:14:55,215 - #41 print
INFO  00:14:55,215 - #32 (
INFO  00:14:55,215 - #45 x
INFO  00:14:55,215 - #33 )
INFO  00:14:55,215 - #13 ;
INFO  00:14:55,215 - #45 x
INFO  00:14:55,215 - #28 =
INFO  00:14:55,215 - #45 y
INFO  00:14:55,215 - #17 *
INFO  00:14:55,215 - #9 2
INFO  00:14:55,216 - #13 ;
INFO  00:14:55,217 - #41 print
INFO  00:14:55,217 - #32 (
INFO  00:14:55,217 - #45 x
INFO  00:14:55,217 - #33 )
INFO  00:14:55,217 - #13 ;
INFO  00:14:55,217 - #45 y
INFO  00:14:55,217 - #28 =
INFO  00:14:55,217 - #45 x
INFO  00:14:55,217 - #18 /
INFO  00:14:55,217 - #9 4
INFO  00:14:55,217 - #13 ;
INFO  00:14:55,217 - #41 print
INFO  00:14:55,217 - #32 (
INFO  00:14:55,217 - #45 y
INFO  00:14:55,217 - #33 )
INFO  00:14:55,217 - #13 ;
INFO  00:14:55,217 - #45 x
INFO  00:14:55,217 - #28 =
INFO  00:14:55,217 - #45 y
INFO  00:14:55,218 - #19 %
INFO  00:14:55,218 - #9 3
INFO  00:14:55,218 - #13 ;
INFO  00:14:55,218 - #41 print
INFO  00:14:55,218 - #32 (
INFO  00:14:55,218 - #45 x
INFO  00:14:55,218 - #33 )
INFO  00:14:55,218 - #13 ;
INFO  00:14:55,218 - #42 read
INFO  00:14:55,218 - #32 (
INFO  00:14:55,218 - #45 x
INFO  00:14:55,218 - #33 )
INFO  00:14:55,218 - #13 ;
INFO  00:14:55,218 - #45 x
INFO  00:14:55,218 - #28 =
INFO  00:14:55,218 - #45 x
INFO  00:14:55,218 - #17 *
INFO  00:14:55,219 - #45 y
INFO  00:14:55,219 - #13 ;
INFO  00:14:55,219 - #41 print
INFO  00:14:55,219 - #32 (
INFO  00:14:55,219 - #45 x
INFO  00:14:55,219 - #33 )
INFO  00:14:55,219 - #13 ;
INFO  00:14:55,219 - #41 print
INFO  00:14:55,219 - #32 (
INFO  00:14:55,219 - #11 false
INFO  00:14:55,219 - #12 ,
INFO  00:14:55,219 - #9 20
INFO  00:14:55,219 - #33 )
INFO  00:14:55,219 - #13 ;
INFO  00:14:55,219 - #8 return
INFO  00:14:55,219 - #9 0
INFO  00:14:55,219 - #13 ;
INFO  00:14:55,219 - #35 }
INFO  00:14:55,219 - #35 }
INFO  00:14:55,221 - ***Abstract tree****
INFO  00:14:55,221 - #0
DEBUG 00:14:55,232 - Variable with name x has the address of 0
DEBUG 00:14:55,232 - Variable with name y has the address of 2
DEBUG 00:14:55,232 - found constant with value 1of type 1
DEBUG 00:14:55,232 - constant factor is type 1
DEBUG 00:14:55,232 - term SingleFactorterm is type 1
DEBUG 00:14:55,232 - exprWithNoMinus is type 1
DEBUG 00:14:55,232 - found constant with value 1of type 1
DEBUG 00:14:55,232 - print statement has arg of type 1
DEBUG 00:14:55,232 - found constant with value *****of type 2
DEBUG 00:14:55,232 - found constant with value 97of type 2
DEBUG 00:14:55,232 - constant factor is type 2
DEBUG 00:14:55,232 - term SingleFactorterm is type 2
DEBUG 00:14:55,232 - exprWithNoMinus is type 2
DEBUG 00:14:55,232 - found constant with value 1of type 1
DEBUG 00:14:55,232 - print statement has arg of type 2
DEBUG 00:14:55,232 - found constant with value 5of type 1
DEBUG 00:14:55,232 - constant factor is type 1
DEBUG 00:14:55,232 - term SingleFactorterm is type 1
DEBUG 00:14:55,232 - exprWithNoMinus is type 1
DEBUG 00:14:55,232 - term SingleFactorterm is type 3
DEBUG 00:14:55,232 - exprWithNoMinus is type 3
DEBUG 00:14:55,233 - found constant with value 0of type 1
DEBUG 00:14:55,233 - constant factor is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - found constant with value 0of type 1
DEBUG 00:14:55,233 - constant factor is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - found constant with value 0of type 1
DEBUG 00:14:55,233 - constant factor is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - print statement has arg of type 1
DEBUG 00:14:55,233 - found constant with value 5of type 1
DEBUG 00:14:55,233 - constant factor is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - found constant with value 3of type 1
DEBUG 00:14:55,233 - constant factor is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - print statement has arg of type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - term SingleFactorterm is type 1
DEBUG 00:14:55,233 - exprWithNoMinus is type 1
DEBUG 00:14:55,233 - print statement has arg of type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - print statement has arg of type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - found constant with value 2of type 1
DEBUG 00:14:55,234 - constant factor is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - ExprWithMinus is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - print statement has arg of type 1
DEBUG 00:14:55,234 - found constant with value 2of type 1
DEBUG 00:14:55,234 - constant factor is type 1
DEBUG 00:14:55,234 - term element is type 1
DEBUG 00:14:55,234 - term list single is type 1
DEBUG 00:14:55,234 - term MultiFactorTerm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - print statement has arg of type 1
DEBUG 00:14:55,234 - found constant with value 4of type 1
DEBUG 00:14:55,234 - constant factor is type 1
DEBUG 00:14:55,234 - term element is type 1
DEBUG 00:14:55,234 - term list single is type 1
DEBUG 00:14:55,234 - term MultiFactorTerm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - term SingleFactorterm is type 1
DEBUG 00:14:55,234 - exprWithNoMinus is type 1
DEBUG 00:14:55,234 - print statement has arg of type 1
DEBUG 00:14:55,234 - found constant with value 3of type 1
DEBUG 00:14:55,234 - constant factor is type 1
DEBUG 00:14:55,234 - term element is type 1
DEBUG 00:14:55,234 - term list single is type 1
DEBUG 00:14:55,235 - term MultiFactorTerm is type 1
DEBUG 00:14:55,235 - exprWithNoMinus is type 1
DEBUG 00:14:55,235 - term SingleFactorterm is type 1
DEBUG 00:14:55,235 - exprWithNoMinus is type 1
DEBUG 00:14:55,235 - print statement has arg of type 1
DEBUG 00:14:55,235 - term element is type 1
DEBUG 00:14:55,235 - term list single is type 1
DEBUG 00:14:55,235 - term MultiFactorTerm is type 1
DEBUG 00:14:55,235 - exprWithNoMinus is type 1
DEBUG 00:14:55,235 - term SingleFactorterm is type 1
DEBUG 00:14:55,235 - exprWithNoMinus is type 1
DEBUG 00:14:55,235 - print statement has arg of type 1
DEBUG 00:14:55,235 - found constant with value 0of type 1
DEBUG 00:14:55,235 - constant factor is type 1
DEBUG 00:14:55,235 - term SingleFactorterm is type 1
DEBUG 00:14:55,235 - exprWithNoMinus is type 1
DEBUG 00:14:55,235 - found constant with value 20of type 1
DEBUG 00:14:55,235 - print statement has arg of type 1
DEBUG 00:14:55,235 - found constant with value 0of type 1
DEBUG 00:14:55,235 - constant factor is type 1
DEBUG 00:14:55,235 - term SingleFactorterm is type 1
DEBUG 00:14:55,235 - exprWithNoMinus is type 1
INFO  00:14:55,235 - Print calls = 0
INFO  00:14:55,237 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:14:55,240 - Parsiranje uspesno zavrseno!
INFO  00:17:04,758 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:17:04,788 - #40 program
INFO  00:17:04,788 - #45 MJProgram
INFO  00:17:04,788 - #45 int
INFO  00:17:04,788 - #45 x
INFO  00:17:04,788 - #13 ;
INFO  00:17:04,789 - #45 int
INFO  00:17:04,789 - #45 z
INFO  00:17:04,789 - #36 [
INFO  00:17:04,789 - #37 ]
INFO  00:17:04,789 - #13 ;
INFO  00:17:04,789 - #34 {
INFO  00:17:04,789 - #45 int
INFO  00:17:04,790 - #45 main
INFO  00:17:04,790 - #32 (
INFO  00:17:04,790 - #33 )
INFO  00:17:04,790 - #45 int
INFO  00:17:04,790 - #45 y
INFO  00:17:04,790 - #13 ;
INFO  00:17:04,790 - #34 {
INFO  00:17:04,790 - #45 z
INFO  00:17:04,790 - #28 =
INFO  00:17:04,791 - #31 new
INFO  00:17:04,791 - #45 int
INFO  00:17:04,791 - #36 [
INFO  00:17:04,791 - #9 5
INFO  00:17:04,791 - #37 ]
INFO  00:17:04,792 - #13 ;
INFO  00:17:04,792 - #45 z
INFO  00:17:04,792 - #36 [
INFO  00:17:04,792 - #9 0
INFO  00:17:04,792 - #37 ]
INFO  00:17:04,792 - #28 =
INFO  00:17:04,793 - #9 0
INFO  00:17:04,793 - #13 ;
INFO  00:17:04,793 - #41 print
INFO  00:17:04,793 - #32 (
INFO  00:17:04,793 - #45 z
INFO  00:17:04,793 - #36 [
INFO  00:17:04,793 - #9 0
INFO  00:17:04,793 - #37 ]
INFO  00:17:04,793 - #33 )
INFO  00:17:04,794 - #13 ;
INFO  00:17:04,794 - #41 print
INFO  00:17:04,794 - #32 (
INFO  00:17:04,794 - #9 1
INFO  00:17:04,794 - #12 ,
INFO  00:17:04,794 - #9 1
INFO  00:17:04,794 - #33 )
INFO  00:17:04,794 - #13 ;
INFO  00:17:04,794 - #41 print
INFO  00:17:04,794 - #32 (
INFO  00:17:04,794 - #10 a
INFO  00:17:04,794 - #12 ,
INFO  00:17:04,794 - #9 1
INFO  00:17:04,794 - #33 )
INFO  00:17:04,794 - #13 ;
INFO  00:17:04,794 - #45 y
INFO  00:17:04,794 - #28 =
INFO  00:17:04,795 - #9 5
INFO  00:17:04,795 - #13 ;
INFO  00:17:04,795 - #45 x
INFO  00:17:04,795 - #28 =
INFO  00:17:04,795 - #45 y
INFO  00:17:04,795 - #15 +
INFO  00:17:04,795 - #9 3
INFO  00:17:04,796 - #13 ;
INFO  00:17:04,796 - #41 print
INFO  00:17:04,796 - #32 (
INFO  00:17:04,796 - #45 x
INFO  00:17:04,796 - #33 )
INFO  00:17:04,796 - #13 ;
INFO  00:17:04,796 - #45 y
INFO  00:17:04,796 - #28 =
INFO  00:17:04,796 - #32 (
INFO  00:17:04,796 - #45 x
INFO  00:17:04,796 - #33 )
INFO  00:17:04,796 - #13 ;
INFO  00:17:04,796 - #45 x
INFO  00:17:04,797 - #29 ++
INFO  00:17:04,797 - #13 ;
INFO  00:17:04,797 - #41 print
INFO  00:17:04,797 - #32 (
INFO  00:17:04,797 - #45 x
INFO  00:17:04,797 - #33 )
INFO  00:17:04,797 - #13 ;
INFO  00:17:04,797 - #45 x
INFO  00:17:04,797 - #30 --
INFO  00:17:04,797 - #13 ;
INFO  00:17:04,797 - #41 print
INFO  00:17:04,797 - #32 (
INFO  00:17:04,797 - #32 (
INFO  00:17:04,797 - #32 (
INFO  00:17:04,797 - #45 x
INFO  00:17:04,797 - #33 )
INFO  00:17:04,797 - #33 )
INFO  00:17:04,797 - #33 )
INFO  00:17:04,797 - #13 ;
INFO  00:17:04,797 - #45 x
INFO  00:17:04,797 - #28 =
INFO  00:17:04,797 - #45 x
INFO  00:17:04,797 - #15 +
INFO  00:17:04,798 - #32 (
INFO  00:17:04,798 - #16 -
INFO  00:17:04,798 - #9 2
INFO  00:17:04,798 - #33 )
INFO  00:17:04,798 - #13 ;
INFO  00:17:04,798 - #41 print
INFO  00:17:04,798 - #32 (
INFO  00:17:04,798 - #45 x
INFO  00:17:04,798 - #33 )
INFO  00:17:04,798 - #13 ;
INFO  00:17:04,798 - #45 x
INFO  00:17:04,798 - #28 =
INFO  00:17:04,798 - #45 y
INFO  00:17:04,798 - #17 *
INFO  00:17:04,798 - #9 2
INFO  00:17:04,799 - #13 ;
INFO  00:17:04,799 - #41 print
INFO  00:17:04,799 - #32 (
INFO  00:17:04,799 - #45 x
INFO  00:17:04,799 - #33 )
INFO  00:17:04,799 - #13 ;
INFO  00:17:04,799 - #45 y
INFO  00:17:04,799 - #28 =
INFO  00:17:04,800 - #45 x
INFO  00:17:04,800 - #18 /
INFO  00:17:04,800 - #9 4
INFO  00:17:04,800 - #13 ;
INFO  00:17:04,800 - #41 print
INFO  00:17:04,800 - #32 (
INFO  00:17:04,800 - #45 y
INFO  00:17:04,800 - #33 )
INFO  00:17:04,800 - #13 ;
INFO  00:17:04,800 - #45 x
INFO  00:17:04,800 - #28 =
INFO  00:17:04,800 - #45 y
INFO  00:17:04,800 - #19 %
INFO  00:17:04,800 - #9 3
INFO  00:17:04,801 - #13 ;
INFO  00:17:04,801 - #41 print
INFO  00:17:04,801 - #32 (
INFO  00:17:04,801 - #45 x
INFO  00:17:04,801 - #33 )
INFO  00:17:04,801 - #13 ;
INFO  00:17:04,801 - #42 read
INFO  00:17:04,801 - #32 (
INFO  00:17:04,801 - #45 x
INFO  00:17:04,801 - #33 )
INFO  00:17:04,801 - #13 ;
INFO  00:17:04,801 - #45 x
INFO  00:17:04,801 - #28 =
INFO  00:17:04,801 - #45 x
INFO  00:17:04,802 - #17 *
INFO  00:17:04,802 - #45 y
INFO  00:17:04,802 - #13 ;
INFO  00:17:04,802 - #41 print
INFO  00:17:04,802 - #32 (
INFO  00:17:04,802 - #45 x
INFO  00:17:04,802 - #33 )
INFO  00:17:04,802 - #13 ;
INFO  00:17:04,802 - #41 print
INFO  00:17:04,802 - #32 (
INFO  00:17:04,802 - #11 false
INFO  00:17:04,802 - #12 ,
INFO  00:17:04,802 - #9 20
INFO  00:17:04,802 - #33 )
INFO  00:17:04,802 - #13 ;
INFO  00:17:04,802 - #8 return
INFO  00:17:04,802 - #9 0
INFO  00:17:04,802 - #13 ;
INFO  00:17:04,802 - #35 }
INFO  00:17:04,803 - #35 }
INFO  00:17:04,804 - ***Abstract tree****
INFO  00:17:04,804 - #0
DEBUG 00:17:04,812 - Variable with name x has the address of 0
DEBUG 00:17:04,812 - Variable with name y has the address of 2
DEBUG 00:17:04,813 - found constant with value 5of type 1
DEBUG 00:17:04,813 - constant factor is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 1
DEBUG 00:17:04,813 - exprWithNoMinus is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 3
DEBUG 00:17:04,813 - exprWithNoMinus is type 3
DEBUG 00:17:04,813 - found constant with value 0of type 1
DEBUG 00:17:04,813 - constant factor is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 1
DEBUG 00:17:04,813 - exprWithNoMinus is type 1
DEBUG 00:17:04,813 - found constant with value 0of type 1
DEBUG 00:17:04,813 - constant factor is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 1
DEBUG 00:17:04,813 - exprWithNoMinus is type 1
DEBUG 00:17:04,813 - found constant with value 0of type 1
DEBUG 00:17:04,813 - constant factor is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 1
DEBUG 00:17:04,813 - exprWithNoMinus is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 1
DEBUG 00:17:04,813 - exprWithNoMinus is type 1
DEBUG 00:17:04,813 - print statement has arg of type 1
DEBUG 00:17:04,813 - found constant with value 1of type 1
DEBUG 00:17:04,813 - constant factor is type 1
DEBUG 00:17:04,813 - term SingleFactorterm is type 1
DEBUG 00:17:04,813 - exprWithNoMinus is type 1
DEBUG 00:17:04,813 - found constant with value 1of type 1
DEBUG 00:17:04,813 - print statement has arg of type 1
DEBUG 00:17:04,813 - found constant with value *****of type 2
DEBUG 00:17:04,813 - found constant with value 97of type 2
DEBUG 00:17:04,813 - constant factor is type 2
DEBUG 00:17:04,814 - term SingleFactorterm is type 2
DEBUG 00:17:04,814 - exprWithNoMinus is type 2
DEBUG 00:17:04,814 - found constant with value 1of type 1
DEBUG 00:17:04,814 - print statement has arg of type 2
DEBUG 00:17:04,814 - found constant with value 5of type 1
DEBUG 00:17:04,814 - constant factor is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - found constant with value 3of type 1
DEBUG 00:17:04,814 - constant factor is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - print statement has arg of type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - print statement has arg of type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - exprWithNoMinus is type 1
DEBUG 00:17:04,814 - print statement has arg of type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - found constant with value 2of type 1
DEBUG 00:17:04,814 - constant factor is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,814 - ExprWithMinus is type 1
DEBUG 00:17:04,814 - term SingleFactorterm is type 1
DEBUG 00:17:04,815 - exprWithNoMinus is type 1
DEBUG 00:17:04,815 - term SingleFactorterm is type 1
DEBUG 00:17:04,815 - exprWithNoMinus is type 1
DEBUG 00:17:04,815 - print statement has arg of type 1
DEBUG 00:17:04,815 - found constant with value 2of type 1
DEBUG 00:17:04,815 - constant factor is type 1
DEBUG 00:17:04,815 - term element is type 1
DEBUG 00:17:04,815 - term list single is type 1
DEBUG 00:17:04,815 - term MultiFactorTerm is type 1
DEBUG 00:17:04,815 - exprWithNoMinus is type 1
DEBUG 00:17:04,815 - term SingleFactorterm is type 1
DEBUG 00:17:04,815 - exprWithNoMinus is type 1
DEBUG 00:17:04,815 - print statement has arg of type 1
DEBUG 00:17:04,815 - found constant with value 4of type 1
DEBUG 00:17:04,815 - constant factor is type 1
DEBUG 00:17:04,815 - term element is type 1
DEBUG 00:17:04,815 - term list single is type 1
DEBUG 00:17:04,815 - term MultiFactorTerm is type 1
DEBUG 00:17:04,815 - exprWithNoMinus is type 1
DEBUG 00:17:04,815 - term SingleFactorterm is type 1
DEBUG 00:17:04,815 - exprWithNoMinus is type 1
DEBUG 00:17:04,815 - print statement has arg of type 1
DEBUG 00:17:04,815 - found constant with value 3of type 1
DEBUG 00:17:04,815 - constant factor is type 1
DEBUG 00:17:04,815 - term element is type 1
DEBUG 00:17:04,816 - term list single is type 1
DEBUG 00:17:04,816 - term MultiFactorTerm is type 1
DEBUG 00:17:04,816 - exprWithNoMinus is type 1
DEBUG 00:17:04,816 - term SingleFactorterm is type 1
DEBUG 00:17:04,816 - exprWithNoMinus is type 1
DEBUG 00:17:04,816 - print statement has arg of type 1
DEBUG 00:17:04,816 - term element is type 1
DEBUG 00:17:04,816 - term list single is type 1
DEBUG 00:17:04,816 - term MultiFactorTerm is type 1
DEBUG 00:17:04,816 - exprWithNoMinus is type 1
DEBUG 00:17:04,816 - term SingleFactorterm is type 1
DEBUG 00:17:04,816 - exprWithNoMinus is type 1
DEBUG 00:17:04,816 - print statement has arg of type 1
DEBUG 00:17:04,816 - found constant with value 0of type 1
DEBUG 00:17:04,816 - constant factor is type 1
DEBUG 00:17:04,816 - term SingleFactorterm is type 1
DEBUG 00:17:04,816 - exprWithNoMinus is type 1
DEBUG 00:17:04,816 - found constant with value 20of type 1
DEBUG 00:17:04,816 - print statement has arg of type 1
DEBUG 00:17:04,816 - found constant with value 0of type 1
DEBUG 00:17:04,816 - constant factor is type 1
DEBUG 00:17:04,816 - term SingleFactorterm is type 1
DEBUG 00:17:04,816 - exprWithNoMinus is type 1
INFO  00:17:04,816 - Print calls = 0
INFO  00:17:04,818 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:17:04,824 - Parsiranje uspesno zavrseno!
INFO  00:25:50,916 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:25:50,944 - #40 program
INFO  00:25:50,944 - #45 MJProgram
INFO  00:25:50,944 - #45 int
INFO  00:25:50,944 - #45 x
INFO  00:25:50,944 - #13 ;
INFO  00:25:50,944 - #45 int
INFO  00:25:50,945 - #45 z
INFO  00:25:50,945 - #36 [
INFO  00:25:50,945 - #37 ]
INFO  00:25:50,945 - #13 ;
INFO  00:25:50,945 - #34 {
INFO  00:25:50,945 - #45 int
INFO  00:25:50,946 - #45 main
INFO  00:25:50,946 - #32 (
INFO  00:25:50,946 - #33 )
INFO  00:25:50,946 - #45 int
INFO  00:25:50,946 - #45 y
INFO  00:25:50,946 - #13 ;
INFO  00:25:50,946 - #34 {
INFO  00:25:50,946 - #45 z
INFO  00:25:50,946 - #28 =
INFO  00:25:50,947 - #31 new
INFO  00:25:50,947 - #45 int
INFO  00:25:50,947 - #36 [
INFO  00:25:50,947 - #9 5
INFO  00:25:50,947 - #37 ]
INFO  00:25:50,948 - #13 ;
INFO  00:25:50,948 - #45 z
INFO  00:25:50,948 - #36 [
INFO  00:25:50,949 - #9 0
INFO  00:25:50,949 - #37 ]
INFO  00:25:50,949 - #28 =
INFO  00:25:50,949 - #9 0
INFO  00:25:50,949 - #13 ;
INFO  00:25:50,949 - #41 print
INFO  00:25:50,949 - #32 (
INFO  00:25:50,949 - #45 z
INFO  00:25:50,949 - #36 [
INFO  00:25:50,949 - #9 0
INFO  00:25:50,949 - #37 ]
INFO  00:25:50,949 - #33 )
INFO  00:25:50,949 - #13 ;
INFO  00:25:50,949 - #41 print
INFO  00:25:50,950 - #32 (
INFO  00:25:50,950 - #9 1
INFO  00:25:50,950 - #12 ,
INFO  00:25:50,950 - #9 1
INFO  00:25:50,950 - #33 )
INFO  00:25:50,950 - #13 ;
INFO  00:25:50,950 - #41 print
INFO  00:25:50,950 - #32 (
INFO  00:25:50,950 - #10 a
INFO  00:25:50,950 - #12 ,
INFO  00:25:50,950 - #9 1
INFO  00:25:50,950 - #33 )
INFO  00:25:50,950 - #13 ;
INFO  00:25:50,950 - #45 y
INFO  00:25:50,950 - #28 =
INFO  00:25:50,950 - #9 5
INFO  00:25:50,950 - #13 ;
INFO  00:25:50,950 - #45 x
INFO  00:25:50,950 - #28 =
INFO  00:25:50,950 - #45 y
INFO  00:25:50,951 - #15 +
INFO  00:25:50,951 - #9 3
INFO  00:25:50,951 - #13 ;
INFO  00:25:50,952 - #41 print
INFO  00:25:50,952 - #32 (
INFO  00:25:50,952 - #45 x
INFO  00:25:50,952 - #33 )
INFO  00:25:50,952 - #13 ;
INFO  00:25:50,952 - #45 y
INFO  00:25:50,952 - #28 =
INFO  00:25:50,952 - #32 (
INFO  00:25:50,952 - #45 x
INFO  00:25:50,952 - #33 )
INFO  00:25:50,952 - #13 ;
INFO  00:25:50,952 - #45 x
INFO  00:25:50,952 - #29 ++
INFO  00:25:50,952 - #13 ;
INFO  00:25:50,952 - #41 print
INFO  00:25:50,952 - #32 (
INFO  00:25:50,952 - #45 x
INFO  00:25:50,952 - #33 )
INFO  00:25:50,952 - #13 ;
INFO  00:25:50,952 - #45 x
INFO  00:25:50,952 - #30 --
INFO  00:25:50,953 - #13 ;
INFO  00:25:50,953 - #41 print
INFO  00:25:50,953 - #32 (
INFO  00:25:50,953 - #32 (
INFO  00:25:50,953 - #32 (
INFO  00:25:50,953 - #45 x
INFO  00:25:50,953 - #33 )
INFO  00:25:50,953 - #33 )
INFO  00:25:50,953 - #33 )
INFO  00:25:50,953 - #13 ;
INFO  00:25:50,953 - #45 x
INFO  00:25:50,953 - #28 =
INFO  00:25:50,953 - #45 x
INFO  00:25:50,953 - #15 +
INFO  00:25:50,953 - #32 (
INFO  00:25:50,953 - #16 -
INFO  00:25:50,953 - #9 2
INFO  00:25:50,953 - #33 )
INFO  00:25:50,953 - #13 ;
INFO  00:25:50,954 - #41 print
INFO  00:25:50,954 - #32 (
INFO  00:25:50,954 - #45 x
INFO  00:25:50,954 - #33 )
INFO  00:25:50,954 - #13 ;
INFO  00:25:50,954 - #45 x
INFO  00:25:50,954 - #28 =
INFO  00:25:50,954 - #45 y
INFO  00:25:50,954 - #17 *
INFO  00:25:50,954 - #9 2
INFO  00:25:50,955 - #13 ;
INFO  00:25:50,955 - #41 print
INFO  00:25:50,955 - #32 (
INFO  00:25:50,955 - #45 x
INFO  00:25:50,955 - #33 )
INFO  00:25:50,955 - #13 ;
INFO  00:25:50,955 - #45 y
INFO  00:25:50,955 - #28 =
INFO  00:25:50,955 - #45 x
INFO  00:25:50,955 - #18 /
INFO  00:25:50,955 - #9 4
INFO  00:25:50,956 - #13 ;
INFO  00:25:50,956 - #41 print
INFO  00:25:50,956 - #32 (
INFO  00:25:50,956 - #45 y
INFO  00:25:50,956 - #33 )
INFO  00:25:50,956 - #13 ;
INFO  00:25:50,956 - #45 x
INFO  00:25:50,956 - #28 =
INFO  00:25:50,956 - #45 y
INFO  00:25:50,956 - #19 %
INFO  00:25:50,956 - #9 3
INFO  00:25:50,957 - #13 ;
INFO  00:25:50,957 - #41 print
INFO  00:25:50,957 - #32 (
INFO  00:25:50,957 - #45 x
INFO  00:25:50,957 - #33 )
INFO  00:25:50,957 - #13 ;
INFO  00:25:50,957 - #42 read
INFO  00:25:50,957 - #32 (
INFO  00:25:50,957 - #45 x
INFO  00:25:50,957 - #33 )
INFO  00:25:50,957 - #13 ;
INFO  00:25:50,957 - #45 x
INFO  00:25:50,957 - #28 =
INFO  00:25:50,957 - #45 x
INFO  00:25:50,957 - #17 *
INFO  00:25:50,958 - #45 y
INFO  00:25:50,958 - #13 ;
INFO  00:25:50,958 - #41 print
INFO  00:25:50,958 - #32 (
INFO  00:25:50,958 - #45 x
INFO  00:25:50,958 - #33 )
INFO  00:25:50,958 - #13 ;
INFO  00:25:50,958 - #41 print
INFO  00:25:50,958 - #32 (
INFO  00:25:50,958 - #11 false
INFO  00:25:50,958 - #12 ,
INFO  00:25:50,958 - #9 20
INFO  00:25:50,958 - #33 )
INFO  00:25:50,958 - #13 ;
INFO  00:25:50,958 - #8 return
INFO  00:25:50,958 - #9 0
INFO  00:25:50,958 - #13 ;
INFO  00:25:50,958 - #35 }
INFO  00:25:50,959 - #35 }
INFO  00:25:50,961 - ***Abstract tree****
INFO  00:25:50,961 - #0
DEBUG 00:25:50,971 - Variable with name x has the address of 0
DEBUG 00:25:50,971 - Variable with name y has the address of 2
DEBUG 00:25:50,971 - found constant with value 5of type 1
DEBUG 00:25:50,971 - constant factor is type 1
DEBUG 00:25:50,971 - term SingleFactorterm is type 1
DEBUG 00:25:50,971 - exprWithNoMinus is type 1
DEBUG 00:25:50,971 - term SingleFactorterm is type 3
DEBUG 00:25:50,971 - exprWithNoMinus is type 3
DEBUG 00:25:50,971 - found constant with value 0of type 1
DEBUG 00:25:50,971 - constant factor is type 1
DEBUG 00:25:50,971 - term SingleFactorterm is type 1
DEBUG 00:25:50,971 - exprWithNoMinus is type 1
DEBUG 00:25:50,971 - found constant with value 0of type 1
DEBUG 00:25:50,971 - constant factor is type 1
DEBUG 00:25:50,971 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - exprWithNoMinus is type 1
DEBUG 00:25:50,972 - found constant with value 0of type 1
DEBUG 00:25:50,972 - constant factor is type 1
DEBUG 00:25:50,972 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - exprWithNoMinus is type 1
DEBUG 00:25:50,972 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - exprWithNoMinus is type 1
DEBUG 00:25:50,972 - print statement has arg of type 1
DEBUG 00:25:50,972 - found constant with value 1of type 1
DEBUG 00:25:50,972 - constant factor is type 1
DEBUG 00:25:50,972 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - exprWithNoMinus is type 1
DEBUG 00:25:50,972 - found constant with value 1of type 1
DEBUG 00:25:50,972 - print statement has arg of type 1
DEBUG 00:25:50,972 - found constant with value *****of type 2
DEBUG 00:25:50,972 - found constant with value 97of type 2
DEBUG 00:25:50,972 - constant factor is type 2
DEBUG 00:25:50,972 - term SingleFactorterm is type 2
DEBUG 00:25:50,972 - exprWithNoMinus is type 2
DEBUG 00:25:50,972 - found constant with value 1of type 1
DEBUG 00:25:50,972 - print statement has arg of type 2
DEBUG 00:25:50,972 - found constant with value 5of type 1
DEBUG 00:25:50,972 - constant factor is type 1
DEBUG 00:25:50,972 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - exprWithNoMinus is type 1
DEBUG 00:25:50,972 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - found constant with value 3of type 1
DEBUG 00:25:50,972 - constant factor is type 1
DEBUG 00:25:50,972 - term SingleFactorterm is type 1
DEBUG 00:25:50,972 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - print statement has arg of type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - print statement has arg of type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - print statement has arg of type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - found constant with value 2of type 1
DEBUG 00:25:50,973 - constant factor is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - ExprWithMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - term SingleFactorterm is type 1
DEBUG 00:25:50,973 - exprWithNoMinus is type 1
DEBUG 00:25:50,973 - print statement has arg of type 1
DEBUG 00:25:50,973 - found constant with value 2of type 1
DEBUG 00:25:50,973 - constant factor is type 1
DEBUG 00:25:50,973 - term element is type 1
DEBUG 00:25:50,974 - term list single is type 1
DEBUG 00:25:50,974 - term MultiFactorTerm is type 1
DEBUG 00:25:50,974 - exprWithNoMinus is type 1
DEBUG 00:25:50,974 - term SingleFactorterm is type 1
DEBUG 00:25:50,974 - exprWithNoMinus is type 1
DEBUG 00:25:50,974 - print statement has arg of type 1
DEBUG 00:25:50,974 - found constant with value 4of type 1
DEBUG 00:25:50,974 - constant factor is type 1
DEBUG 00:25:50,974 - term element is type 1
DEBUG 00:25:50,974 - term list single is type 1
DEBUG 00:25:50,974 - term MultiFactorTerm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - term SingleFactorterm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - print statement has arg of type 1
DEBUG 00:25:50,975 - found constant with value 3of type 1
DEBUG 00:25:50,975 - constant factor is type 1
DEBUG 00:25:50,975 - term element is type 1
DEBUG 00:25:50,975 - term list single is type 1
DEBUG 00:25:50,975 - term MultiFactorTerm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - term SingleFactorterm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - print statement has arg of type 1
DEBUG 00:25:50,975 - term element is type 1
DEBUG 00:25:50,975 - term list single is type 1
DEBUG 00:25:50,975 - term MultiFactorTerm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - term SingleFactorterm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - print statement has arg of type 1
DEBUG 00:25:50,975 - found constant with value 0of type 1
DEBUG 00:25:50,975 - constant factor is type 1
DEBUG 00:25:50,975 - term SingleFactorterm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
DEBUG 00:25:50,975 - found constant with value 20of type 1
DEBUG 00:25:50,975 - print statement has arg of type 1
DEBUG 00:25:50,975 - found constant with value 0of type 1
DEBUG 00:25:50,975 - constant factor is type 1
DEBUG 00:25:50,975 - term SingleFactorterm is type 1
DEBUG 00:25:50,975 - exprWithNoMinus is type 1
INFO  00:25:50,975 - Print calls = 0
INFO  00:25:50,977 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:25:50,987 - Parsiranje uspesno zavrseno!
INFO  00:27:47,436 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:27:47,464 - #40 program
INFO  00:27:47,464 - #45 MJProgram
INFO  00:27:47,464 - #45 int
INFO  00:27:47,464 - #45 x
INFO  00:27:47,465 - #13 ;
INFO  00:27:47,465 - #45 int
INFO  00:27:47,465 - #45 z
INFO  00:27:47,465 - #36 [
INFO  00:27:47,465 - #37 ]
INFO  00:27:47,465 - #13 ;
INFO  00:27:47,465 - #34 {
INFO  00:27:47,466 - #45 int
INFO  00:27:47,466 - #45 main
INFO  00:27:47,466 - #32 (
INFO  00:27:47,467 - #33 )
INFO  00:27:47,467 - #45 int
INFO  00:27:47,467 - #45 y
INFO  00:27:47,467 - #13 ;
INFO  00:27:47,467 - #34 {
INFO  00:27:47,467 - #45 z
INFO  00:27:47,467 - #28 =
INFO  00:27:47,467 - #31 new
INFO  00:27:47,467 - #45 int
INFO  00:27:47,467 - #36 [
INFO  00:27:47,467 - #9 5
INFO  00:27:47,467 - #37 ]
INFO  00:27:47,468 - #13 ;
INFO  00:27:47,469 - #45 z
INFO  00:27:47,469 - #36 [
INFO  00:27:47,469 - #9 0
INFO  00:27:47,469 - #37 ]
INFO  00:27:47,469 - #28 =
INFO  00:27:47,469 - #9 0
INFO  00:27:47,469 - #13 ;
INFO  00:27:47,469 - #41 print
INFO  00:27:47,469 - #32 (
INFO  00:27:47,470 - #45 z
INFO  00:27:47,470 - #36 [
INFO  00:27:47,470 - #9 0
INFO  00:27:47,470 - #37 ]
INFO  00:27:47,470 - #33 )
INFO  00:27:47,470 - #13 ;
INFO  00:27:47,470 - #41 print
INFO  00:27:47,470 - #32 (
INFO  00:27:47,470 - #9 1
INFO  00:27:47,470 - #12 ,
INFO  00:27:47,470 - #9 1
INFO  00:27:47,470 - #33 )
INFO  00:27:47,470 - #13 ;
INFO  00:27:47,470 - #41 print
INFO  00:27:47,471 - #32 (
INFO  00:27:47,471 - #10 a
INFO  00:27:47,471 - #12 ,
INFO  00:27:47,471 - #9 1
INFO  00:27:47,471 - #33 )
INFO  00:27:47,471 - #13 ;
INFO  00:27:47,471 - #45 y
INFO  00:27:47,471 - #28 =
INFO  00:27:47,471 - #9 5
INFO  00:27:47,471 - #13 ;
INFO  00:27:47,471 - #45 x
INFO  00:27:47,471 - #28 =
INFO  00:27:47,471 - #45 y
INFO  00:27:47,471 - #15 +
INFO  00:27:47,471 - #9 3
INFO  00:27:47,472 - #13 ;
INFO  00:27:47,472 - #41 print
INFO  00:27:47,472 - #32 (
INFO  00:27:47,472 - #45 x
INFO  00:27:47,472 - #33 )
INFO  00:27:47,472 - #13 ;
INFO  00:27:47,472 - #45 y
INFO  00:27:47,473 - #28 =
INFO  00:27:47,473 - #32 (
INFO  00:27:47,473 - #45 x
INFO  00:27:47,473 - #33 )
INFO  00:27:47,473 - #13 ;
INFO  00:27:47,473 - #45 x
INFO  00:27:47,473 - #29 ++
INFO  00:27:47,473 - #13 ;
INFO  00:27:47,473 - #41 print
INFO  00:27:47,473 - #32 (
INFO  00:27:47,473 - #45 x
INFO  00:27:47,473 - #33 )
INFO  00:27:47,473 - #13 ;
INFO  00:27:47,473 - #45 x
INFO  00:27:47,473 - #30 --
INFO  00:27:47,473 - #13 ;
INFO  00:27:47,473 - #41 print
INFO  00:27:47,473 - #32 (
INFO  00:27:47,473 - #32 (
INFO  00:27:47,473 - #32 (
INFO  00:27:47,474 - #45 x
INFO  00:27:47,474 - #33 )
INFO  00:27:47,474 - #33 )
INFO  00:27:47,474 - #33 )
INFO  00:27:47,474 - #13 ;
INFO  00:27:47,474 - #45 x
INFO  00:27:47,474 - #28 =
INFO  00:27:47,474 - #45 x
INFO  00:27:47,474 - #15 +
INFO  00:27:47,474 - #32 (
INFO  00:27:47,474 - #16 -
INFO  00:27:47,474 - #9 2
INFO  00:27:47,474 - #33 )
INFO  00:27:47,474 - #13 ;
INFO  00:27:47,474 - #41 print
INFO  00:27:47,475 - #32 (
INFO  00:27:47,475 - #45 x
INFO  00:27:47,475 - #33 )
INFO  00:27:47,475 - #13 ;
INFO  00:27:47,475 - #45 x
INFO  00:27:47,475 - #28 =
INFO  00:27:47,475 - #45 y
INFO  00:27:47,475 - #17 *
INFO  00:27:47,475 - #9 2
INFO  00:27:47,475 - #13 ;
INFO  00:27:47,476 - #41 print
INFO  00:27:47,476 - #32 (
INFO  00:27:47,476 - #45 x
INFO  00:27:47,476 - #33 )
INFO  00:27:47,476 - #13 ;
INFO  00:27:47,476 - #45 y
INFO  00:27:47,476 - #28 =
INFO  00:27:47,476 - #45 x
INFO  00:27:47,476 - #18 /
INFO  00:27:47,476 - #9 4
INFO  00:27:47,477 - #13 ;
INFO  00:27:47,477 - #41 print
INFO  00:27:47,477 - #32 (
INFO  00:27:47,477 - #45 y
INFO  00:27:47,477 - #33 )
INFO  00:27:47,477 - #13 ;
INFO  00:27:47,477 - #45 x
INFO  00:27:47,477 - #28 =
INFO  00:27:47,477 - #45 y
INFO  00:27:47,477 - #19 %
INFO  00:27:47,477 - #9 3
INFO  00:27:47,477 - #13 ;
INFO  00:27:47,477 - #41 print
INFO  00:27:47,477 - #32 (
INFO  00:27:47,477 - #45 x
INFO  00:27:47,477 - #33 )
INFO  00:27:47,478 - #13 ;
INFO  00:27:47,478 - #42 read
INFO  00:27:47,478 - #32 (
INFO  00:27:47,478 - #45 x
INFO  00:27:47,478 - #33 )
INFO  00:27:47,478 - #13 ;
INFO  00:27:47,478 - #45 x
INFO  00:27:47,478 - #28 =
INFO  00:27:47,478 - #45 x
INFO  00:27:47,478 - #17 *
INFO  00:27:47,478 - #45 y
INFO  00:27:47,478 - #13 ;
INFO  00:27:47,478 - #41 print
INFO  00:27:47,478 - #32 (
INFO  00:27:47,478 - #45 x
INFO  00:27:47,478 - #33 )
INFO  00:27:47,478 - #13 ;
INFO  00:27:47,478 - #41 print
INFO  00:27:47,478 - #32 (
INFO  00:27:47,478 - #11 false
INFO  00:27:47,479 - #12 ,
INFO  00:27:47,479 - #9 20
INFO  00:27:47,479 - #33 )
INFO  00:27:47,479 - #13 ;
INFO  00:27:47,479 - #8 return
INFO  00:27:47,479 - #9 0
INFO  00:27:47,479 - #13 ;
INFO  00:27:47,479 - #35 }
INFO  00:27:47,479 - #35 }
INFO  00:27:47,481 - ***Abstract tree****
INFO  00:27:47,481 - #0
DEBUG 00:27:47,489 - Variable with name x has the address of 0
DEBUG 00:27:47,489 - Variable with name y has the address of 2
DEBUG 00:27:47,489 - found constant with value 5of type 1
DEBUG 00:27:47,489 - constant factor is type 1
DEBUG 00:27:47,489 - term SingleFactorterm is type 1
DEBUG 00:27:47,489 - exprWithNoMinus is type 1
DEBUG 00:27:47,489 - term SingleFactorterm is type 3
DEBUG 00:27:47,489 - exprWithNoMinus is type 3
DEBUG 00:27:47,489 - found constant with value 0of type 1
DEBUG 00:27:47,489 - constant factor is type 1
DEBUG 00:27:47,489 - term SingleFactorterm is type 1
DEBUG 00:27:47,489 - exprWithNoMinus is type 1
DEBUG 00:27:47,490 - found constant with value 0of type 1
DEBUG 00:27:47,490 - constant factor is type 1
DEBUG 00:27:47,490 - term SingleFactorterm is type 1
DEBUG 00:27:47,490 - exprWithNoMinus is type 1
DEBUG 00:27:47,490 - found constant with value 0of type 1
DEBUG 00:27:47,490 - constant factor is type 1
DEBUG 00:27:47,490 - term SingleFactorterm is type 1
DEBUG 00:27:47,490 - exprWithNoMinus is type 1
DEBUG 00:27:47,490 - term SingleFactorterm is type 1
DEBUG 00:27:47,490 - exprWithNoMinus is type 1
DEBUG 00:27:47,490 - print statement has arg of type 1
DEBUG 00:27:47,490 - found constant with value 1of type 1
DEBUG 00:27:47,490 - constant factor is type 1
DEBUG 00:27:47,490 - term SingleFactorterm is type 1
DEBUG 00:27:47,490 - exprWithNoMinus is type 1
DEBUG 00:27:47,490 - found constant with value 1of type 1
DEBUG 00:27:47,490 - print statement has arg of type 1
DEBUG 00:27:47,490 - found constant with value *****of type 2
DEBUG 00:27:47,490 - found constant with value 97of type 2
DEBUG 00:27:47,490 - constant factor is type 2
DEBUG 00:27:47,490 - term SingleFactorterm is type 2
DEBUG 00:27:47,490 - exprWithNoMinus is type 2
DEBUG 00:27:47,490 - found constant with value 1of type 1
DEBUG 00:27:47,490 - print statement has arg of type 2
DEBUG 00:27:47,490 - found constant with value 5of type 1
DEBUG 00:27:47,490 - constant factor is type 1
DEBUG 00:27:47,490 - term SingleFactorterm is type 1
DEBUG 00:27:47,490 - exprWithNoMinus is type 1
DEBUG 00:27:47,490 - term SingleFactorterm is type 1
DEBUG 00:27:47,490 - found constant with value 3of type 1
DEBUG 00:27:47,490 - constant factor is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - print statement has arg of type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - print statement has arg of type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - print statement has arg of type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - found constant with value 2of type 1
DEBUG 00:27:47,491 - constant factor is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - ExprWithMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - term SingleFactorterm is type 1
DEBUG 00:27:47,491 - exprWithNoMinus is type 1
DEBUG 00:27:47,491 - print statement has arg of type 1
DEBUG 00:27:47,491 - found constant with value 2of type 1
DEBUG 00:27:47,491 - constant factor is type 1
DEBUG 00:27:47,491 - term element is type 1
DEBUG 00:27:47,491 - term list single is type 1
DEBUG 00:27:47,491 - term MultiFactorTerm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - term SingleFactorterm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - print statement has arg of type 1
DEBUG 00:27:47,492 - found constant with value 4of type 1
DEBUG 00:27:47,492 - constant factor is type 1
DEBUG 00:27:47,492 - term element is type 1
DEBUG 00:27:47,492 - term list single is type 1
DEBUG 00:27:47,492 - term MultiFactorTerm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - term SingleFactorterm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - print statement has arg of type 1
DEBUG 00:27:47,492 - found constant with value 3of type 1
DEBUG 00:27:47,492 - constant factor is type 1
DEBUG 00:27:47,492 - term element is type 1
DEBUG 00:27:47,492 - term list single is type 1
DEBUG 00:27:47,492 - term MultiFactorTerm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - term SingleFactorterm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - print statement has arg of type 1
DEBUG 00:27:47,492 - term element is type 1
DEBUG 00:27:47,492 - term list single is type 1
DEBUG 00:27:47,492 - term MultiFactorTerm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - term SingleFactorterm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - print statement has arg of type 1
DEBUG 00:27:47,492 - found constant with value 0of type 1
DEBUG 00:27:47,492 - constant factor is type 1
DEBUG 00:27:47,492 - term SingleFactorterm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
DEBUG 00:27:47,492 - found constant with value 20of type 1
DEBUG 00:27:47,492 - print statement has arg of type 1
DEBUG 00:27:47,492 - found constant with value 0of type 1
DEBUG 00:27:47,492 - constant factor is type 1
DEBUG 00:27:47,492 - term SingleFactorterm is type 1
DEBUG 00:27:47,492 - exprWithNoMinus is type 1
INFO  00:27:47,493 - Print calls = 0
INFO  00:27:47,494 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:27:47,504 - Parsiranje uspesno zavrseno!
INFO  00:28:20,369 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:28:20,398 - #40 program
INFO  00:28:20,398 - #45 MJProgram
INFO  00:28:20,398 - #45 int
INFO  00:28:20,399 - #45 x
INFO  00:28:20,399 - #13 ;
INFO  00:28:20,399 - #45 int
INFO  00:28:20,399 - #45 z
INFO  00:28:20,399 - #36 [
INFO  00:28:20,399 - #37 ]
INFO  00:28:20,399 - #13 ;
INFO  00:28:20,399 - #34 {
INFO  00:28:20,400 - #45 int
INFO  00:28:20,400 - #45 main
INFO  00:28:20,400 - #32 (
INFO  00:28:20,401 - #33 )
INFO  00:28:20,401 - #45 int
INFO  00:28:20,401 - #45 y
INFO  00:28:20,401 - #13 ;
INFO  00:28:20,401 - #34 {
INFO  00:28:20,401 - #45 z
INFO  00:28:20,401 - #28 =
INFO  00:28:20,401 - #31 new
INFO  00:28:20,401 - #45 int
INFO  00:28:20,401 - #36 [
INFO  00:28:20,401 - #9 5
INFO  00:28:20,401 - #37 ]
INFO  00:28:20,403 - #13 ;
INFO  00:28:20,403 - #45 z
INFO  00:28:20,403 - #36 [
INFO  00:28:20,403 - #9 0
INFO  00:28:20,403 - #37 ]
INFO  00:28:20,403 - #28 =
INFO  00:28:20,403 - #9 0
INFO  00:28:20,403 - #13 ;
INFO  00:28:20,403 - #41 print
INFO  00:28:20,404 - #32 (
INFO  00:28:20,404 - #45 z
INFO  00:28:20,404 - #36 [
INFO  00:28:20,404 - #9 0
INFO  00:28:20,404 - #37 ]
INFO  00:28:20,404 - #33 )
INFO  00:28:20,404 - #13 ;
INFO  00:28:20,404 - #41 print
INFO  00:28:20,404 - #32 (
INFO  00:28:20,404 - #9 1
INFO  00:28:20,404 - #12 ,
INFO  00:28:20,404 - #9 1
INFO  00:28:20,405 - #33 )
INFO  00:28:20,405 - #13 ;
INFO  00:28:20,405 - #41 print
INFO  00:28:20,405 - #32 (
INFO  00:28:20,405 - #10 a
INFO  00:28:20,405 - #12 ,
INFO  00:28:20,405 - #9 1
INFO  00:28:20,405 - #33 )
INFO  00:28:20,405 - #13 ;
INFO  00:28:20,405 - #45 y
INFO  00:28:20,405 - #28 =
INFO  00:28:20,405 - #9 5
INFO  00:28:20,405 - #13 ;
INFO  00:28:20,405 - #45 x
INFO  00:28:20,405 - #28 =
INFO  00:28:20,405 - #45 y
INFO  00:28:20,405 - #15 +
INFO  00:28:20,405 - #9 3
INFO  00:28:20,406 - #13 ;
INFO  00:28:20,406 - #41 print
INFO  00:28:20,406 - #32 (
INFO  00:28:20,406 - #45 x
INFO  00:28:20,407 - #33 )
INFO  00:28:20,407 - #13 ;
INFO  00:28:20,407 - #45 y
INFO  00:28:20,407 - #28 =
INFO  00:28:20,407 - #32 (
INFO  00:28:20,407 - #45 x
INFO  00:28:20,407 - #33 )
INFO  00:28:20,407 - #13 ;
INFO  00:28:20,407 - #45 x
INFO  00:28:20,407 - #29 ++
INFO  00:28:20,407 - #13 ;
INFO  00:28:20,407 - #41 print
INFO  00:28:20,407 - #32 (
INFO  00:28:20,407 - #45 x
INFO  00:28:20,407 - #33 )
INFO  00:28:20,407 - #13 ;
INFO  00:28:20,407 - #45 x
INFO  00:28:20,407 - #30 --
INFO  00:28:20,407 - #13 ;
INFO  00:28:20,407 - #41 print
INFO  00:28:20,408 - #32 (
INFO  00:28:20,408 - #32 (
INFO  00:28:20,408 - #32 (
INFO  00:28:20,408 - #45 x
INFO  00:28:20,408 - #33 )
INFO  00:28:20,408 - #33 )
INFO  00:28:20,408 - #33 )
INFO  00:28:20,408 - #13 ;
INFO  00:28:20,408 - #45 x
INFO  00:28:20,408 - #28 =
INFO  00:28:20,408 - #45 x
INFO  00:28:20,408 - #15 +
INFO  00:28:20,408 - #32 (
INFO  00:28:20,408 - #16 -
INFO  00:28:20,408 - #9 2
INFO  00:28:20,408 - #33 )
INFO  00:28:20,408 - #13 ;
INFO  00:28:20,408 - #41 print
INFO  00:28:20,408 - #32 (
INFO  00:28:20,408 - #45 x
INFO  00:28:20,408 - #33 )
INFO  00:28:20,409 - #13 ;
INFO  00:28:20,409 - #45 x
INFO  00:28:20,409 - #28 =
INFO  00:28:20,409 - #45 y
INFO  00:28:20,409 - #17 *
INFO  00:28:20,409 - #9 2
INFO  00:28:20,409 - #13 ;
INFO  00:28:20,410 - #41 print
INFO  00:28:20,410 - #32 (
INFO  00:28:20,410 - #45 x
INFO  00:28:20,410 - #33 )
INFO  00:28:20,410 - #13 ;
INFO  00:28:20,410 - #45 y
INFO  00:28:20,410 - #28 =
INFO  00:28:20,410 - #45 x
INFO  00:28:20,410 - #18 /
INFO  00:28:20,410 - #9 4
INFO  00:28:20,411 - #13 ;
INFO  00:28:20,411 - #41 print
INFO  00:28:20,411 - #32 (
INFO  00:28:20,411 - #45 y
INFO  00:28:20,411 - #33 )
INFO  00:28:20,411 - #13 ;
INFO  00:28:20,411 - #45 x
INFO  00:28:20,411 - #28 =
INFO  00:28:20,411 - #45 y
INFO  00:28:20,411 - #19 %
INFO  00:28:20,411 - #9 3
INFO  00:28:20,411 - #13 ;
INFO  00:28:20,411 - #41 print
INFO  00:28:20,411 - #32 (
INFO  00:28:20,411 - #45 x
INFO  00:28:20,411 - #33 )
INFO  00:28:20,411 - #13 ;
INFO  00:28:20,412 - #42 read
INFO  00:28:20,412 - #32 (
INFO  00:28:20,412 - #45 x
INFO  00:28:20,412 - #33 )
INFO  00:28:20,412 - #13 ;
INFO  00:28:20,412 - #45 x
INFO  00:28:20,412 - #28 =
INFO  00:28:20,412 - #45 x
INFO  00:28:20,412 - #17 *
INFO  00:28:20,412 - #45 y
INFO  00:28:20,412 - #13 ;
INFO  00:28:20,412 - #41 print
INFO  00:28:20,412 - #32 (
INFO  00:28:20,412 - #45 x
INFO  00:28:20,412 - #33 )
INFO  00:28:20,412 - #13 ;
INFO  00:28:20,413 - #41 print
INFO  00:28:20,413 - #32 (
INFO  00:28:20,413 - #11 false
INFO  00:28:20,413 - #12 ,
INFO  00:28:20,413 - #9 20
INFO  00:28:20,413 - #33 )
INFO  00:28:20,413 - #13 ;
INFO  00:28:20,413 - #8 return
INFO  00:28:20,413 - #9 0
INFO  00:28:20,413 - #13 ;
INFO  00:28:20,413 - #35 }
INFO  00:28:20,413 - #35 }
INFO  00:28:20,415 - ***Abstract tree****
INFO  00:28:20,415 - #0
DEBUG 00:28:20,423 - Variable with name x has the address of 0
DEBUG 00:28:20,423 - Variable with name y has the address of 2
DEBUG 00:28:20,423 - found constant with value 5of type 1
DEBUG 00:28:20,423 - constant factor is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 1
DEBUG 00:28:20,424 - exprWithNoMinus is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 3
DEBUG 00:28:20,424 - exprWithNoMinus is type 3
DEBUG 00:28:20,424 - found constant with value 0of type 1
DEBUG 00:28:20,424 - constant factor is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 1
DEBUG 00:28:20,424 - exprWithNoMinus is type 1
DEBUG 00:28:20,424 - found constant with value 0of type 1
DEBUG 00:28:20,424 - constant factor is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 1
DEBUG 00:28:20,424 - exprWithNoMinus is type 1
DEBUG 00:28:20,424 - found constant with value 0of type 1
DEBUG 00:28:20,424 - constant factor is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 1
DEBUG 00:28:20,424 - exprWithNoMinus is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 1
DEBUG 00:28:20,424 - exprWithNoMinus is type 1
DEBUG 00:28:20,424 - print statement has arg of type 1
DEBUG 00:28:20,424 - found constant with value 1of type 1
DEBUG 00:28:20,424 - constant factor is type 1
DEBUG 00:28:20,424 - term SingleFactorterm is type 1
DEBUG 00:28:20,424 - exprWithNoMinus is type 1
DEBUG 00:28:20,424 - found constant with value 1of type 1
DEBUG 00:28:20,424 - print statement has arg of type 1
DEBUG 00:28:20,424 - found constant with value *****of type 2
DEBUG 00:28:20,424 - found constant with value 97of type 2
DEBUG 00:28:20,424 - constant factor is type 2
DEBUG 00:28:20,425 - term SingleFactorterm is type 2
DEBUG 00:28:20,425 - exprWithNoMinus is type 2
DEBUG 00:28:20,425 - found constant with value 1of type 1
DEBUG 00:28:20,425 - print statement has arg of type 2
DEBUG 00:28:20,425 - found constant with value 5of type 1
DEBUG 00:28:20,425 - constant factor is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - found constant with value 3of type 1
DEBUG 00:28:20,425 - constant factor is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - print statement has arg of type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - print statement has arg of type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - exprWithNoMinus is type 1
DEBUG 00:28:20,425 - print statement has arg of type 1
DEBUG 00:28:20,425 - term SingleFactorterm is type 1
DEBUG 00:28:20,425 - found constant with value 2of type 1
DEBUG 00:28:20,425 - constant factor is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,426 - ExprWithMinus is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - print statement has arg of type 1
DEBUG 00:28:20,426 - found constant with value 2of type 1
DEBUG 00:28:20,426 - constant factor is type 1
DEBUG 00:28:20,426 - term element is type 1
DEBUG 00:28:20,426 - term list single is type 1
DEBUG 00:28:20,426 - term MultiFactorTerm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - print statement has arg of type 1
DEBUG 00:28:20,426 - found constant with value 4of type 1
DEBUG 00:28:20,426 - constant factor is type 1
DEBUG 00:28:20,426 - term element is type 1
DEBUG 00:28:20,426 - term list single is type 1
DEBUG 00:28:20,426 - term MultiFactorTerm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - print statement has arg of type 1
DEBUG 00:28:20,426 - found constant with value 3of type 1
DEBUG 00:28:20,426 - constant factor is type 1
DEBUG 00:28:20,426 - term element is type 1
DEBUG 00:28:20,426 - term list single is type 1
DEBUG 00:28:20,426 - term MultiFactorTerm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - print statement has arg of type 1
DEBUG 00:28:20,426 - term element is type 1
DEBUG 00:28:20,426 - term list single is type 1
DEBUG 00:28:20,426 - term MultiFactorTerm is type 1
DEBUG 00:28:20,426 - exprWithNoMinus is type 1
DEBUG 00:28:20,426 - term SingleFactorterm is type 1
DEBUG 00:28:20,427 - exprWithNoMinus is type 1
DEBUG 00:28:20,427 - print statement has arg of type 1
DEBUG 00:28:20,427 - found constant with value 0of type 1
DEBUG 00:28:20,427 - constant factor is type 1
DEBUG 00:28:20,427 - term SingleFactorterm is type 1
DEBUG 00:28:20,427 - exprWithNoMinus is type 1
DEBUG 00:28:20,427 - found constant with value 20of type 1
DEBUG 00:28:20,427 - print statement has arg of type 1
DEBUG 00:28:20,427 - found constant with value 0of type 1
DEBUG 00:28:20,427 - constant factor is type 1
DEBUG 00:28:20,427 - term SingleFactorterm is type 1
DEBUG 00:28:20,427 - exprWithNoMinus is type 1
INFO  00:28:20,427 - Print calls = 0
INFO  00:28:20,429 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:28:20,438 - Parsiranje uspesno zavrseno!
INFO  00:28:28,764 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:28:28,793 - #40 program
INFO  00:28:28,793 - #45 MJProgram
INFO  00:28:28,793 - #45 int
INFO  00:28:28,793 - #45 x
INFO  00:28:28,793 - #13 ;
INFO  00:28:28,793 - #45 int
INFO  00:28:28,794 - #45 z
INFO  00:28:28,794 - #36 [
INFO  00:28:28,794 - #37 ]
INFO  00:28:28,794 - #13 ;
INFO  00:28:28,794 - #34 {
INFO  00:28:28,794 - #45 int
INFO  00:28:28,795 - #45 main
INFO  00:28:28,795 - #32 (
INFO  00:28:28,795 - #33 )
INFO  00:28:28,795 - #45 int
INFO  00:28:28,795 - #45 y
INFO  00:28:28,795 - #13 ;
INFO  00:28:28,795 - #34 {
INFO  00:28:28,795 - #45 z
INFO  00:28:28,795 - #28 =
INFO  00:28:28,796 - #31 new
INFO  00:28:28,796 - #45 int
INFO  00:28:28,796 - #36 [
INFO  00:28:28,796 - #9 5
INFO  00:28:28,796 - #37 ]
INFO  00:28:28,797 - #13 ;
INFO  00:28:28,797 - #45 z
INFO  00:28:28,797 - #36 [
INFO  00:28:28,797 - #9 0
INFO  00:28:28,798 - #37 ]
INFO  00:28:28,798 - #28 =
INFO  00:28:28,798 - #9 0
INFO  00:28:28,798 - #13 ;
INFO  00:28:28,798 - #41 print
INFO  00:28:28,798 - #32 (
INFO  00:28:28,798 - #45 z
INFO  00:28:28,798 - #36 [
INFO  00:28:28,798 - #9 0
INFO  00:28:28,798 - #37 ]
INFO  00:28:28,798 - #33 )
INFO  00:28:28,798 - #13 ;
INFO  00:28:28,798 - #41 print
INFO  00:28:28,799 - #32 (
INFO  00:28:28,799 - #9 1
INFO  00:28:28,799 - #12 ,
INFO  00:28:28,799 - #9 1
INFO  00:28:28,799 - #33 )
INFO  00:28:28,799 - #13 ;
INFO  00:28:28,799 - #41 print
INFO  00:28:28,799 - #32 (
INFO  00:28:28,799 - #10 a
INFO  00:28:28,799 - #12 ,
INFO  00:28:28,799 - #9 1
INFO  00:28:28,799 - #33 )
INFO  00:28:28,799 - #13 ;
INFO  00:28:28,799 - #45 y
INFO  00:28:28,799 - #28 =
INFO  00:28:28,799 - #9 5
INFO  00:28:28,799 - #13 ;
INFO  00:28:28,799 - #45 x
INFO  00:28:28,800 - #28 =
INFO  00:28:28,800 - #45 y
INFO  00:28:28,800 - #15 +
INFO  00:28:28,800 - #9 3
INFO  00:28:28,800 - #13 ;
INFO  00:28:28,801 - #41 print
INFO  00:28:28,801 - #32 (
INFO  00:28:28,801 - #45 x
INFO  00:28:28,801 - #33 )
INFO  00:28:28,801 - #13 ;
INFO  00:28:28,801 - #45 y
INFO  00:28:28,801 - #28 =
INFO  00:28:28,801 - #32 (
INFO  00:28:28,801 - #45 x
INFO  00:28:28,801 - #33 )
INFO  00:28:28,801 - #13 ;
INFO  00:28:28,802 - #45 x
INFO  00:28:28,802 - #29 ++
INFO  00:28:28,802 - #13 ;
INFO  00:28:28,802 - #41 print
INFO  00:28:28,802 - #32 (
INFO  00:28:28,802 - #45 x
INFO  00:28:28,802 - #33 )
INFO  00:28:28,802 - #13 ;
INFO  00:28:28,802 - #45 x
INFO  00:28:28,802 - #30 --
INFO  00:28:28,802 - #13 ;
INFO  00:28:28,802 - #41 print
INFO  00:28:28,802 - #32 (
INFO  00:28:28,802 - #32 (
INFO  00:28:28,802 - #32 (
INFO  00:28:28,802 - #45 x
INFO  00:28:28,802 - #33 )
INFO  00:28:28,803 - #33 )
INFO  00:28:28,803 - #33 )
INFO  00:28:28,803 - #13 ;
INFO  00:28:28,803 - #45 x
INFO  00:28:28,803 - #28 =
INFO  00:28:28,803 - #45 x
INFO  00:28:28,803 - #15 +
INFO  00:28:28,803 - #32 (
INFO  00:28:28,803 - #16 -
INFO  00:28:28,803 - #9 2
INFO  00:28:28,803 - #33 )
INFO  00:28:28,803 - #13 ;
INFO  00:28:28,803 - #41 print
INFO  00:28:28,803 - #32 (
INFO  00:28:28,803 - #45 x
INFO  00:28:28,803 - #33 )
INFO  00:28:28,803 - #13 ;
INFO  00:28:28,803 - #45 x
INFO  00:28:28,803 - #28 =
INFO  00:28:28,803 - #45 y
INFO  00:28:28,803 - #17 *
INFO  00:28:28,803 - #9 2
INFO  00:28:28,804 - #13 ;
INFO  00:28:28,805 - #41 print
INFO  00:28:28,805 - #32 (
INFO  00:28:28,805 - #45 x
INFO  00:28:28,805 - #33 )
INFO  00:28:28,805 - #13 ;
INFO  00:28:28,805 - #45 y
INFO  00:28:28,805 - #28 =
INFO  00:28:28,805 - #45 x
INFO  00:28:28,805 - #18 /
INFO  00:28:28,805 - #9 4
INFO  00:28:28,805 - #13 ;
INFO  00:28:28,805 - #41 print
INFO  00:28:28,805 - #32 (
INFO  00:28:28,805 - #45 y
INFO  00:28:28,805 - #33 )
INFO  00:28:28,805 - #13 ;
INFO  00:28:28,805 - #45 x
INFO  00:28:28,806 - #28 =
INFO  00:28:28,806 - #45 y
INFO  00:28:28,806 - #19 %
INFO  00:28:28,806 - #9 3
INFO  00:28:28,806 - #13 ;
INFO  00:28:28,806 - #41 print
INFO  00:28:28,806 - #32 (
INFO  00:28:28,806 - #45 x
INFO  00:28:28,806 - #33 )
INFO  00:28:28,806 - #13 ;
INFO  00:28:28,806 - #42 read
INFO  00:28:28,806 - #32 (
INFO  00:28:28,806 - #45 x
INFO  00:28:28,806 - #33 )
INFO  00:28:28,806 - #13 ;
INFO  00:28:28,806 - #45 x
INFO  00:28:28,807 - #28 =
INFO  00:28:28,807 - #45 x
INFO  00:28:28,807 - #17 *
INFO  00:28:28,807 - #45 y
INFO  00:28:28,807 - #13 ;
INFO  00:28:28,807 - #41 print
INFO  00:28:28,807 - #32 (
INFO  00:28:28,807 - #45 x
INFO  00:28:28,807 - #33 )
INFO  00:28:28,807 - #13 ;
INFO  00:28:28,807 - #41 print
INFO  00:28:28,807 - #32 (
INFO  00:28:28,807 - #11 false
INFO  00:28:28,807 - #12 ,
INFO  00:28:28,807 - #9 20
INFO  00:28:28,807 - #33 )
INFO  00:28:28,807 - #13 ;
INFO  00:28:28,807 - #8 return
INFO  00:28:28,807 - #9 0
INFO  00:28:28,807 - #13 ;
INFO  00:28:28,807 - #35 }
INFO  00:28:28,807 - #35 }
INFO  00:28:28,809 - ***Abstract tree****
INFO  00:28:28,809 - #0
DEBUG 00:28:28,819 - Variable with name x has the address of 0
DEBUG 00:28:28,819 - Variable with name y has the address of 2
DEBUG 00:28:28,819 - found constant with value 5of type 1
DEBUG 00:28:28,819 - constant factor is type 1
DEBUG 00:28:28,819 - term SingleFactorterm is type 1
DEBUG 00:28:28,819 - exprWithNoMinus is type 1
DEBUG 00:28:28,819 - term SingleFactorterm is type 3
DEBUG 00:28:28,819 - exprWithNoMinus is type 3
DEBUG 00:28:28,819 - found constant with value 0of type 1
DEBUG 00:28:28,819 - constant factor is type 1
DEBUG 00:28:28,819 - term SingleFactorterm is type 1
DEBUG 00:28:28,819 - exprWithNoMinus is type 1
DEBUG 00:28:28,819 - found constant with value 0of type 1
DEBUG 00:28:28,820 - constant factor is type 1
DEBUG 00:28:28,820 - term SingleFactorterm is type 1
DEBUG 00:28:28,820 - exprWithNoMinus is type 1
DEBUG 00:28:28,820 - found constant with value 0of type 1
DEBUG 00:28:28,820 - constant factor is type 1
DEBUG 00:28:28,820 - term SingleFactorterm is type 1
DEBUG 00:28:28,820 - exprWithNoMinus is type 1
DEBUG 00:28:28,820 - term SingleFactorterm is type 1
DEBUG 00:28:28,820 - exprWithNoMinus is type 1
DEBUG 00:28:28,820 - print statement has arg of type 1
DEBUG 00:28:28,820 - found constant with value 1of type 1
DEBUG 00:28:28,820 - constant factor is type 1
DEBUG 00:28:28,820 - term SingleFactorterm is type 1
DEBUG 00:28:28,820 - exprWithNoMinus is type 1
DEBUG 00:28:28,820 - found constant with value 1of type 1
DEBUG 00:28:28,820 - print statement has arg of type 1
DEBUG 00:28:28,820 - found constant with value *****of type 2
DEBUG 00:28:28,820 - found constant with value 97of type 2
DEBUG 00:28:28,820 - constant factor is type 2
DEBUG 00:28:28,820 - term SingleFactorterm is type 2
DEBUG 00:28:28,820 - exprWithNoMinus is type 2
DEBUG 00:28:28,820 - found constant with value 1of type 1
DEBUG 00:28:28,820 - print statement has arg of type 2
DEBUG 00:28:28,820 - found constant with value 5of type 1
DEBUG 00:28:28,820 - constant factor is type 1
DEBUG 00:28:28,820 - term SingleFactorterm is type 1
DEBUG 00:28:28,820 - exprWithNoMinus is type 1
DEBUG 00:28:28,820 - term SingleFactorterm is type 1
DEBUG 00:28:28,820 - found constant with value 3of type 1
DEBUG 00:28:28,821 - constant factor is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - print statement has arg of type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - print statement has arg of type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - print statement has arg of type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - found constant with value 2of type 1
DEBUG 00:28:28,821 - constant factor is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - ExprWithMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - term SingleFactorterm is type 1
DEBUG 00:28:28,821 - exprWithNoMinus is type 1
DEBUG 00:28:28,821 - print statement has arg of type 1
DEBUG 00:28:28,822 - found constant with value 2of type 1
DEBUG 00:28:28,822 - constant factor is type 1
DEBUG 00:28:28,822 - term element is type 1
DEBUG 00:28:28,822 - term list single is type 1
DEBUG 00:28:28,822 - term MultiFactorTerm is type 1
DEBUG 00:28:28,822 - exprWithNoMinus is type 1
DEBUG 00:28:28,822 - term SingleFactorterm is type 1
DEBUG 00:28:28,822 - exprWithNoMinus is type 1
DEBUG 00:28:28,822 - print statement has arg of type 1
DEBUG 00:28:28,822 - found constant with value 4of type 1
DEBUG 00:28:28,822 - constant factor is type 1
DEBUG 00:28:28,822 - term element is type 1
DEBUG 00:28:28,822 - term list single is type 1
DEBUG 00:28:28,822 - term MultiFactorTerm is type 1
DEBUG 00:28:28,822 - exprWithNoMinus is type 1
DEBUG 00:28:28,822 - term SingleFactorterm is type 1
DEBUG 00:28:28,822 - exprWithNoMinus is type 1
DEBUG 00:28:28,822 - print statement has arg of type 1
DEBUG 00:28:28,822 - found constant with value 3of type 1
DEBUG 00:28:28,822 - constant factor is type 1
DEBUG 00:28:28,822 - term element is type 1
DEBUG 00:28:28,822 - term list single is type 1
DEBUG 00:28:28,822 - term MultiFactorTerm is type 1
DEBUG 00:28:28,822 - exprWithNoMinus is type 1
DEBUG 00:28:28,822 - term SingleFactorterm is type 1
DEBUG 00:28:28,822 - exprWithNoMinus is type 1
DEBUG 00:28:28,822 - print statement has arg of type 1
DEBUG 00:28:28,822 - term element is type 1
DEBUG 00:28:28,822 - term list single is type 1
DEBUG 00:28:28,822 - term MultiFactorTerm is type 1
DEBUG 00:28:28,823 - exprWithNoMinus is type 1
DEBUG 00:28:28,823 - term SingleFactorterm is type 1
DEBUG 00:28:28,823 - exprWithNoMinus is type 1
DEBUG 00:28:28,823 - print statement has arg of type 1
DEBUG 00:28:28,823 - found constant with value 0of type 1
DEBUG 00:28:28,823 - constant factor is type 1
DEBUG 00:28:28,823 - term SingleFactorterm is type 1
DEBUG 00:28:28,823 - exprWithNoMinus is type 1
DEBUG 00:28:28,823 - found constant with value 20of type 1
DEBUG 00:28:28,823 - print statement has arg of type 1
DEBUG 00:28:28,823 - found constant with value 0of type 1
DEBUG 00:28:28,823 - constant factor is type 1
DEBUG 00:28:28,823 - term SingleFactorterm is type 1
DEBUG 00:28:28,823 - exprWithNoMinus is type 1
INFO  00:28:28,823 - Print calls = 0
INFO  00:28:28,825 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:28:28,832 - Parsiranje uspesno zavrseno!
INFO  00:31:23,086 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:31:23,115 - #40 program
INFO  00:31:23,115 - #45 MJProgram
INFO  00:31:23,115 - #45 int
INFO  00:31:23,115 - #45 x
INFO  00:31:23,115 - #13 ;
INFO  00:31:23,116 - #45 int
INFO  00:31:23,116 - #45 z
INFO  00:31:23,116 - #36 [
INFO  00:31:23,116 - #37 ]
INFO  00:31:23,116 - #13 ;
INFO  00:31:23,116 - #34 {
INFO  00:31:23,116 - #45 int
INFO  00:31:23,117 - #45 main
INFO  00:31:23,117 - #32 (
INFO  00:31:23,118 - #33 )
INFO  00:31:23,118 - #45 int
INFO  00:31:23,118 - #45 y
INFO  00:31:23,118 - #13 ;
INFO  00:31:23,118 - #34 {
INFO  00:31:23,118 - #45 z
INFO  00:31:23,118 - #28 =
INFO  00:31:23,118 - #31 new
INFO  00:31:23,118 - #45 int
INFO  00:31:23,118 - #36 [
INFO  00:31:23,118 - #9 5
INFO  00:31:23,119 - #37 ]
INFO  00:31:23,120 - #13 ;
INFO  00:31:23,120 - #45 z
INFO  00:31:23,120 - #36 [
INFO  00:31:23,120 - #9 0
INFO  00:31:23,120 - #37 ]
INFO  00:31:23,121 - #28 =
INFO  00:31:23,121 - #9 0
INFO  00:31:23,121 - #13 ;
INFO  00:31:23,121 - #41 print
INFO  00:31:23,121 - #32 (
INFO  00:31:23,121 - #45 z
INFO  00:31:23,121 - #36 [
INFO  00:31:23,121 - #9 0
INFO  00:31:23,121 - #37 ]
INFO  00:31:23,121 - #33 )
INFO  00:31:23,121 - #13 ;
INFO  00:31:23,121 - #41 print
INFO  00:31:23,122 - #32 (
INFO  00:31:23,122 - #9 1
INFO  00:31:23,122 - #12 ,
INFO  00:31:23,122 - #9 1
INFO  00:31:23,122 - #33 )
INFO  00:31:23,122 - #13 ;
INFO  00:31:23,122 - #41 print
INFO  00:31:23,122 - #32 (
INFO  00:31:23,122 - #10 a
INFO  00:31:23,122 - #12 ,
INFO  00:31:23,122 - #9 1
INFO  00:31:23,122 - #33 )
INFO  00:31:23,122 - #13 ;
INFO  00:31:23,122 - #45 y
INFO  00:31:23,122 - #28 =
INFO  00:31:23,123 - #9 5
INFO  00:31:23,123 - #13 ;
INFO  00:31:23,123 - #45 x
INFO  00:31:23,123 - #28 =
INFO  00:31:23,123 - #45 y
INFO  00:31:23,123 - #15 +
INFO  00:31:23,123 - #9 3
INFO  00:31:23,123 - #13 ;
INFO  00:31:23,124 - #41 print
INFO  00:31:23,124 - #32 (
INFO  00:31:23,124 - #45 x
INFO  00:31:23,124 - #33 )
INFO  00:31:23,124 - #13 ;
INFO  00:31:23,124 - #45 y
INFO  00:31:23,124 - #28 =
INFO  00:31:23,124 - #32 (
INFO  00:31:23,124 - #45 x
INFO  00:31:23,124 - #33 )
INFO  00:31:23,124 - #13 ;
INFO  00:31:23,124 - #45 x
INFO  00:31:23,124 - #29 ++
INFO  00:31:23,125 - #13 ;
INFO  00:31:23,125 - #41 print
INFO  00:31:23,125 - #32 (
INFO  00:31:23,125 - #45 x
INFO  00:31:23,125 - #33 )
INFO  00:31:23,125 - #13 ;
INFO  00:31:23,125 - #45 x
INFO  00:31:23,125 - #30 --
INFO  00:31:23,125 - #13 ;
INFO  00:31:23,125 - #41 print
INFO  00:31:23,125 - #32 (
INFO  00:31:23,125 - #32 (
INFO  00:31:23,125 - #32 (
INFO  00:31:23,125 - #45 x
INFO  00:31:23,125 - #33 )
INFO  00:31:23,125 - #33 )
INFO  00:31:23,125 - #33 )
INFO  00:31:23,125 - #13 ;
INFO  00:31:23,125 - #45 x
INFO  00:31:23,126 - #28 =
INFO  00:31:23,126 - #45 x
INFO  00:31:23,126 - #15 +
INFO  00:31:23,126 - #32 (
INFO  00:31:23,126 - #16 -
INFO  00:31:23,126 - #9 2
INFO  00:31:23,126 - #33 )
INFO  00:31:23,126 - #13 ;
INFO  00:31:23,126 - #41 print
INFO  00:31:23,126 - #32 (
INFO  00:31:23,126 - #45 x
INFO  00:31:23,126 - #33 )
INFO  00:31:23,126 - #13 ;
INFO  00:31:23,126 - #45 x
INFO  00:31:23,126 - #28 =
INFO  00:31:23,126 - #45 y
INFO  00:31:23,126 - #17 *
INFO  00:31:23,126 - #9 2
INFO  00:31:23,127 - #13 ;
INFO  00:31:23,128 - #41 print
INFO  00:31:23,128 - #32 (
INFO  00:31:23,128 - #45 x
INFO  00:31:23,128 - #33 )
INFO  00:31:23,128 - #13 ;
INFO  00:31:23,128 - #45 y
INFO  00:31:23,128 - #28 =
INFO  00:31:23,128 - #45 x
INFO  00:31:23,128 - #18 /
INFO  00:31:23,128 - #9 4
INFO  00:31:23,128 - #13 ;
INFO  00:31:23,128 - #41 print
INFO  00:31:23,128 - #32 (
INFO  00:31:23,128 - #45 y
INFO  00:31:23,128 - #33 )
INFO  00:31:23,128 - #13 ;
INFO  00:31:23,128 - #45 x
INFO  00:31:23,128 - #28 =
INFO  00:31:23,128 - #45 y
INFO  00:31:23,128 - #19 %
INFO  00:31:23,128 - #9 3
INFO  00:31:23,128 - #13 ;
INFO  00:31:23,128 - #41 print
INFO  00:31:23,128 - #32 (
INFO  00:31:23,128 - #45 x
INFO  00:31:23,128 - #33 )
INFO  00:31:23,128 - #13 ;
INFO  00:31:23,128 - #42 read
INFO  00:31:23,128 - #32 (
INFO  00:31:23,129 - #45 x
INFO  00:31:23,129 - #33 )
INFO  00:31:23,129 - #13 ;
INFO  00:31:23,129 - #45 x
INFO  00:31:23,129 - #28 =
INFO  00:31:23,129 - #45 x
INFO  00:31:23,129 - #17 *
INFO  00:31:23,129 - #45 y
INFO  00:31:23,129 - #13 ;
INFO  00:31:23,129 - #41 print
INFO  00:31:23,129 - #32 (
INFO  00:31:23,129 - #45 x
INFO  00:31:23,129 - #33 )
INFO  00:31:23,129 - #13 ;
INFO  00:31:23,129 - #41 print
INFO  00:31:23,129 - #32 (
INFO  00:31:23,129 - #11 false
INFO  00:31:23,129 - #12 ,
INFO  00:31:23,129 - #9 20
INFO  00:31:23,129 - #33 )
INFO  00:31:23,129 - #13 ;
INFO  00:31:23,129 - #8 return
INFO  00:31:23,129 - #9 0
INFO  00:31:23,129 - #13 ;
INFO  00:31:23,130 - #35 }
INFO  00:31:23,130 - #35 }
INFO  00:31:23,131 - ***Abstract tree****
INFO  00:31:23,132 - #0
DEBUG 00:31:23,140 - Variable with name x has the address of 0
DEBUG 00:31:23,140 - Variable with name y has the address of 2
DEBUG 00:31:23,140 - found constant with value 5of type 1
DEBUG 00:31:23,140 - constant factor is type 1
DEBUG 00:31:23,140 - term SingleFactorterm is type 1
DEBUG 00:31:23,140 - exprWithNoMinus is type 1
DEBUG 00:31:23,140 - term SingleFactorterm is type 3
DEBUG 00:31:23,140 - exprWithNoMinus is type 3
DEBUG 00:31:23,140 - found constant with value 0of type 1
DEBUG 00:31:23,140 - constant factor is type 1
DEBUG 00:31:23,140 - term SingleFactorterm is type 1
DEBUG 00:31:23,140 - exprWithNoMinus is type 1
DEBUG 00:31:23,140 - found constant with value 0of type 1
DEBUG 00:31:23,140 - constant factor is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - found constant with value 0of type 1
DEBUG 00:31:23,141 - constant factor is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - print statement has arg of type 1
DEBUG 00:31:23,141 - found constant with value 1of type 1
DEBUG 00:31:23,141 - constant factor is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - found constant with value 1of type 1
DEBUG 00:31:23,141 - print statement has arg of type 1
DEBUG 00:31:23,141 - found constant with value *****of type 2
DEBUG 00:31:23,141 - found constant with value 97of type 2
DEBUG 00:31:23,141 - constant factor is type 2
DEBUG 00:31:23,141 - term SingleFactorterm is type 2
DEBUG 00:31:23,141 - exprWithNoMinus is type 2
DEBUG 00:31:23,141 - found constant with value 1of type 1
DEBUG 00:31:23,141 - print statement has arg of type 2
DEBUG 00:31:23,141 - found constant with value 5of type 1
DEBUG 00:31:23,141 - constant factor is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - found constant with value 3of type 1
DEBUG 00:31:23,141 - constant factor is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,141 - exprWithNoMinus is type 1
DEBUG 00:31:23,141 - print statement has arg of type 1
DEBUG 00:31:23,141 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - print statement has arg of type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - print statement has arg of type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - found constant with value 2of type 1
DEBUG 00:31:23,142 - constant factor is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - ExprWithMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - print statement has arg of type 1
DEBUG 00:31:23,142 - found constant with value 2of type 1
DEBUG 00:31:23,142 - constant factor is type 1
DEBUG 00:31:23,142 - term element is type 1
DEBUG 00:31:23,142 - term list single is type 1
DEBUG 00:31:23,142 - term MultiFactorTerm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,142 - term SingleFactorterm is type 1
DEBUG 00:31:23,142 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - print statement has arg of type 1
DEBUG 00:31:23,143 - found constant with value 4of type 1
DEBUG 00:31:23,143 - constant factor is type 1
DEBUG 00:31:23,143 - term element is type 1
DEBUG 00:31:23,143 - term list single is type 1
DEBUG 00:31:23,143 - term MultiFactorTerm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - term SingleFactorterm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - print statement has arg of type 1
DEBUG 00:31:23,143 - found constant with value 3of type 1
DEBUG 00:31:23,143 - constant factor is type 1
DEBUG 00:31:23,143 - term element is type 1
DEBUG 00:31:23,143 - term list single is type 1
DEBUG 00:31:23,143 - term MultiFactorTerm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - term SingleFactorterm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - print statement has arg of type 1
DEBUG 00:31:23,143 - term element is type 1
DEBUG 00:31:23,143 - term list single is type 1
DEBUG 00:31:23,143 - term MultiFactorTerm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - term SingleFactorterm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - print statement has arg of type 1
DEBUG 00:31:23,143 - found constant with value 0of type 1
DEBUG 00:31:23,143 - constant factor is type 1
DEBUG 00:31:23,143 - term SingleFactorterm is type 1
DEBUG 00:31:23,143 - exprWithNoMinus is type 1
DEBUG 00:31:23,143 - found constant with value 20of type 1
DEBUG 00:31:23,143 - print statement has arg of type 1
DEBUG 00:31:23,144 - found constant with value 0of type 1
DEBUG 00:31:23,144 - constant factor is type 1
DEBUG 00:31:23,144 - term SingleFactorterm is type 1
DEBUG 00:31:23,144 - exprWithNoMinus is type 1
INFO  00:31:23,144 - Print calls = 0
INFO  00:31:23,145 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:31:23,155 - Parsiranje uspesno zavrseno!
INFO  00:32:12,360 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:32:12,390 - #40 program
INFO  00:32:12,390 - #45 MJProgram
INFO  00:32:12,390 - #45 int
INFO  00:32:12,390 - #45 x
INFO  00:32:12,390 - #13 ;
INFO  00:32:12,391 - #45 int
INFO  00:32:12,391 - #45 z
INFO  00:32:12,391 - #36 [
INFO  00:32:12,391 - #37 ]
INFO  00:32:12,391 - #13 ;
INFO  00:32:12,391 - #34 {
INFO  00:32:12,391 - #45 int
INFO  00:32:12,392 - #45 main
INFO  00:32:12,392 - #32 (
INFO  00:32:12,392 - #33 )
INFO  00:32:12,392 - #45 int
INFO  00:32:12,392 - #45 y
INFO  00:32:12,392 - #13 ;
INFO  00:32:12,393 - #34 {
INFO  00:32:12,393 - #45 z
INFO  00:32:12,393 - #28 =
INFO  00:32:12,393 - #31 new
INFO  00:32:12,393 - #45 int
INFO  00:32:12,393 - #36 [
INFO  00:32:12,393 - #9 5
INFO  00:32:12,393 - #37 ]
INFO  00:32:12,394 - #13 ;
INFO  00:32:12,394 - #45 z
INFO  00:32:12,394 - #36 [
INFO  00:32:12,394 - #9 0
INFO  00:32:12,394 - #37 ]
INFO  00:32:12,394 - #28 =
INFO  00:32:12,395 - #9 0
INFO  00:32:12,395 - #13 ;
INFO  00:32:12,395 - #41 print
INFO  00:32:12,395 - #32 (
INFO  00:32:12,395 - #45 z
INFO  00:32:12,395 - #36 [
INFO  00:32:12,395 - #9 0
INFO  00:32:12,395 - #37 ]
INFO  00:32:12,395 - #33 )
INFO  00:32:12,395 - #13 ;
INFO  00:32:12,395 - #41 print
INFO  00:32:12,395 - #32 (
INFO  00:32:12,395 - #9 1
INFO  00:32:12,396 - #12 ,
INFO  00:32:12,396 - #9 1
INFO  00:32:12,396 - #33 )
INFO  00:32:12,396 - #13 ;
INFO  00:32:12,396 - #41 print
INFO  00:32:12,396 - #32 (
INFO  00:32:12,396 - #10 a
INFO  00:32:12,396 - #12 ,
INFO  00:32:12,396 - #9 1
INFO  00:32:12,396 - #33 )
INFO  00:32:12,396 - #13 ;
INFO  00:32:12,396 - #45 y
INFO  00:32:12,396 - #28 =
INFO  00:32:12,396 - #9 5
INFO  00:32:12,396 - #13 ;
INFO  00:32:12,397 - #45 x
INFO  00:32:12,397 - #28 =
INFO  00:32:12,397 - #45 y
INFO  00:32:12,397 - #15 +
INFO  00:32:12,397 - #9 3
INFO  00:32:12,398 - #13 ;
INFO  00:32:12,398 - #41 print
INFO  00:32:12,398 - #32 (
INFO  00:32:12,398 - #45 x
INFO  00:32:12,398 - #33 )
INFO  00:32:12,398 - #13 ;
INFO  00:32:12,398 - #45 y
INFO  00:32:12,398 - #28 =
INFO  00:32:12,398 - #32 (
INFO  00:32:12,398 - #45 x
INFO  00:32:12,398 - #33 )
INFO  00:32:12,398 - #13 ;
INFO  00:32:12,398 - #45 x
INFO  00:32:12,399 - #29 ++
INFO  00:32:12,399 - #13 ;
INFO  00:32:12,399 - #41 print
INFO  00:32:12,399 - #32 (
INFO  00:32:12,399 - #45 x
INFO  00:32:12,399 - #33 )
INFO  00:32:12,399 - #13 ;
INFO  00:32:12,399 - #45 x
INFO  00:32:12,399 - #30 --
INFO  00:32:12,399 - #13 ;
INFO  00:32:12,399 - #41 print
INFO  00:32:12,399 - #32 (
INFO  00:32:12,399 - #32 (
INFO  00:32:12,399 - #32 (
INFO  00:32:12,399 - #45 x
INFO  00:32:12,399 - #33 )
INFO  00:32:12,399 - #33 )
INFO  00:32:12,399 - #33 )
INFO  00:32:12,399 - #13 ;
INFO  00:32:12,399 - #45 x
INFO  00:32:12,399 - #28 =
INFO  00:32:12,399 - #45 x
INFO  00:32:12,399 - #15 +
INFO  00:32:12,400 - #32 (
INFO  00:32:12,400 - #16 -
INFO  00:32:12,400 - #9 2
INFO  00:32:12,400 - #33 )
INFO  00:32:12,400 - #13 ;
INFO  00:32:12,400 - #41 print
INFO  00:32:12,400 - #32 (
INFO  00:32:12,400 - #45 x
INFO  00:32:12,400 - #33 )
INFO  00:32:12,400 - #13 ;
INFO  00:32:12,400 - #45 x
INFO  00:32:12,400 - #28 =
INFO  00:32:12,400 - #45 y
INFO  00:32:12,400 - #17 *
INFO  00:32:12,400 - #9 2
INFO  00:32:12,401 - #13 ;
INFO  00:32:12,401 - #41 print
INFO  00:32:12,402 - #32 (
INFO  00:32:12,402 - #45 x
INFO  00:32:12,402 - #33 )
INFO  00:32:12,402 - #13 ;
INFO  00:32:12,402 - #45 y
INFO  00:32:12,402 - #28 =
INFO  00:32:12,402 - #45 x
INFO  00:32:12,402 - #18 /
INFO  00:32:12,402 - #9 4
INFO  00:32:12,402 - #13 ;
INFO  00:32:12,403 - #41 print
INFO  00:32:12,403 - #32 (
INFO  00:32:12,403 - #45 y
INFO  00:32:12,403 - #33 )
INFO  00:32:12,403 - #13 ;
INFO  00:32:12,403 - #45 x
INFO  00:32:12,403 - #28 =
INFO  00:32:12,403 - #45 y
INFO  00:32:12,403 - #19 %
INFO  00:32:12,403 - #9 3
INFO  00:32:12,403 - #13 ;
INFO  00:32:12,404 - #41 print
INFO  00:32:12,404 - #32 (
INFO  00:32:12,404 - #45 x
INFO  00:32:12,404 - #33 )
INFO  00:32:12,404 - #13 ;
INFO  00:32:12,404 - #42 read
INFO  00:32:12,404 - #32 (
INFO  00:32:12,404 - #45 x
INFO  00:32:12,404 - #33 )
INFO  00:32:12,404 - #13 ;
INFO  00:32:12,404 - #45 x
INFO  00:32:12,404 - #28 =
INFO  00:32:12,404 - #45 x
INFO  00:32:12,404 - #17 *
INFO  00:32:12,405 - #45 y
INFO  00:32:12,405 - #13 ;
INFO  00:32:12,405 - #41 print
INFO  00:32:12,405 - #32 (
INFO  00:32:12,405 - #45 x
INFO  00:32:12,405 - #33 )
INFO  00:32:12,405 - #13 ;
INFO  00:32:12,405 - #41 print
INFO  00:32:12,405 - #32 (
INFO  00:32:12,405 - #11 false
INFO  00:32:12,405 - #12 ,
INFO  00:32:12,405 - #9 20
INFO  00:32:12,405 - #33 )
INFO  00:32:12,405 - #13 ;
INFO  00:32:12,405 - #8 return
INFO  00:32:12,405 - #9 0
INFO  00:32:12,405 - #13 ;
INFO  00:32:12,405 - #35 }
INFO  00:32:12,405 - #35 }
INFO  00:32:12,407 - ***Abstract tree****
INFO  00:32:12,407 - #0
DEBUG 00:32:12,417 - Variable with name x has the address of 0
DEBUG 00:32:12,417 - Variable with name y has the address of 2
DEBUG 00:32:12,417 - found constant with value 5of type 1
DEBUG 00:32:12,417 - constant factor is type 1
DEBUG 00:32:12,417 - term SingleFactorterm is type 1
DEBUG 00:32:12,417 - exprWithNoMinus is type 1
DEBUG 00:32:12,417 - term SingleFactorterm is type 3
DEBUG 00:32:12,417 - exprWithNoMinus is type 3
DEBUG 00:32:12,417 - found constant with value 0of type 1
DEBUG 00:32:12,417 - constant factor is type 1
DEBUG 00:32:12,417 - term SingleFactorterm is type 1
DEBUG 00:32:12,417 - exprWithNoMinus is type 1
DEBUG 00:32:12,417 - found constant with value 0of type 1
DEBUG 00:32:12,417 - constant factor is type 1
DEBUG 00:32:12,417 - term SingleFactorterm is type 1
DEBUG 00:32:12,417 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - found constant with value 0of type 1
DEBUG 00:32:12,418 - constant factor is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - print statement has arg of type 1
DEBUG 00:32:12,418 - found constant with value 1of type 1
DEBUG 00:32:12,418 - constant factor is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - found constant with value 1of type 1
DEBUG 00:32:12,418 - print statement has arg of type 1
DEBUG 00:32:12,418 - found constant with value *****of type 2
DEBUG 00:32:12,418 - found constant with value 97of type 2
DEBUG 00:32:12,418 - constant factor is type 2
DEBUG 00:32:12,418 - term SingleFactorterm is type 2
DEBUG 00:32:12,418 - exprWithNoMinus is type 2
DEBUG 00:32:12,418 - found constant with value 1of type 1
DEBUG 00:32:12,418 - print statement has arg of type 2
DEBUG 00:32:12,418 - found constant with value 5of type 1
DEBUG 00:32:12,418 - constant factor is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - found constant with value 3of type 1
DEBUG 00:32:12,418 - constant factor is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - print statement has arg of type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,418 - term SingleFactorterm is type 1
DEBUG 00:32:12,418 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - print statement has arg of type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - print statement has arg of type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - found constant with value 2of type 1
DEBUG 00:32:12,419 - constant factor is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - ExprWithMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - print statement has arg of type 1
DEBUG 00:32:12,419 - found constant with value 2of type 1
DEBUG 00:32:12,419 - constant factor is type 1
DEBUG 00:32:12,419 - term element is type 1
DEBUG 00:32:12,419 - term list single is type 1
DEBUG 00:32:12,419 - term MultiFactorTerm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - print statement has arg of type 1
DEBUG 00:32:12,419 - found constant with value 4of type 1
DEBUG 00:32:12,419 - constant factor is type 1
DEBUG 00:32:12,419 - term element is type 1
DEBUG 00:32:12,419 - term list single is type 1
DEBUG 00:32:12,419 - term MultiFactorTerm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,419 - term SingleFactorterm is type 1
DEBUG 00:32:12,419 - exprWithNoMinus is type 1
DEBUG 00:32:12,420 - print statement has arg of type 1
DEBUG 00:32:12,420 - found constant with value 3of type 1
DEBUG 00:32:12,420 - constant factor is type 1
DEBUG 00:32:12,420 - term element is type 1
DEBUG 00:32:12,420 - term list single is type 1
DEBUG 00:32:12,420 - term MultiFactorTerm is type 1
DEBUG 00:32:12,420 - exprWithNoMinus is type 1
DEBUG 00:32:12,420 - term SingleFactorterm is type 1
DEBUG 00:32:12,420 - exprWithNoMinus is type 1
DEBUG 00:32:12,420 - print statement has arg of type 1
DEBUG 00:32:12,420 - term element is type 1
DEBUG 00:32:12,420 - term list single is type 1
DEBUG 00:32:12,420 - term MultiFactorTerm is type 1
DEBUG 00:32:12,420 - exprWithNoMinus is type 1
DEBUG 00:32:12,420 - term SingleFactorterm is type 1
DEBUG 00:32:12,420 - exprWithNoMinus is type 1
DEBUG 00:32:12,420 - print statement has arg of type 1
DEBUG 00:32:12,420 - found constant with value 0of type 1
DEBUG 00:32:12,420 - constant factor is type 1
DEBUG 00:32:12,420 - term SingleFactorterm is type 1
DEBUG 00:32:12,420 - exprWithNoMinus is type 1
DEBUG 00:32:12,420 - found constant with value 20of type 1
DEBUG 00:32:12,420 - print statement has arg of type 1
DEBUG 00:32:12,420 - found constant with value 0of type 1
DEBUG 00:32:12,420 - constant factor is type 1
DEBUG 00:32:12,420 - term SingleFactorterm is type 1
DEBUG 00:32:12,420 - exprWithNoMinus is type 1
INFO  00:32:12,420 - Print calls = 0
INFO  00:32:12,422 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:32:12,429 - Parsiranje uspesno zavrseno!
INFO  00:32:52,166 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:32:52,203 - #40 program
INFO  00:32:52,203 - #45 MJProgram
INFO  00:32:52,203 - #45 int
INFO  00:32:52,203 - #45 x
INFO  00:32:52,203 - #13 ;
INFO  00:32:52,203 - #45 int
INFO  00:32:52,204 - #45 z
INFO  00:32:52,204 - #36 [
INFO  00:32:52,204 - #37 ]
INFO  00:32:52,204 - #13 ;
INFO  00:32:52,204 - #34 {
INFO  00:32:52,204 - #45 int
INFO  00:32:52,205 - #45 main
INFO  00:32:52,205 - #32 (
INFO  00:32:52,205 - #33 )
INFO  00:32:52,205 - #45 int
INFO  00:32:52,206 - #45 y
INFO  00:32:52,206 - #13 ;
INFO  00:32:52,206 - #34 {
INFO  00:32:52,206 - #45 z
INFO  00:32:52,206 - #28 =
INFO  00:32:52,206 - #31 new
INFO  00:32:52,206 - #45 int
INFO  00:32:52,206 - #36 [
INFO  00:32:52,206 - #9 5
INFO  00:32:52,206 - #37 ]
INFO  00:32:52,207 - #13 ;
INFO  00:32:52,208 - #45 z
INFO  00:32:52,208 - #36 [
INFO  00:32:52,208 - #9 0
INFO  00:32:52,208 - #37 ]
INFO  00:32:52,208 - #28 =
INFO  00:32:52,209 - #9 0
INFO  00:32:52,209 - #13 ;
INFO  00:32:52,209 - #41 print
INFO  00:32:52,209 - #32 (
INFO  00:32:52,209 - #45 z
INFO  00:32:52,209 - #36 [
INFO  00:32:52,209 - #9 0
INFO  00:32:52,209 - #37 ]
INFO  00:32:52,209 - #33 )
INFO  00:32:52,209 - #13 ;
INFO  00:32:52,209 - #41 print
INFO  00:32:52,209 - #32 (
INFO  00:32:52,209 - #9 1
INFO  00:32:52,209 - #12 ,
INFO  00:32:52,210 - #9 1
INFO  00:32:52,210 - #33 )
INFO  00:32:52,210 - #13 ;
INFO  00:32:52,210 - #41 print
INFO  00:32:52,210 - #32 (
INFO  00:32:52,210 - #10 a
INFO  00:32:52,210 - #12 ,
INFO  00:32:52,210 - #9 1
INFO  00:32:52,210 - #33 )
INFO  00:32:52,210 - #13 ;
INFO  00:32:52,210 - #45 y
INFO  00:32:52,210 - #28 =
INFO  00:32:52,210 - #9 5
INFO  00:32:52,210 - #13 ;
INFO  00:32:52,210 - #45 x
INFO  00:32:52,210 - #28 =
INFO  00:32:52,210 - #45 y
INFO  00:32:52,210 - #15 +
INFO  00:32:52,211 - #9 3
INFO  00:32:52,211 - #13 ;
INFO  00:32:52,212 - #41 print
INFO  00:32:52,212 - #32 (
INFO  00:32:52,212 - #45 x
INFO  00:32:52,212 - #33 )
INFO  00:32:52,212 - #13 ;
INFO  00:32:52,212 - #45 y
INFO  00:32:52,212 - #28 =
INFO  00:32:52,212 - #32 (
INFO  00:32:52,212 - #45 x
INFO  00:32:52,212 - #33 )
INFO  00:32:52,212 - #13 ;
INFO  00:32:52,212 - #45 x
INFO  00:32:52,212 - #29 ++
INFO  00:32:52,212 - #13 ;
INFO  00:32:52,212 - #41 print
INFO  00:32:52,212 - #32 (
INFO  00:32:52,213 - #45 x
INFO  00:32:52,213 - #33 )
INFO  00:32:52,213 - #13 ;
INFO  00:32:52,213 - #45 x
INFO  00:32:52,213 - #30 --
INFO  00:32:52,213 - #13 ;
INFO  00:32:52,213 - #41 print
INFO  00:32:52,213 - #32 (
INFO  00:32:52,213 - #32 (
INFO  00:32:52,213 - #32 (
INFO  00:32:52,213 - #45 x
INFO  00:32:52,213 - #33 )
INFO  00:32:52,213 - #33 )
INFO  00:32:52,213 - #33 )
INFO  00:32:52,213 - #13 ;
INFO  00:32:52,213 - #45 x
INFO  00:32:52,213 - #28 =
INFO  00:32:52,213 - #45 x
INFO  00:32:52,213 - #15 +
INFO  00:32:52,213 - #32 (
INFO  00:32:52,214 - #16 -
INFO  00:32:52,214 - #9 2
INFO  00:32:52,214 - #33 )
INFO  00:32:52,214 - #13 ;
INFO  00:32:52,214 - #41 print
INFO  00:32:52,214 - #32 (
INFO  00:32:52,214 - #45 x
INFO  00:32:52,214 - #33 )
INFO  00:32:52,214 - #13 ;
INFO  00:32:52,214 - #45 x
INFO  00:32:52,214 - #28 =
INFO  00:32:52,214 - #45 y
INFO  00:32:52,214 - #17 *
INFO  00:32:52,214 - #9 2
INFO  00:32:52,215 - #13 ;
INFO  00:32:52,215 - #41 print
INFO  00:32:52,215 - #32 (
INFO  00:32:52,216 - #45 x
INFO  00:32:52,216 - #33 )
INFO  00:32:52,216 - #13 ;
INFO  00:32:52,216 - #45 y
INFO  00:32:52,216 - #28 =
INFO  00:32:52,216 - #45 x
INFO  00:32:52,216 - #18 /
INFO  00:32:52,216 - #9 4
INFO  00:32:52,216 - #13 ;
INFO  00:32:52,217 - #41 print
INFO  00:32:52,217 - #32 (
INFO  00:32:52,217 - #45 y
INFO  00:32:52,217 - #33 )
INFO  00:32:52,217 - #13 ;
INFO  00:32:52,217 - #45 x
INFO  00:32:52,217 - #28 =
INFO  00:32:52,217 - #45 y
INFO  00:32:52,217 - #19 %
INFO  00:32:52,217 - #9 3
INFO  00:32:52,217 - #13 ;
INFO  00:32:52,217 - #41 print
INFO  00:32:52,217 - #32 (
INFO  00:32:52,217 - #45 x
INFO  00:32:52,217 - #33 )
INFO  00:32:52,217 - #13 ;
INFO  00:32:52,217 - #42 read
INFO  00:32:52,217 - #32 (
INFO  00:32:52,217 - #45 x
INFO  00:32:52,217 - #33 )
INFO  00:32:52,217 - #13 ;
INFO  00:32:52,217 - #45 x
INFO  00:32:52,218 - #28 =
INFO  00:32:52,218 - #45 x
INFO  00:32:52,218 - #17 *
INFO  00:32:52,218 - #45 y
INFO  00:32:52,218 - #13 ;
INFO  00:32:52,218 - #41 print
INFO  00:32:52,218 - #32 (
INFO  00:32:52,218 - #45 x
INFO  00:32:52,218 - #33 )
INFO  00:32:52,218 - #13 ;
INFO  00:32:52,218 - #41 print
INFO  00:32:52,218 - #32 (
INFO  00:32:52,218 - #11 false
INFO  00:32:52,218 - #12 ,
INFO  00:32:52,218 - #9 20
INFO  00:32:52,218 - #33 )
INFO  00:32:52,218 - #13 ;
INFO  00:32:52,218 - #8 return
INFO  00:32:52,218 - #9 0
INFO  00:32:52,220 - #13 ;
INFO  00:32:52,220 - #35 }
INFO  00:32:52,220 - #35 }
INFO  00:32:52,221 - ***Abstract tree****
INFO  00:32:52,221 - #0
DEBUG 00:32:52,238 - Variable with name x has the address of 0
DEBUG 00:32:52,239 - Variable with name y has the address of 2
DEBUG 00:32:52,239 - found constant with value 5of type 1
DEBUG 00:32:52,239 - constant factor is type 1
DEBUG 00:32:52,239 - term SingleFactorterm is type 1
DEBUG 00:32:52,239 - exprWithNoMinus is type 1
DEBUG 00:32:52,239 - term SingleFactorterm is type 3
DEBUG 00:32:52,239 - exprWithNoMinus is type 3
DEBUG 00:32:56,052 - found constant with value 0of type 1
DEBUG 00:32:56,052 - constant factor is type 1
DEBUG 00:32:56,052 - term SingleFactorterm is type 1
DEBUG 00:32:56,052 - exprWithNoMinus is type 1
DEBUG 00:32:56,052 - found constant with value 0of type 1
DEBUG 00:32:56,052 - constant factor is type 1
DEBUG 00:32:56,052 - term SingleFactorterm is type 1
DEBUG 00:32:56,052 - exprWithNoMinus is type 1
DEBUG 00:32:56,052 - found constant with value 0of type 1
DEBUG 00:32:56,052 - constant factor is type 1
DEBUG 00:32:56,052 - term SingleFactorterm is type 1
DEBUG 00:32:56,052 - exprWithNoMinus is type 1
DEBUG 00:32:56,052 - term SingleFactorterm is type 1
DEBUG 00:32:56,052 - exprWithNoMinus is type 1
DEBUG 00:32:56,052 - print statement has arg of type 1
DEBUG 00:32:56,052 - found constant with value 1of type 1
DEBUG 00:32:56,053 - constant factor is type 1
DEBUG 00:32:56,053 - term SingleFactorterm is type 1
DEBUG 00:32:56,053 - exprWithNoMinus is type 1
DEBUG 00:32:56,053 - found constant with value 1of type 1
DEBUG 00:32:56,053 - print statement has arg of type 1
DEBUG 00:32:56,053 - found constant with value *****of type 2
DEBUG 00:32:56,053 - found constant with value 97of type 2
DEBUG 00:32:56,053 - constant factor is type 2
DEBUG 00:32:56,053 - term SingleFactorterm is type 2
DEBUG 00:32:56,053 - exprWithNoMinus is type 2
DEBUG 00:32:56,053 - found constant with value 1of type 1
DEBUG 00:32:56,053 - print statement has arg of type 2
DEBUG 00:32:56,053 - found constant with value 5of type 1
DEBUG 00:32:56,053 - constant factor is type 1
DEBUG 00:32:56,053 - term SingleFactorterm is type 1
DEBUG 00:32:56,053 - exprWithNoMinus is type 1
DEBUG 00:32:56,053 - term SingleFactorterm is type 1
DEBUG 00:32:56,053 - found constant with value 3of type 1
DEBUG 00:32:56,053 - constant factor is type 1
DEBUG 00:32:56,053 - term SingleFactorterm is type 1
DEBUG 00:32:56,053 - exprWithNoMinus is type 1
DEBUG 00:32:56,053 - term SingleFactorterm is type 1
DEBUG 00:32:56,053 - exprWithNoMinus is type 1
DEBUG 00:32:56,053 - print statement has arg of type 1
DEBUG 00:32:56,053 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - print statement has arg of type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - print statement has arg of type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - found constant with value 2of type 1
DEBUG 00:32:56,054 - constant factor is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - ExprWithMinus is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - term SingleFactorterm is type 1
DEBUG 00:32:56,054 - exprWithNoMinus is type 1
DEBUG 00:32:56,054 - print statement has arg of type 1
DEBUG 00:32:56,054 - found constant with value 2of type 1
DEBUG 00:32:56,054 - constant factor is type 1
DEBUG 00:32:56,054 - term element is type 1
DEBUG 00:32:56,054 - term list single is type 1
DEBUG 00:32:56,055 - term MultiFactorTerm is type 1
DEBUG 00:32:56,055 - exprWithNoMinus is type 1
DEBUG 00:32:56,055 - term SingleFactorterm is type 1
DEBUG 00:32:56,055 - exprWithNoMinus is type 1
DEBUG 00:32:56,055 - print statement has arg of type 1
DEBUG 00:32:56,055 - found constant with value 4of type 1
DEBUG 00:32:56,055 - constant factor is type 1
DEBUG 00:32:56,055 - term element is type 1
DEBUG 00:32:56,055 - term list single is type 1
DEBUG 00:32:56,055 - term MultiFactorTerm is type 1
DEBUG 00:32:56,055 - exprWithNoMinus is type 1
DEBUG 00:32:56,055 - term SingleFactorterm is type 1
DEBUG 00:32:56,055 - exprWithNoMinus is type 1
DEBUG 00:32:56,055 - print statement has arg of type 1
DEBUG 00:32:56,055 - found constant with value 3of type 1
DEBUG 00:32:56,055 - constant factor is type 1
DEBUG 00:32:56,055 - term element is type 1
DEBUG 00:32:56,055 - term list single is type 1
DEBUG 00:32:56,056 - term MultiFactorTerm is type 1
DEBUG 00:32:56,056 - exprWithNoMinus is type 1
DEBUG 00:32:56,056 - term SingleFactorterm is type 1
DEBUG 00:32:56,056 - exprWithNoMinus is type 1
DEBUG 00:32:56,056 - print statement has arg of type 1
DEBUG 00:32:56,056 - term element is type 1
DEBUG 00:32:56,056 - term list single is type 1
DEBUG 00:32:56,056 - term MultiFactorTerm is type 1
DEBUG 00:32:56,056 - exprWithNoMinus is type 1
DEBUG 00:32:56,056 - term SingleFactorterm is type 1
DEBUG 00:32:56,056 - exprWithNoMinus is type 1
DEBUG 00:32:56,056 - print statement has arg of type 1
DEBUG 00:32:56,056 - found constant with value 0of type 1
DEBUG 00:32:56,056 - constant factor is type 1
DEBUG 00:32:56,056 - term SingleFactorterm is type 1
DEBUG 00:32:56,056 - exprWithNoMinus is type 1
DEBUG 00:32:56,056 - found constant with value 20of type 1
DEBUG 00:32:56,056 - print statement has arg of type 1
DEBUG 00:32:56,056 - found constant with value 0of type 1
DEBUG 00:32:56,056 - constant factor is type 1
DEBUG 00:32:56,056 - term SingleFactorterm is type 1
DEBUG 00:32:56,056 - exprWithNoMinus is type 1
INFO  00:32:56,056 - Print calls = 0
INFO  00:32:56,059 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:37:02,984 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:37:03,016 - #40 program
INFO  00:37:03,016 - #45 MJProgram
INFO  00:37:03,016 - #45 int
INFO  00:37:03,017 - #45 x
INFO  00:37:03,017 - #13 ;
INFO  00:37:03,017 - #45 int
INFO  00:37:03,017 - #45 z
INFO  00:37:03,017 - #36 [
INFO  00:37:03,018 - #37 ]
INFO  00:37:03,018 - #13 ;
INFO  00:37:03,018 - #34 {
INFO  00:37:03,018 - #45 int
INFO  00:37:03,018 - #45 main
INFO  00:37:03,019 - #32 (
INFO  00:37:03,019 - #33 )
INFO  00:37:03,019 - #45 int
INFO  00:37:03,019 - #45 y
INFO  00:37:03,019 - #13 ;
INFO  00:37:03,019 - #34 {
INFO  00:37:03,019 - #45 z
INFO  00:37:03,019 - #28 =
INFO  00:37:03,019 - #31 new
INFO  00:37:03,019 - #45 int
INFO  00:37:03,019 - #36 [
INFO  00:37:03,020 - #9 5
INFO  00:37:03,020 - #37 ]
INFO  00:37:03,021 - #13 ;
INFO  00:37:03,021 - #45 z
INFO  00:37:03,021 - #36 [
INFO  00:37:03,021 - #9 0
INFO  00:37:03,021 - #37 ]
INFO  00:37:03,022 - #28 =
INFO  00:37:03,022 - #9 0
INFO  00:37:03,022 - #13 ;
INFO  00:37:03,022 - #41 print
INFO  00:37:03,022 - #32 (
INFO  00:37:03,022 - #45 z
INFO  00:37:03,022 - #36 [
INFO  00:37:03,022 - #9 0
INFO  00:37:03,022 - #37 ]
INFO  00:37:03,022 - #33 )
INFO  00:37:03,022 - #13 ;
INFO  00:37:03,022 - #41 print
INFO  00:37:03,023 - #32 (
INFO  00:37:03,023 - #9 1
INFO  00:37:03,023 - #12 ,
INFO  00:37:03,023 - #9 1
INFO  00:37:03,023 - #33 )
INFO  00:37:03,023 - #13 ;
INFO  00:37:03,023 - #41 print
INFO  00:37:03,023 - #32 (
INFO  00:37:03,023 - #10 a
INFO  00:37:03,023 - #12 ,
INFO  00:37:03,023 - #9 1
INFO  00:37:03,023 - #33 )
INFO  00:37:03,023 - #13 ;
INFO  00:37:03,023 - #45 y
INFO  00:37:03,023 - #28 =
INFO  00:37:03,023 - #9 5
INFO  00:37:03,023 - #13 ;
INFO  00:37:03,024 - #45 x
INFO  00:37:03,024 - #28 =
INFO  00:37:03,024 - #45 y
INFO  00:37:03,024 - #15 +
INFO  00:37:03,024 - #9 3
INFO  00:37:03,024 - #13 ;
INFO  00:37:03,025 - #41 print
INFO  00:37:03,025 - #32 (
INFO  00:37:03,025 - #45 x
INFO  00:37:03,025 - #33 )
INFO  00:37:03,025 - #13 ;
INFO  00:37:03,025 - #45 y
INFO  00:37:03,025 - #28 =
INFO  00:37:03,025 - #32 (
INFO  00:37:03,025 - #45 x
INFO  00:37:03,025 - #33 )
INFO  00:37:03,025 - #13 ;
INFO  00:37:03,025 - #45 x
INFO  00:37:03,025 - #29 ++
INFO  00:37:03,025 - #13 ;
INFO  00:37:03,026 - #41 print
INFO  00:37:03,026 - #32 (
INFO  00:37:03,026 - #45 x
INFO  00:37:03,026 - #33 )
INFO  00:37:03,026 - #13 ;
INFO  00:37:03,026 - #45 x
INFO  00:37:03,026 - #30 --
INFO  00:37:03,026 - #13 ;
INFO  00:37:03,026 - #41 print
INFO  00:37:03,026 - #32 (
INFO  00:37:03,026 - #32 (
INFO  00:37:03,026 - #32 (
INFO  00:37:03,026 - #45 x
INFO  00:37:03,026 - #33 )
INFO  00:37:03,026 - #33 )
INFO  00:37:03,026 - #33 )
INFO  00:37:03,026 - #13 ;
INFO  00:37:03,026 - #45 x
INFO  00:37:03,026 - #28 =
INFO  00:37:03,027 - #45 x
INFO  00:37:03,027 - #15 +
INFO  00:37:03,027 - #32 (
INFO  00:37:03,027 - #16 -
INFO  00:37:03,027 - #9 2
INFO  00:37:03,027 - #33 )
INFO  00:37:03,027 - #13 ;
INFO  00:37:03,027 - #41 print
INFO  00:37:03,027 - #32 (
INFO  00:37:03,027 - #45 x
INFO  00:37:03,027 - #33 )
INFO  00:37:03,027 - #13 ;
INFO  00:37:03,027 - #45 x
INFO  00:37:03,027 - #28 =
INFO  00:37:03,027 - #45 y
INFO  00:37:03,027 - #17 *
INFO  00:37:03,027 - #9 2
INFO  00:37:03,028 - #13 ;
INFO  00:37:03,028 - #41 print
INFO  00:37:03,028 - #32 (
INFO  00:37:03,028 - #45 x
INFO  00:37:03,029 - #33 )
INFO  00:37:03,029 - #13 ;
INFO  00:37:03,029 - #45 y
INFO  00:37:03,029 - #28 =
INFO  00:37:03,029 - #45 x
INFO  00:37:03,029 - #18 /
INFO  00:37:03,029 - #9 4
INFO  00:37:03,029 - #13 ;
INFO  00:37:03,029 - #41 print
INFO  00:37:03,029 - #32 (
INFO  00:37:03,029 - #45 y
INFO  00:37:03,029 - #33 )
INFO  00:37:03,029 - #13 ;
INFO  00:37:03,029 - #45 x
INFO  00:37:03,029 - #28 =
INFO  00:37:03,029 - #45 y
INFO  00:37:03,030 - #19 %
INFO  00:37:03,030 - #9 3
INFO  00:37:03,030 - #13 ;
INFO  00:37:03,030 - #41 print
INFO  00:37:03,030 - #32 (
INFO  00:37:03,030 - #45 x
INFO  00:37:03,030 - #33 )
INFO  00:37:03,030 - #13 ;
INFO  00:37:03,030 - #42 read
INFO  00:37:03,030 - #32 (
INFO  00:37:03,030 - #45 x
INFO  00:37:03,030 - #33 )
INFO  00:37:03,030 - #13 ;
INFO  00:37:03,030 - #45 x
INFO  00:37:03,030 - #28 =
INFO  00:37:03,030 - #45 x
INFO  00:37:03,030 - #17 *
INFO  00:37:03,031 - #45 y
INFO  00:37:03,031 - #13 ;
INFO  00:37:03,031 - #41 print
INFO  00:37:03,031 - #32 (
INFO  00:37:03,031 - #45 x
INFO  00:37:03,031 - #33 )
INFO  00:37:03,031 - #13 ;
INFO  00:37:03,031 - #41 print
INFO  00:37:03,031 - #32 (
INFO  00:37:03,031 - #11 false
INFO  00:37:03,031 - #12 ,
INFO  00:37:03,031 - #9 20
INFO  00:37:03,031 - #33 )
INFO  00:37:03,031 - #13 ;
INFO  00:37:03,031 - #8 return
INFO  00:37:03,031 - #9 0
INFO  00:37:03,031 - #13 ;
INFO  00:37:03,031 - #35 }
INFO  00:37:03,031 - #35 }
INFO  00:37:03,033 - ***Abstract tree****
INFO  00:37:03,033 - #0
DEBUG 00:37:03,041 - Variable with name x has the address of 0
DEBUG 00:37:03,042 - Variable with name y has the address of 2
DEBUG 00:37:03,042 - found constant with value 5of type 1
DEBUG 00:37:03,042 - constant factor is type 1
DEBUG 00:37:03,042 - term SingleFactorterm is type 1
DEBUG 00:37:03,042 - exprWithNoMinus is type 1
DEBUG 00:37:03,042 - term SingleFactorterm is type 3
DEBUG 00:37:03,042 - exprWithNoMinus is type 3
DEBUG 00:37:03,042 - found constant with value 0of type 1
DEBUG 00:37:03,042 - constant factor is type 1
DEBUG 00:37:03,042 - term SingleFactorterm is type 1
DEBUG 00:37:03,042 - exprWithNoMinus is type 1
DEBUG 00:37:03,042 - found constant with value 0of type 1
DEBUG 00:37:03,042 - constant factor is type 1
DEBUG 00:37:03,042 - term SingleFactorterm is type 1
DEBUG 00:37:03,042 - exprWithNoMinus is type 1
DEBUG 00:37:03,042 - found constant with value 0of type 1
DEBUG 00:37:03,042 - constant factor is type 1
DEBUG 00:37:03,042 - term SingleFactorterm is type 1
DEBUG 00:37:03,042 - exprWithNoMinus is type 1
DEBUG 00:37:03,042 - term SingleFactorterm is type 1
DEBUG 00:37:03,042 - exprWithNoMinus is type 1
DEBUG 00:37:03,042 - print statement has arg of type 1
DEBUG 00:37:03,043 - found constant with value 1of type 1
DEBUG 00:37:03,043 - constant factor is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - found constant with value 1of type 1
DEBUG 00:37:03,043 - print statement has arg of type 1
DEBUG 00:37:03,043 - found constant with value *****of type 2
DEBUG 00:37:03,043 - found constant with value 97of type 2
DEBUG 00:37:03,043 - constant factor is type 2
DEBUG 00:37:03,043 - term SingleFactorterm is type 2
DEBUG 00:37:03,043 - exprWithNoMinus is type 2
DEBUG 00:37:03,043 - found constant with value 1of type 1
DEBUG 00:37:03,043 - print statement has arg of type 2
DEBUG 00:37:03,043 - found constant with value 5of type 1
DEBUG 00:37:03,043 - constant factor is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - found constant with value 3of type 1
DEBUG 00:37:03,043 - constant factor is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - print statement has arg of type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - print statement has arg of type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,043 - exprWithNoMinus is type 1
DEBUG 00:37:03,043 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - print statement has arg of type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - found constant with value 2of type 1
DEBUG 00:37:03,044 - constant factor is type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - ExprWithMinus is type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - print statement has arg of type 1
DEBUG 00:37:03,044 - found constant with value 2of type 1
DEBUG 00:37:03,044 - constant factor is type 1
DEBUG 00:37:03,044 - term element is type 1
DEBUG 00:37:03,044 - term list single is type 1
DEBUG 00:37:03,044 - term MultiFactorTerm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - print statement has arg of type 1
DEBUG 00:37:03,044 - found constant with value 4of type 1
DEBUG 00:37:03,044 - constant factor is type 1
DEBUG 00:37:03,044 - term element is type 1
DEBUG 00:37:03,044 - term list single is type 1
DEBUG 00:37:03,044 - term MultiFactorTerm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - term SingleFactorterm is type 1
DEBUG 00:37:03,044 - exprWithNoMinus is type 1
DEBUG 00:37:03,044 - print statement has arg of type 1
DEBUG 00:37:03,044 - found constant with value 3of type 1
DEBUG 00:37:03,044 - constant factor is type 1
DEBUG 00:37:03,045 - term element is type 1
DEBUG 00:37:03,045 - term list single is type 1
DEBUG 00:37:03,045 - term MultiFactorTerm is type 1
DEBUG 00:37:03,045 - exprWithNoMinus is type 1
DEBUG 00:37:03,045 - term SingleFactorterm is type 1
DEBUG 00:37:03,045 - exprWithNoMinus is type 1
DEBUG 00:37:03,045 - print statement has arg of type 1
DEBUG 00:37:03,045 - term element is type 1
DEBUG 00:37:03,045 - term list single is type 1
DEBUG 00:37:03,045 - term MultiFactorTerm is type 1
DEBUG 00:37:03,045 - exprWithNoMinus is type 1
DEBUG 00:37:03,045 - term SingleFactorterm is type 1
DEBUG 00:37:03,045 - exprWithNoMinus is type 1
DEBUG 00:37:03,045 - print statement has arg of type 1
DEBUG 00:37:03,045 - found constant with value 0of type 1
DEBUG 00:37:03,045 - constant factor is type 1
DEBUG 00:37:03,045 - term SingleFactorterm is type 1
DEBUG 00:37:03,045 - exprWithNoMinus is type 1
DEBUG 00:37:03,045 - found constant with value 20of type 1
DEBUG 00:37:03,045 - print statement has arg of type 1
DEBUG 00:37:03,045 - found constant with value 0of type 1
DEBUG 00:37:03,045 - constant factor is type 1
DEBUG 00:37:03,045 - term SingleFactorterm is type 1
DEBUG 00:37:03,045 - exprWithNoMinus is type 1
INFO  00:37:03,045 - Print calls = 0
INFO  00:37:03,047 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:37:03,056 - Parsiranje uspesno zavrseno!
INFO  00:44:07,994 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:44:08,025 - #40 program
INFO  00:44:08,025 - #45 MJProgram
INFO  00:44:08,025 - #45 int
INFO  00:44:08,026 - #45 x
INFO  00:44:08,026 - #13 ;
INFO  00:44:08,026 - #45 int
INFO  00:44:08,026 - #45 z
INFO  00:44:08,026 - #36 [
INFO  00:44:08,026 - #37 ]
INFO  00:44:08,026 - #13 ;
INFO  00:44:08,027 - #34 {
INFO  00:44:08,027 - #45 int
INFO  00:44:08,027 - #45 main
INFO  00:44:08,027 - #32 (
INFO  00:44:08,028 - #33 )
INFO  00:44:08,028 - #45 int
INFO  00:44:08,028 - #45 y
INFO  00:44:08,028 - #13 ;
INFO  00:44:08,028 - #34 {
INFO  00:44:08,028 - #45 z
INFO  00:44:08,028 - #28 =
INFO  00:44:08,028 - #31 new
INFO  00:44:08,028 - #45 int
INFO  00:44:08,028 - #36 [
INFO  00:44:08,028 - #9 5
INFO  00:44:08,028 - #37 ]
INFO  00:44:08,029 - #13 ;
INFO  00:44:08,029 - #45 z
INFO  00:44:08,030 - #36 [
INFO  00:44:08,030 - #9 0
INFO  00:44:08,030 - #37 ]
INFO  00:44:08,030 - #28 =
INFO  00:44:08,030 - #9 0
INFO  00:44:08,030 - #13 ;
INFO  00:44:08,030 - #41 print
INFO  00:44:08,030 - #32 (
INFO  00:44:08,030 - #45 z
INFO  00:44:08,030 - #36 [
INFO  00:44:08,030 - #9 0
INFO  00:44:08,030 - #37 ]
INFO  00:44:08,030 - #33 )
INFO  00:44:08,031 - #13 ;
INFO  00:44:08,031 - #41 print
INFO  00:44:08,031 - #32 (
INFO  00:44:08,031 - #9 1
INFO  00:44:08,031 - #12 ,
INFO  00:44:08,031 - #9 1
INFO  00:44:08,031 - #33 )
INFO  00:44:08,031 - #13 ;
INFO  00:44:08,031 - #41 print
INFO  00:44:08,031 - #32 (
INFO  00:44:08,031 - #10 a
INFO  00:44:08,031 - #12 ,
INFO  00:44:08,031 - #9 1
INFO  00:44:08,031 - #33 )
INFO  00:44:08,031 - #13 ;
INFO  00:44:08,032 - #45 y
INFO  00:44:08,032 - #28 =
INFO  00:44:08,032 - #9 5
INFO  00:44:08,032 - #13 ;
INFO  00:44:08,032 - #45 x
INFO  00:44:08,032 - #28 =
INFO  00:44:08,032 - #45 y
INFO  00:44:08,032 - #15 +
INFO  00:44:08,032 - #9 3
INFO  00:44:08,033 - #13 ;
INFO  00:44:08,033 - #41 print
INFO  00:44:08,033 - #32 (
INFO  00:44:08,033 - #45 x
INFO  00:44:08,033 - #33 )
INFO  00:44:08,033 - #13 ;
INFO  00:44:08,033 - #45 y
INFO  00:44:08,033 - #28 =
INFO  00:44:08,033 - #32 (
INFO  00:44:08,033 - #45 x
INFO  00:44:08,033 - #33 )
INFO  00:44:08,033 - #13 ;
INFO  00:44:08,034 - #45 x
INFO  00:44:08,034 - #29 ++
INFO  00:44:08,034 - #13 ;
INFO  00:44:08,034 - #41 print
INFO  00:44:08,034 - #32 (
INFO  00:44:08,034 - #45 x
INFO  00:44:08,034 - #33 )
INFO  00:44:08,034 - #13 ;
INFO  00:44:08,034 - #45 x
INFO  00:44:08,034 - #30 --
INFO  00:44:08,034 - #13 ;
INFO  00:44:08,034 - #41 print
INFO  00:44:08,034 - #32 (
INFO  00:44:08,034 - #32 (
INFO  00:44:08,034 - #32 (
INFO  00:44:08,034 - #45 x
INFO  00:44:08,034 - #33 )
INFO  00:44:08,035 - #33 )
INFO  00:44:08,035 - #33 )
INFO  00:44:08,035 - #13 ;
INFO  00:44:08,035 - #45 x
INFO  00:44:08,035 - #28 =
INFO  00:44:08,035 - #45 x
INFO  00:44:08,035 - #15 +
INFO  00:44:08,035 - #32 (
INFO  00:44:08,035 - #16 -
INFO  00:44:08,035 - #9 2
INFO  00:44:08,035 - #33 )
INFO  00:44:08,035 - #13 ;
INFO  00:44:08,035 - #41 print
INFO  00:44:08,035 - #32 (
INFO  00:44:08,035 - #45 x
INFO  00:44:08,035 - #33 )
INFO  00:44:08,035 - #13 ;
INFO  00:44:08,035 - #45 x
INFO  00:44:08,035 - #28 =
INFO  00:44:08,035 - #45 y
INFO  00:44:08,035 - #17 *
INFO  00:44:08,035 - #9 2
INFO  00:44:08,036 - #13 ;
INFO  00:44:08,037 - #41 print
INFO  00:44:08,037 - #32 (
INFO  00:44:08,037 - #45 x
INFO  00:44:08,037 - #33 )
INFO  00:44:08,037 - #13 ;
INFO  00:44:08,037 - #45 y
INFO  00:44:08,037 - #28 =
INFO  00:44:08,037 - #45 x
INFO  00:44:08,037 - #18 /
INFO  00:44:08,037 - #9 4
INFO  00:44:08,037 - #13 ;
INFO  00:44:08,037 - #41 print
INFO  00:44:08,037 - #32 (
INFO  00:44:08,037 - #45 y
INFO  00:44:08,037 - #33 )
INFO  00:44:08,037 - #13 ;
INFO  00:44:08,038 - #45 x
INFO  00:44:08,038 - #28 =
INFO  00:44:08,038 - #45 y
INFO  00:44:08,038 - #19 %
INFO  00:44:08,038 - #9 3
INFO  00:44:08,038 - #13 ;
INFO  00:44:08,038 - #41 print
INFO  00:44:08,038 - #32 (
INFO  00:44:08,038 - #45 x
INFO  00:44:08,038 - #33 )
INFO  00:44:08,038 - #13 ;
INFO  00:44:08,038 - #42 read
INFO  00:44:08,038 - #32 (
INFO  00:44:08,038 - #45 x
INFO  00:44:08,038 - #33 )
INFO  00:44:08,038 - #13 ;
INFO  00:44:08,038 - #45 x
INFO  00:44:08,039 - #28 =
INFO  00:44:08,039 - #45 x
INFO  00:44:08,039 - #17 *
INFO  00:44:08,039 - #45 y
INFO  00:44:08,039 - #13 ;
INFO  00:44:08,039 - #41 print
INFO  00:44:08,039 - #32 (
INFO  00:44:08,039 - #45 x
INFO  00:44:08,039 - #33 )
INFO  00:44:08,039 - #13 ;
INFO  00:44:08,039 - #41 print
INFO  00:44:08,039 - #32 (
INFO  00:44:08,039 - #11 false
INFO  00:44:08,039 - #12 ,
INFO  00:44:08,039 - #9 20
INFO  00:44:08,039 - #33 )
INFO  00:44:08,039 - #13 ;
INFO  00:44:08,039 - #8 return
INFO  00:44:08,039 - #9 0
INFO  00:44:08,039 - #13 ;
INFO  00:44:08,039 - #35 }
INFO  00:44:08,039 - #35 }
INFO  00:44:08,041 - ***Abstract tree****
INFO  00:44:08,041 - #0
DEBUG 00:44:08,050 - Variable with name x has the address of 0
DEBUG 00:44:08,050 - Variable with name y has the address of 2
DEBUG 00:44:08,050 - found constant with value 5of type 1
DEBUG 00:44:08,050 - constant factor is type 1
DEBUG 00:44:08,050 - term SingleFactorterm is type 1
DEBUG 00:44:08,051 - exprWithNoMinus is type 1
DEBUG 00:44:08,051 - term SingleFactorterm is type 3
DEBUG 00:44:08,051 - exprWithNoMinus is type 3
DEBUG 00:44:08,051 - found constant with value 0of type 1
DEBUG 00:44:08,051 - constant factor is type 1
DEBUG 00:44:08,051 - term SingleFactorterm is type 1
DEBUG 00:44:08,051 - exprWithNoMinus is type 1
DEBUG 00:44:08,051 - found constant with value 0of type 1
DEBUG 00:44:08,051 - constant factor is type 1
DEBUG 00:44:08,051 - term SingleFactorterm is type 1
DEBUG 00:44:08,051 - exprWithNoMinus is type 1
DEBUG 00:44:08,051 - found constant with value 0of type 1
DEBUG 00:44:08,051 - constant factor is type 1
DEBUG 00:44:08,051 - term SingleFactorterm is type 1
DEBUG 00:44:08,051 - exprWithNoMinus is type 1
DEBUG 00:44:08,051 - term SingleFactorterm is type 1
DEBUG 00:44:08,051 - exprWithNoMinus is type 1
DEBUG 00:44:08,051 - print statement has arg of type 1
DEBUG 00:44:08,051 - found constant with value 1of type 1
DEBUG 00:44:08,051 - constant factor is type 1
DEBUG 00:44:08,051 - term SingleFactorterm is type 1
DEBUG 00:44:08,051 - exprWithNoMinus is type 1
DEBUG 00:44:08,051 - found constant with value 1of type 1
DEBUG 00:44:08,051 - print statement has arg of type 1
DEBUG 00:44:08,051 - found constant with value *****of type 2
DEBUG 00:44:08,051 - found constant with value 97of type 2
DEBUG 00:44:08,051 - constant factor is type 2
DEBUG 00:44:08,051 - term SingleFactorterm is type 2
DEBUG 00:44:08,051 - exprWithNoMinus is type 2
DEBUG 00:44:08,052 - found constant with value 1of type 1
DEBUG 00:44:08,052 - print statement has arg of type 2
DEBUG 00:44:08,052 - found constant with value 5of type 1
DEBUG 00:44:08,052 - constant factor is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - found constant with value 3of type 1
DEBUG 00:44:08,052 - constant factor is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - print statement has arg of type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - print statement has arg of type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - exprWithNoMinus is type 1
DEBUG 00:44:08,052 - print statement has arg of type 1
DEBUG 00:44:08,052 - term SingleFactorterm is type 1
DEBUG 00:44:08,052 - found constant with value 2of type 1
DEBUG 00:44:08,052 - constant factor is type 1
DEBUG 00:44:08,053 - term SingleFactorterm is type 1
DEBUG 00:44:08,053 - ExprWithMinus is type 1
DEBUG 00:44:08,053 - term SingleFactorterm is type 1
DEBUG 00:44:08,053 - exprWithNoMinus is type 1
DEBUG 00:44:08,053 - term SingleFactorterm is type 1
DEBUG 00:44:08,053 - exprWithNoMinus is type 1
DEBUG 00:44:08,053 - print statement has arg of type 1
DEBUG 00:44:08,053 - found constant with value 2of type 1
DEBUG 00:44:08,053 - constant factor is type 1
DEBUG 00:44:08,053 - term element is type 1
DEBUG 00:44:08,053 - term list single is type 1
DEBUG 00:44:08,053 - term MultiFactorTerm is type 1
DEBUG 00:44:08,053 - exprWithNoMinus is type 1
DEBUG 00:44:08,053 - term SingleFactorterm is type 1
DEBUG 00:44:08,053 - exprWithNoMinus is type 1
DEBUG 00:44:08,053 - print statement has arg of type 1
DEBUG 00:44:08,053 - found constant with value 4of type 1
DEBUG 00:44:08,053 - constant factor is type 1
DEBUG 00:44:08,053 - term element is type 1
DEBUG 00:44:08,053 - term list single is type 1
DEBUG 00:44:08,053 - term MultiFactorTerm is type 1
DEBUG 00:44:08,053 - exprWithNoMinus is type 1
DEBUG 00:44:08,053 - term SingleFactorterm is type 1
DEBUG 00:44:08,053 - exprWithNoMinus is type 1
DEBUG 00:44:08,053 - print statement has arg of type 1
DEBUG 00:44:08,053 - found constant with value 3of type 1
DEBUG 00:44:08,054 - constant factor is type 1
DEBUG 00:44:08,054 - term element is type 1
DEBUG 00:44:08,054 - term list single is type 1
DEBUG 00:44:08,054 - term MultiFactorTerm is type 1
DEBUG 00:44:08,054 - exprWithNoMinus is type 1
DEBUG 00:44:08,054 - term SingleFactorterm is type 1
DEBUG 00:44:08,054 - exprWithNoMinus is type 1
DEBUG 00:44:08,054 - print statement has arg of type 1
DEBUG 00:44:08,054 - term element is type 1
DEBUG 00:44:08,054 - term list single is type 1
DEBUG 00:44:08,054 - term MultiFactorTerm is type 1
DEBUG 00:44:08,054 - exprWithNoMinus is type 1
DEBUG 00:44:08,054 - term SingleFactorterm is type 1
DEBUG 00:44:08,054 - exprWithNoMinus is type 1
DEBUG 00:44:08,054 - print statement has arg of type 1
DEBUG 00:44:08,054 - found constant with value 0of type 1
DEBUG 00:44:08,054 - constant factor is type 1
DEBUG 00:44:08,054 - term SingleFactorterm is type 1
DEBUG 00:44:08,054 - exprWithNoMinus is type 1
DEBUG 00:44:08,054 - found constant with value 20of type 1
DEBUG 00:44:08,054 - print statement has arg of type 1
DEBUG 00:44:08,054 - found constant with value 0of type 1
DEBUG 00:44:08,054 - constant factor is type 1
DEBUG 00:44:08,054 - term SingleFactorterm is type 1
DEBUG 00:44:08,054 - exprWithNoMinus is type 1
INFO  00:44:08,054 - Print calls = 0
INFO  00:44:08,056 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:44:08,068 - Parsiranje uspesno zavrseno!
INFO  00:46:19,819 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:46:19,847 - #40 program
INFO  00:46:19,847 - #45 MJProgram
INFO  00:46:19,847 - #45 int
INFO  00:46:19,848 - #45 x
INFO  00:46:19,848 - #13 ;
INFO  00:46:19,848 - #45 int
INFO  00:46:19,848 - #45 z
INFO  00:46:19,848 - #36 [
INFO  00:46:19,848 - #37 ]
INFO  00:46:19,849 - #13 ;
INFO  00:46:19,849 - #34 {
INFO  00:46:19,849 - #45 int
INFO  00:46:19,849 - #45 main
INFO  00:46:19,850 - #32 (
INFO  00:46:19,850 - #33 )
INFO  00:46:19,850 - #45 int
INFO  00:46:19,850 - #45 y
INFO  00:46:19,850 - #13 ;
INFO  00:46:19,850 - #34 {
INFO  00:46:19,850 - #45 z
INFO  00:46:19,850 - #28 =
INFO  00:46:19,850 - #31 new
INFO  00:46:19,850 - #45 int
INFO  00:46:19,850 - #36 [
INFO  00:46:19,851 - #9 5
INFO  00:46:19,851 - #37 ]
INFO  00:46:19,851 - #13 ;
INFO  00:46:19,852 - #45 z
INFO  00:46:19,852 - #36 [
INFO  00:46:19,852 - #9 0
INFO  00:46:19,852 - #37 ]
INFO  00:46:19,852 - #28 =
INFO  00:46:19,852 - #9 0
INFO  00:46:19,852 - #13 ;
INFO  00:46:19,853 - #41 print
INFO  00:46:19,853 - #32 (
INFO  00:46:19,853 - #45 z
INFO  00:46:19,853 - #36 [
INFO  00:46:19,853 - #9 0
INFO  00:46:19,853 - #37 ]
INFO  00:46:19,853 - #33 )
INFO  00:46:19,853 - #13 ;
INFO  00:46:19,853 - #41 print
INFO  00:46:19,853 - #32 (
INFO  00:46:19,853 - #9 1
INFO  00:46:19,853 - #12 ,
INFO  00:46:19,854 - #9 1
INFO  00:46:19,854 - #33 )
INFO  00:46:19,854 - #13 ;
INFO  00:46:19,854 - #41 print
INFO  00:46:19,854 - #32 (
INFO  00:46:19,854 - #10 a
INFO  00:46:19,854 - #12 ,
INFO  00:46:19,854 - #9 1
INFO  00:46:19,854 - #33 )
INFO  00:46:19,854 - #13 ;
INFO  00:46:19,854 - #45 y
INFO  00:46:19,854 - #28 =
INFO  00:46:19,854 - #9 5
INFO  00:46:19,854 - #13 ;
INFO  00:46:19,854 - #45 x
INFO  00:46:19,854 - #28 =
INFO  00:46:19,854 - #45 y
INFO  00:46:19,855 - #15 +
INFO  00:46:19,855 - #9 3
INFO  00:46:19,855 - #13 ;
INFO  00:46:19,856 - #41 print
INFO  00:46:19,856 - #32 (
INFO  00:46:19,856 - #45 x
INFO  00:46:19,856 - #33 )
INFO  00:46:19,856 - #13 ;
INFO  00:46:19,856 - #45 y
INFO  00:46:19,856 - #28 =
INFO  00:46:19,856 - #32 (
INFO  00:46:19,856 - #45 x
INFO  00:46:19,856 - #33 )
INFO  00:46:19,856 - #13 ;
INFO  00:46:19,856 - #45 x
INFO  00:46:19,856 - #29 ++
INFO  00:46:19,856 - #13 ;
INFO  00:46:19,856 - #41 print
INFO  00:46:19,856 - #32 (
INFO  00:46:19,856 - #45 x
INFO  00:46:19,857 - #33 )
INFO  00:46:19,857 - #13 ;
INFO  00:46:19,857 - #45 x
INFO  00:46:19,857 - #30 --
INFO  00:46:19,857 - #13 ;
INFO  00:46:19,857 - #41 print
INFO  00:46:19,857 - #32 (
INFO  00:46:19,857 - #32 (
INFO  00:46:19,857 - #32 (
INFO  00:46:19,857 - #45 x
INFO  00:46:19,857 - #33 )
INFO  00:46:19,857 - #33 )
INFO  00:46:19,857 - #33 )
INFO  00:46:19,858 - #13 ;
INFO  00:46:19,858 - #45 x
INFO  00:46:19,858 - #28 =
INFO  00:46:19,858 - #45 x
INFO  00:46:19,858 - #15 +
INFO  00:46:19,858 - #32 (
INFO  00:46:19,858 - #16 -
INFO  00:46:19,858 - #9 2
INFO  00:46:19,858 - #33 )
INFO  00:46:19,858 - #13 ;
INFO  00:46:19,858 - #41 print
INFO  00:46:19,858 - #32 (
INFO  00:46:19,858 - #45 x
INFO  00:46:19,858 - #33 )
INFO  00:46:19,858 - #13 ;
INFO  00:46:19,858 - #45 x
INFO  00:46:19,858 - #28 =
INFO  00:46:19,858 - #45 y
INFO  00:46:19,858 - #17 *
INFO  00:46:19,858 - #9 2
INFO  00:46:19,859 - #13 ;
INFO  00:46:19,859 - #41 print
INFO  00:46:19,859 - #32 (
INFO  00:46:19,859 - #45 x
INFO  00:46:19,860 - #33 )
INFO  00:46:19,860 - #13 ;
INFO  00:46:19,860 - #45 y
INFO  00:46:19,860 - #28 =
INFO  00:46:19,860 - #45 x
INFO  00:46:19,860 - #18 /
INFO  00:46:19,860 - #9 4
INFO  00:46:19,860 - #13 ;
INFO  00:46:19,860 - #41 print
INFO  00:46:19,860 - #32 (
INFO  00:46:19,860 - #45 y
INFO  00:46:19,860 - #33 )
INFO  00:46:19,860 - #13 ;
INFO  00:46:19,860 - #45 x
INFO  00:46:19,860 - #28 =
INFO  00:46:19,860 - #45 y
INFO  00:46:19,860 - #19 %
INFO  00:46:19,860 - #9 3
INFO  00:46:19,861 - #13 ;
INFO  00:46:19,861 - #41 print
INFO  00:46:19,861 - #32 (
INFO  00:46:19,861 - #45 x
INFO  00:46:19,861 - #33 )
INFO  00:46:19,861 - #13 ;
INFO  00:46:19,861 - #42 read
INFO  00:46:19,861 - #32 (
INFO  00:46:19,861 - #45 x
INFO  00:46:19,861 - #33 )
INFO  00:46:19,861 - #13 ;
INFO  00:46:19,861 - #45 x
INFO  00:46:19,862 - #28 =
INFO  00:46:19,862 - #45 x
INFO  00:46:19,862 - #17 *
INFO  00:46:19,862 - #45 y
INFO  00:46:19,862 - #13 ;
INFO  00:46:19,862 - #41 print
INFO  00:46:19,862 - #32 (
INFO  00:46:19,862 - #45 x
INFO  00:46:19,862 - #33 )
INFO  00:46:19,862 - #13 ;
INFO  00:46:19,862 - #41 print
INFO  00:46:19,862 - #32 (
INFO  00:46:19,862 - #11 false
INFO  00:46:19,862 - #12 ,
INFO  00:46:19,862 - #9 20
INFO  00:46:19,862 - #33 )
INFO  00:46:19,862 - #13 ;
INFO  00:46:19,862 - #8 return
INFO  00:46:19,862 - #9 0
INFO  00:46:19,862 - #13 ;
INFO  00:46:19,862 - #35 }
INFO  00:46:19,863 - #35 }
INFO  00:46:19,864 - ***Abstract tree****
INFO  00:46:19,864 - #0
DEBUG 00:46:19,872 - Variable with name x has the address of 0
DEBUG 00:46:19,873 - Variable with name y has the address of 2
DEBUG 00:46:19,873 - found constant with value 5of type 1
DEBUG 00:46:19,873 - constant factor is type 1
DEBUG 00:46:19,873 - term SingleFactorterm is type 1
DEBUG 00:46:19,873 - exprWithNoMinus is type 1
DEBUG 00:46:19,873 - term SingleFactorterm is type 3
DEBUG 00:46:19,873 - exprWithNoMinus is type 3
DEBUG 00:46:19,873 - found constant with value 0of type 1
DEBUG 00:46:19,873 - constant factor is type 1
DEBUG 00:46:19,873 - term SingleFactorterm is type 1
DEBUG 00:46:19,873 - exprWithNoMinus is type 1
DEBUG 00:46:19,873 - found constant with value 0of type 1
DEBUG 00:46:19,873 - constant factor is type 1
DEBUG 00:46:19,873 - term SingleFactorterm is type 1
DEBUG 00:46:19,873 - exprWithNoMinus is type 1
DEBUG 00:46:19,873 - found constant with value 0of type 1
DEBUG 00:46:19,874 - constant factor is type 1
DEBUG 00:46:19,874 - term SingleFactorterm is type 1
DEBUG 00:46:19,874 - exprWithNoMinus is type 1
DEBUG 00:46:19,874 - term SingleFactorterm is type 1
DEBUG 00:46:19,874 - exprWithNoMinus is type 1
DEBUG 00:46:19,874 - print statement has arg of type 1
DEBUG 00:46:19,874 - found constant with value 1of type 1
DEBUG 00:46:19,874 - constant factor is type 1
DEBUG 00:46:19,874 - term SingleFactorterm is type 1
DEBUG 00:46:19,874 - exprWithNoMinus is type 1
DEBUG 00:46:19,874 - found constant with value 1of type 1
DEBUG 00:46:19,874 - print statement has arg of type 1
DEBUG 00:46:19,874 - found constant with value *****of type 2
DEBUG 00:46:19,874 - found constant with value 97of type 2
DEBUG 00:46:19,874 - constant factor is type 2
DEBUG 00:46:19,874 - term SingleFactorterm is type 2
DEBUG 00:46:19,874 - exprWithNoMinus is type 2
DEBUG 00:46:19,874 - found constant with value 1of type 1
DEBUG 00:46:19,874 - print statement has arg of type 2
DEBUG 00:46:19,874 - found constant with value 5of type 1
DEBUG 00:46:19,874 - constant factor is type 1
DEBUG 00:46:19,874 - term SingleFactorterm is type 1
DEBUG 00:46:19,874 - exprWithNoMinus is type 1
DEBUG 00:46:19,874 - term SingleFactorterm is type 1
DEBUG 00:46:19,874 - found constant with value 3of type 1
DEBUG 00:46:19,874 - constant factor is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - print statement has arg of type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - print statement has arg of type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - print statement has arg of type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - found constant with value 2of type 1
DEBUG 00:46:19,875 - constant factor is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - ExprWithMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - term SingleFactorterm is type 1
DEBUG 00:46:19,875 - exprWithNoMinus is type 1
DEBUG 00:46:19,875 - print statement has arg of type 1
DEBUG 00:46:19,875 - found constant with value 2of type 1
DEBUG 00:46:19,875 - constant factor is type 1
DEBUG 00:46:19,875 - term element is type 1
DEBUG 00:46:19,875 - term list single is type 1
DEBUG 00:46:19,875 - term MultiFactorTerm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - term SingleFactorterm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - print statement has arg of type 1
DEBUG 00:46:19,876 - found constant with value 4of type 1
DEBUG 00:46:19,876 - constant factor is type 1
DEBUG 00:46:19,876 - term element is type 1
DEBUG 00:46:19,876 - term list single is type 1
DEBUG 00:46:19,876 - term MultiFactorTerm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - term SingleFactorterm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - print statement has arg of type 1
DEBUG 00:46:19,876 - found constant with value 3of type 1
DEBUG 00:46:19,876 - constant factor is type 1
DEBUG 00:46:19,876 - term element is type 1
DEBUG 00:46:19,876 - term list single is type 1
DEBUG 00:46:19,876 - term MultiFactorTerm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - term SingleFactorterm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - print statement has arg of type 1
DEBUG 00:46:19,876 - term element is type 1
DEBUG 00:46:19,876 - term list single is type 1
DEBUG 00:46:19,876 - term MultiFactorTerm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - term SingleFactorterm is type 1
DEBUG 00:46:19,876 - exprWithNoMinus is type 1
DEBUG 00:46:19,876 - print statement has arg of type 1
DEBUG 00:46:19,876 - found constant with value 0of type 1
DEBUG 00:46:19,877 - constant factor is type 1
DEBUG 00:46:19,877 - term SingleFactorterm is type 1
DEBUG 00:46:19,877 - exprWithNoMinus is type 1
DEBUG 00:46:19,877 - found constant with value 20of type 1
DEBUG 00:46:19,877 - print statement has arg of type 1
DEBUG 00:46:19,877 - found constant with value 0of type 1
DEBUG 00:46:19,877 - constant factor is type 1
DEBUG 00:46:19,877 - term SingleFactorterm is type 1
DEBUG 00:46:19,877 - exprWithNoMinus is type 1
INFO  00:46:19,877 - Print calls = 0
INFO  00:46:19,878 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:46:19,886 - Parsiranje uspesno zavrseno!
INFO  00:46:23,670 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:46:23,708 - #40 program
INFO  00:46:23,708 - #45 MJProgram
INFO  00:46:23,708 - #45 int
INFO  00:46:23,708 - #45 x
INFO  00:46:23,708 - #13 ;
INFO  00:46:23,709 - #45 int
INFO  00:46:23,709 - #45 z
INFO  00:46:23,709 - #36 [
INFO  00:46:23,709 - #37 ]
INFO  00:46:23,709 - #13 ;
INFO  00:46:23,709 - #34 {
INFO  00:46:23,709 - #45 int
INFO  00:46:23,710 - #45 main
INFO  00:46:23,711 - #32 (
INFO  00:46:23,711 - #33 )
INFO  00:46:23,711 - #45 int
INFO  00:46:23,711 - #45 y
INFO  00:46:23,711 - #13 ;
INFO  00:46:23,711 - #34 {
INFO  00:46:23,711 - #45 z
INFO  00:46:23,711 - #28 =
INFO  00:46:23,711 - #31 new
INFO  00:46:23,711 - #45 int
INFO  00:46:23,711 - #36 [
INFO  00:46:23,711 - #9 5
INFO  00:46:23,711 - #37 ]
INFO  00:46:23,712 - #13 ;
INFO  00:46:23,713 - #45 z
INFO  00:46:23,713 - #36 [
INFO  00:46:23,713 - #9 0
INFO  00:46:23,713 - #37 ]
INFO  00:46:23,713 - #28 =
INFO  00:46:23,713 - #9 0
INFO  00:46:23,713 - #13 ;
INFO  00:46:23,713 - #41 print
INFO  00:46:23,713 - #32 (
INFO  00:46:23,713 - #45 z
INFO  00:46:23,713 - #36 [
INFO  00:46:23,713 - #9 0
INFO  00:46:23,714 - #37 ]
INFO  00:46:23,714 - #33 )
INFO  00:46:23,714 - #13 ;
INFO  00:46:23,714 - #41 print
INFO  00:46:23,714 - #32 (
INFO  00:46:23,714 - #9 1
INFO  00:46:23,714 - #12 ,
INFO  00:46:23,714 - #9 1
INFO  00:46:23,714 - #33 )
INFO  00:46:23,714 - #13 ;
INFO  00:46:23,714 - #41 print
INFO  00:46:23,714 - #32 (
INFO  00:46:23,714 - #10 a
INFO  00:46:23,714 - #12 ,
INFO  00:46:23,715 - #9 1
INFO  00:46:23,715 - #33 )
INFO  00:46:23,715 - #13 ;
INFO  00:46:23,715 - #45 y
INFO  00:46:23,715 - #28 =
INFO  00:46:23,715 - #9 5
INFO  00:46:23,715 - #13 ;
INFO  00:46:23,715 - #45 x
INFO  00:46:23,715 - #28 =
INFO  00:46:23,715 - #45 y
INFO  00:46:23,715 - #15 +
INFO  00:46:23,715 - #9 3
INFO  00:46:23,716 - #13 ;
INFO  00:46:23,716 - #41 print
INFO  00:46:23,716 - #32 (
INFO  00:46:23,716 - #45 x
INFO  00:46:23,716 - #33 )
INFO  00:46:23,716 - #13 ;
INFO  00:46:23,716 - #45 y
INFO  00:46:23,717 - #28 =
INFO  00:46:23,717 - #32 (
INFO  00:46:23,717 - #45 x
INFO  00:46:23,717 - #33 )
INFO  00:46:23,717 - #13 ;
INFO  00:46:23,717 - #45 x
INFO  00:46:23,717 - #29 ++
INFO  00:46:23,717 - #13 ;
INFO  00:46:23,717 - #41 print
INFO  00:46:23,717 - #32 (
INFO  00:46:23,717 - #45 x
INFO  00:46:23,717 - #33 )
INFO  00:46:23,717 - #13 ;
INFO  00:46:23,717 - #45 x
INFO  00:46:23,717 - #30 --
INFO  00:46:23,717 - #13 ;
INFO  00:46:23,717 - #41 print
INFO  00:46:23,717 - #32 (
INFO  00:46:23,717 - #32 (
INFO  00:46:23,718 - #32 (
INFO  00:46:23,718 - #45 x
INFO  00:46:23,718 - #33 )
INFO  00:46:23,718 - #33 )
INFO  00:46:23,718 - #33 )
INFO  00:46:23,718 - #13 ;
INFO  00:46:23,718 - #45 x
INFO  00:46:23,718 - #28 =
INFO  00:46:23,718 - #45 x
INFO  00:46:23,718 - #15 +
INFO  00:46:23,718 - #32 (
INFO  00:46:23,718 - #16 -
INFO  00:46:23,718 - #9 2
INFO  00:46:23,718 - #33 )
INFO  00:46:23,718 - #13 ;
INFO  00:46:23,718 - #41 print
INFO  00:46:23,718 - #32 (
INFO  00:46:23,718 - #45 x
INFO  00:46:23,718 - #33 )
INFO  00:46:23,718 - #13 ;
INFO  00:46:23,718 - #45 x
INFO  00:46:23,718 - #28 =
INFO  00:46:23,719 - #45 y
INFO  00:46:23,719 - #17 *
INFO  00:46:23,719 - #9 2
INFO  00:46:23,719 - #13 ;
INFO  00:46:23,720 - #41 print
INFO  00:46:23,720 - #32 (
INFO  00:46:23,720 - #45 x
INFO  00:46:23,720 - #33 )
INFO  00:46:23,720 - #13 ;
INFO  00:46:23,720 - #45 y
INFO  00:46:23,720 - #28 =
INFO  00:46:23,720 - #45 x
INFO  00:46:23,720 - #18 /
INFO  00:46:23,720 - #9 4
INFO  00:46:23,721 - #13 ;
INFO  00:46:23,721 - #41 print
INFO  00:46:23,721 - #32 (
INFO  00:46:23,721 - #45 y
INFO  00:46:23,721 - #33 )
INFO  00:46:23,721 - #13 ;
INFO  00:46:23,721 - #45 x
INFO  00:46:23,721 - #28 =
INFO  00:46:23,722 - #45 y
INFO  00:46:23,722 - #19 %
INFO  00:46:23,722 - #9 3
INFO  00:46:23,722 - #13 ;
INFO  00:46:23,722 - #41 print
INFO  00:46:23,722 - #32 (
INFO  00:46:23,722 - #45 x
INFO  00:46:23,722 - #33 )
INFO  00:46:23,722 - #13 ;
INFO  00:46:23,723 - #42 read
INFO  00:46:23,723 - #32 (
INFO  00:46:23,723 - #45 x
INFO  00:46:23,723 - #33 )
INFO  00:46:23,723 - #13 ;
INFO  00:46:23,723 - #45 x
INFO  00:46:23,723 - #28 =
INFO  00:46:23,723 - #45 x
INFO  00:46:23,723 - #17 *
INFO  00:46:23,723 - #45 y
INFO  00:46:23,724 - #13 ;
INFO  00:46:23,724 - #41 print
INFO  00:46:23,724 - #32 (
INFO  00:46:23,724 - #45 x
INFO  00:46:23,724 - #33 )
INFO  00:46:23,724 - #13 ;
INFO  00:46:23,724 - #41 print
INFO  00:46:23,724 - #32 (
INFO  00:46:23,724 - #11 false
INFO  00:46:23,724 - #12 ,
INFO  00:46:23,724 - #9 20
INFO  00:46:23,724 - #33 )
INFO  00:46:23,724 - #13 ;
INFO  00:46:23,724 - #8 return
INFO  00:46:23,724 - #9 0
INFO  00:46:23,724 - #13 ;
INFO  00:46:23,724 - #35 }
INFO  00:46:23,724 - #35 }
INFO  00:46:23,727 - ***Abstract tree****
INFO  00:46:23,727 - #0
DEBUG 00:46:23,736 - Variable with name x has the address of 0
DEBUG 00:46:23,736 - Variable with name y has the address of 2
DEBUG 00:46:23,736 - found constant with value 5of type 1
DEBUG 00:46:23,736 - constant factor is type 1
DEBUG 00:46:23,736 - term SingleFactorterm is type 1
DEBUG 00:46:23,736 - exprWithNoMinus is type 1
DEBUG 00:46:23,736 - term SingleFactorterm is type 3
DEBUG 00:46:23,736 - exprWithNoMinus is type 3
DEBUG 00:46:23,736 - found constant with value 0of type 1
DEBUG 00:46:23,736 - constant factor is type 1
DEBUG 00:46:23,736 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - exprWithNoMinus is type 1
DEBUG 00:46:23,737 - found constant with value 0of type 1
DEBUG 00:46:23,737 - constant factor is type 1
DEBUG 00:46:23,737 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - exprWithNoMinus is type 1
DEBUG 00:46:23,737 - found constant with value 0of type 1
DEBUG 00:46:23,737 - constant factor is type 1
DEBUG 00:46:23,737 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - exprWithNoMinus is type 1
DEBUG 00:46:23,737 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - exprWithNoMinus is type 1
DEBUG 00:46:23,737 - print statement has arg of type 1
DEBUG 00:46:23,737 - found constant with value 1of type 1
DEBUG 00:46:23,737 - constant factor is type 1
DEBUG 00:46:23,737 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - exprWithNoMinus is type 1
DEBUG 00:46:23,737 - found constant with value 1of type 1
DEBUG 00:46:23,737 - print statement has arg of type 1
DEBUG 00:46:23,737 - found constant with value *****of type 2
DEBUG 00:46:23,737 - found constant with value 97of type 2
DEBUG 00:46:23,737 - constant factor is type 2
DEBUG 00:46:23,737 - term SingleFactorterm is type 2
DEBUG 00:46:23,737 - exprWithNoMinus is type 2
DEBUG 00:46:23,737 - found constant with value 1of type 1
DEBUG 00:46:23,737 - print statement has arg of type 2
DEBUG 00:46:23,737 - found constant with value 5of type 1
DEBUG 00:46:23,737 - constant factor is type 1
DEBUG 00:46:23,737 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - exprWithNoMinus is type 1
DEBUG 00:46:23,737 - term SingleFactorterm is type 1
DEBUG 00:46:23,737 - found constant with value 3of type 1
DEBUG 00:46:23,738 - constant factor is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - print statement has arg of type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - print statement has arg of type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - print statement has arg of type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - found constant with value 2of type 1
DEBUG 00:46:23,738 - constant factor is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - ExprWithMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - term SingleFactorterm is type 1
DEBUG 00:46:23,738 - exprWithNoMinus is type 1
DEBUG 00:46:23,738 - print statement has arg of type 1
DEBUG 00:46:23,738 - found constant with value 2of type 1
DEBUG 00:46:23,738 - constant factor is type 1
DEBUG 00:46:23,738 - term element is type 1
DEBUG 00:46:23,738 - term list single is type 1
DEBUG 00:46:23,738 - term MultiFactorTerm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - term SingleFactorterm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - print statement has arg of type 1
DEBUG 00:46:23,739 - found constant with value 4of type 1
DEBUG 00:46:23,739 - constant factor is type 1
DEBUG 00:46:23,739 - term element is type 1
DEBUG 00:46:23,739 - term list single is type 1
DEBUG 00:46:23,739 - term MultiFactorTerm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - term SingleFactorterm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - print statement has arg of type 1
DEBUG 00:46:23,739 - found constant with value 3of type 1
DEBUG 00:46:23,739 - constant factor is type 1
DEBUG 00:46:23,739 - term element is type 1
DEBUG 00:46:23,739 - term list single is type 1
DEBUG 00:46:23,739 - term MultiFactorTerm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - term SingleFactorterm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - print statement has arg of type 1
DEBUG 00:46:23,739 - term element is type 1
DEBUG 00:46:23,739 - term list single is type 1
DEBUG 00:46:23,739 - term MultiFactorTerm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - term SingleFactorterm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - print statement has arg of type 1
DEBUG 00:46:23,739 - found constant with value 0of type 1
DEBUG 00:46:23,739 - constant factor is type 1
DEBUG 00:46:23,739 - term SingleFactorterm is type 1
DEBUG 00:46:23,739 - exprWithNoMinus is type 1
DEBUG 00:46:23,739 - found constant with value 20of type 1
DEBUG 00:46:23,739 - print statement has arg of type 1
DEBUG 00:46:23,739 - found constant with value 0of type 1
DEBUG 00:46:23,739 - constant factor is type 1
DEBUG 00:46:23,740 - term SingleFactorterm is type 1
DEBUG 00:46:23,740 - exprWithNoMinus is type 1
INFO  00:46:23,740 - Print calls = 0
INFO  00:46:23,742 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:48:21,035 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:48:21,067 - #40 program
INFO  00:48:21,067 - #45 MJProgram
INFO  00:48:21,067 - #45 int
INFO  00:48:21,067 - #45 x
INFO  00:48:21,067 - #13 ;
INFO  00:48:21,067 - #45 int
INFO  00:48:21,068 - #45 z
INFO  00:48:21,068 - #36 [
INFO  00:48:21,068 - #37 ]
INFO  00:48:21,068 - #13 ;
INFO  00:48:21,069 - #34 {
INFO  00:48:21,069 - #45 int
INFO  00:48:21,069 - #45 main
INFO  00:48:21,070 - #32 (
INFO  00:48:21,070 - #33 )
INFO  00:48:21,070 - #45 int
INFO  00:48:21,070 - #45 y
INFO  00:48:21,070 - #13 ;
INFO  00:48:21,070 - #34 {
INFO  00:48:21,070 - #45 z
INFO  00:48:21,070 - #28 =
INFO  00:48:21,070 - #31 new
INFO  00:48:21,070 - #45 int
INFO  00:48:21,071 - #36 [
INFO  00:48:21,071 - #9 5
INFO  00:48:21,071 - #37 ]
INFO  00:48:21,072 - #13 ;
INFO  00:48:21,072 - #45 z
INFO  00:48:21,073 - #36 [
INFO  00:48:21,073 - #9 0
INFO  00:48:21,073 - #37 ]
INFO  00:48:21,073 - #28 =
INFO  00:48:21,073 - #9 0
INFO  00:48:21,073 - #13 ;
INFO  00:48:21,073 - #41 print
INFO  00:48:21,073 - #32 (
INFO  00:48:21,073 - #45 z
INFO  00:48:21,073 - #36 [
INFO  00:48:21,073 - #9 0
INFO  00:48:21,073 - #37 ]
INFO  00:48:21,073 - #33 )
INFO  00:48:21,074 - #13 ;
INFO  00:48:21,074 - #41 print
INFO  00:48:21,074 - #32 (
INFO  00:48:21,074 - #9 1
INFO  00:48:21,074 - #12 ,
INFO  00:48:21,074 - #9 1
INFO  00:48:21,074 - #33 )
INFO  00:48:21,074 - #13 ;
INFO  00:48:21,074 - #41 print
INFO  00:48:21,074 - #32 (
INFO  00:48:21,074 - #10 a
INFO  00:48:21,074 - #12 ,
INFO  00:48:21,074 - #9 1
INFO  00:48:21,074 - #33 )
INFO  00:48:21,074 - #13 ;
INFO  00:48:21,074 - #45 y
INFO  00:48:21,075 - #28 =
INFO  00:48:21,075 - #9 5
INFO  00:48:21,075 - #13 ;
INFO  00:48:21,075 - #45 x
INFO  00:48:21,075 - #28 =
INFO  00:48:21,075 - #45 y
INFO  00:48:21,075 - #15 +
INFO  00:48:21,075 - #9 3
INFO  00:48:21,075 - #13 ;
INFO  00:48:21,076 - #41 print
INFO  00:48:21,076 - #32 (
INFO  00:48:21,076 - #45 x
INFO  00:48:21,076 - #33 )
INFO  00:48:21,076 - #13 ;
INFO  00:48:21,076 - #45 y
INFO  00:48:21,076 - #28 =
INFO  00:48:21,076 - #32 (
INFO  00:48:21,076 - #45 x
INFO  00:48:21,076 - #33 )
INFO  00:48:21,076 - #13 ;
INFO  00:48:21,076 - #45 x
INFO  00:48:21,076 - #29 ++
INFO  00:48:21,077 - #13 ;
INFO  00:48:21,077 - #41 print
INFO  00:48:21,077 - #32 (
INFO  00:48:21,077 - #45 x
INFO  00:48:21,077 - #33 )
INFO  00:48:21,077 - #13 ;
INFO  00:48:21,077 - #45 x
INFO  00:48:21,077 - #30 --
INFO  00:48:21,077 - #13 ;
INFO  00:48:21,077 - #41 print
INFO  00:48:21,077 - #32 (
INFO  00:48:21,077 - #32 (
INFO  00:48:21,077 - #32 (
INFO  00:48:21,077 - #45 x
INFO  00:48:21,077 - #33 )
INFO  00:48:21,077 - #33 )
INFO  00:48:21,077 - #33 )
INFO  00:48:21,077 - #13 ;
INFO  00:48:21,077 - #45 x
INFO  00:48:21,077 - #28 =
INFO  00:48:21,077 - #45 x
INFO  00:48:21,077 - #15 +
INFO  00:48:21,077 - #32 (
INFO  00:48:21,078 - #16 -
INFO  00:48:21,078 - #9 2
INFO  00:48:21,078 - #33 )
INFO  00:48:21,078 - #13 ;
INFO  00:48:21,078 - #41 print
INFO  00:48:21,078 - #32 (
INFO  00:48:21,078 - #45 x
INFO  00:48:21,078 - #33 )
INFO  00:48:21,078 - #13 ;
INFO  00:48:21,078 - #45 x
INFO  00:48:21,078 - #28 =
INFO  00:48:21,078 - #45 y
INFO  00:48:21,078 - #17 *
INFO  00:48:21,078 - #9 2
INFO  00:48:21,079 - #13 ;
INFO  00:48:21,079 - #41 print
INFO  00:48:21,079 - #32 (
INFO  00:48:21,079 - #45 x
INFO  00:48:21,079 - #33 )
INFO  00:48:21,079 - #13 ;
INFO  00:48:21,079 - #45 y
INFO  00:48:21,079 - #28 =
INFO  00:48:21,079 - #45 x
INFO  00:48:21,080 - #18 /
INFO  00:48:21,080 - #9 4
INFO  00:48:21,080 - #13 ;
INFO  00:48:21,080 - #41 print
INFO  00:48:21,080 - #32 (
INFO  00:48:21,080 - #45 y
INFO  00:48:21,080 - #33 )
INFO  00:48:21,080 - #13 ;
INFO  00:48:21,080 - #45 x
INFO  00:48:21,080 - #28 =
INFO  00:48:21,080 - #45 y
INFO  00:48:21,080 - #19 %
INFO  00:48:21,080 - #9 3
INFO  00:48:21,081 - #13 ;
INFO  00:48:21,081 - #41 print
INFO  00:48:21,081 - #32 (
INFO  00:48:21,081 - #45 x
INFO  00:48:21,081 - #33 )
INFO  00:48:21,081 - #13 ;
INFO  00:48:21,081 - #42 read
INFO  00:48:21,081 - #32 (
INFO  00:48:21,081 - #45 x
INFO  00:48:21,081 - #33 )
INFO  00:48:21,081 - #13 ;
INFO  00:48:21,081 - #45 x
INFO  00:48:21,081 - #28 =
INFO  00:48:21,081 - #45 x
INFO  00:48:21,081 - #17 *
INFO  00:48:21,081 - #45 y
INFO  00:48:21,081 - #13 ;
INFO  00:48:21,081 - #41 print
INFO  00:48:21,081 - #32 (
INFO  00:48:21,081 - #45 x
INFO  00:48:21,081 - #33 )
INFO  00:48:21,081 - #13 ;
INFO  00:48:21,082 - #41 print
INFO  00:48:21,082 - #32 (
INFO  00:48:21,082 - #11 false
INFO  00:48:21,082 - #12 ,
INFO  00:48:21,082 - #9 20
INFO  00:48:21,082 - #33 )
INFO  00:48:21,082 - #13 ;
INFO  00:48:21,082 - #8 return
INFO  00:48:21,082 - #9 0
INFO  00:48:21,082 - #13 ;
INFO  00:48:21,082 - #35 }
INFO  00:48:21,082 - #35 }
INFO  00:48:21,083 - ***Abstract tree****
INFO  00:48:21,083 - #0
DEBUG 00:48:21,093 - Variable with name x has the address of 0
DEBUG 00:48:21,093 - Variable with name y has the address of 2
DEBUG 00:48:21,093 - found constant with value 5of type 1
DEBUG 00:48:21,093 - constant factor is type 1
DEBUG 00:48:21,093 - term SingleFactorterm is type 1
DEBUG 00:48:21,093 - exprWithNoMinus is type 1
DEBUG 00:48:21,093 - term SingleFactorterm is type 3
DEBUG 00:48:21,093 - exprWithNoMinus is type 3
DEBUG 00:48:21,093 - found constant with value 0of type 1
DEBUG 00:48:21,093 - constant factor is type 1
DEBUG 00:48:21,093 - term SingleFactorterm is type 1
DEBUG 00:48:21,093 - exprWithNoMinus is type 1
DEBUG 00:48:21,093 - found constant with value 0of type 1
DEBUG 00:48:21,093 - constant factor is type 1
DEBUG 00:48:21,093 - term SingleFactorterm is type 1
DEBUG 00:48:21,093 - exprWithNoMinus is type 1
DEBUG 00:48:21,093 - found constant with value 0of type 1
DEBUG 00:48:21,093 - constant factor is type 1
DEBUG 00:48:21,093 - term SingleFactorterm is type 1
DEBUG 00:48:21,093 - exprWithNoMinus is type 1
DEBUG 00:48:21,093 - term SingleFactorterm is type 1
DEBUG 00:48:21,093 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - print statement has arg of type 1
DEBUG 00:48:21,094 - found constant with value 1of type 1
DEBUG 00:48:21,094 - constant factor is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - found constant with value 1of type 1
DEBUG 00:48:21,094 - print statement has arg of type 1
DEBUG 00:48:21,094 - found constant with value *****of type 2
DEBUG 00:48:21,094 - found constant with value 97of type 2
DEBUG 00:48:21,094 - constant factor is type 2
DEBUG 00:48:21,094 - term SingleFactorterm is type 2
DEBUG 00:48:21,094 - exprWithNoMinus is type 2
DEBUG 00:48:21,094 - found constant with value 1of type 1
DEBUG 00:48:21,094 - print statement has arg of type 2
DEBUG 00:48:21,094 - found constant with value 5of type 1
DEBUG 00:48:21,094 - constant factor is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - found constant with value 3of type 1
DEBUG 00:48:21,094 - constant factor is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - print statement has arg of type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - term SingleFactorterm is type 1
DEBUG 00:48:21,094 - exprWithNoMinus is type 1
DEBUG 00:48:21,094 - print statement has arg of type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - print statement has arg of type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - found constant with value 2of type 1
DEBUG 00:48:21,095 - constant factor is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - ExprWithMinus is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - print statement has arg of type 1
DEBUG 00:48:21,095 - found constant with value 2of type 1
DEBUG 00:48:21,095 - constant factor is type 1
DEBUG 00:48:21,095 - term element is type 1
DEBUG 00:48:21,095 - term list single is type 1
DEBUG 00:48:21,095 - term MultiFactorTerm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - print statement has arg of type 1
DEBUG 00:48:21,095 - found constant with value 4of type 1
DEBUG 00:48:21,095 - constant factor is type 1
DEBUG 00:48:21,095 - term element is type 1
DEBUG 00:48:21,095 - term list single is type 1
DEBUG 00:48:21,095 - term MultiFactorTerm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - term SingleFactorterm is type 1
DEBUG 00:48:21,095 - exprWithNoMinus is type 1
DEBUG 00:48:21,095 - print statement has arg of type 1
DEBUG 00:48:21,096 - found constant with value 3of type 1
DEBUG 00:48:21,096 - constant factor is type 1
DEBUG 00:48:21,096 - term element is type 1
DEBUG 00:48:21,096 - term list single is type 1
DEBUG 00:48:21,096 - term MultiFactorTerm is type 1
DEBUG 00:48:21,096 - exprWithNoMinus is type 1
DEBUG 00:48:21,096 - term SingleFactorterm is type 1
DEBUG 00:48:21,096 - exprWithNoMinus is type 1
DEBUG 00:48:21,096 - print statement has arg of type 1
DEBUG 00:48:21,096 - term element is type 1
DEBUG 00:48:21,096 - term list single is type 1
DEBUG 00:48:21,096 - term MultiFactorTerm is type 1
DEBUG 00:48:21,096 - exprWithNoMinus is type 1
DEBUG 00:48:21,096 - term SingleFactorterm is type 1
DEBUG 00:48:21,096 - exprWithNoMinus is type 1
DEBUG 00:48:21,096 - print statement has arg of type 1
DEBUG 00:48:21,096 - found constant with value 0of type 1
DEBUG 00:48:21,096 - constant factor is type 1
DEBUG 00:48:21,096 - term SingleFactorterm is type 1
DEBUG 00:48:21,096 - exprWithNoMinus is type 1
DEBUG 00:48:21,096 - found constant with value 20of type 1
DEBUG 00:48:21,096 - print statement has arg of type 1
DEBUG 00:48:21,096 - found constant with value 0of type 1
DEBUG 00:48:21,096 - constant factor is type 1
DEBUG 00:48:21,096 - term SingleFactorterm is type 1
DEBUG 00:48:21,096 - exprWithNoMinus is type 1
INFO  00:48:21,096 - Print calls = 0
INFO  00:48:21,098 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:48:21,105 - Parsiranje uspesno zavrseno!
INFO  00:49:53,906 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:49:53,934 - #40 program
INFO  00:49:53,934 - #45 MJProgram
INFO  00:49:53,935 - #45 int
INFO  00:49:53,935 - #45 x
INFO  00:49:53,935 - #13 ;
INFO  00:49:53,935 - #45 int
INFO  00:49:53,935 - #45 z
INFO  00:49:53,935 - #36 [
INFO  00:49:53,935 - #37 ]
INFO  00:49:53,936 - #13 ;
INFO  00:49:53,936 - #34 {
INFO  00:49:53,936 - #45 int
INFO  00:49:53,936 - #45 main
INFO  00:49:53,937 - #32 (
INFO  00:49:53,937 - #33 )
INFO  00:49:53,937 - #45 int
INFO  00:49:53,937 - #45 y
INFO  00:49:53,937 - #13 ;
INFO  00:49:53,937 - #34 {
INFO  00:49:53,937 - #45 z
INFO  00:49:53,937 - #28 =
INFO  00:49:53,937 - #31 new
INFO  00:49:53,937 - #45 int
INFO  00:49:53,937 - #36 [
INFO  00:49:53,937 - #9 5
INFO  00:49:53,937 - #37 ]
INFO  00:49:53,939 - #13 ;
INFO  00:49:53,939 - #45 z
INFO  00:49:53,939 - #36 [
INFO  00:49:53,939 - #9 0
INFO  00:49:53,939 - #37 ]
INFO  00:49:53,939 - #28 =
INFO  00:49:53,939 - #9 0
INFO  00:49:53,940 - #13 ;
INFO  00:49:53,940 - #41 print
INFO  00:49:53,940 - #32 (
INFO  00:49:53,940 - #45 z
INFO  00:49:53,940 - #36 [
INFO  00:49:53,940 - #9 0
INFO  00:49:53,940 - #37 ]
INFO  00:49:53,940 - #33 )
INFO  00:49:53,940 - #13 ;
INFO  00:49:53,940 - #41 print
INFO  00:49:53,940 - #32 (
INFO  00:49:53,940 - #9 1
INFO  00:49:53,940 - #12 ,
INFO  00:49:53,940 - #9 1
INFO  00:49:53,940 - #33 )
INFO  00:49:53,941 - #13 ;
INFO  00:49:53,941 - #41 print
INFO  00:49:53,941 - #32 (
INFO  00:49:53,941 - #10 a
INFO  00:49:53,941 - #12 ,
INFO  00:49:53,941 - #9 1
INFO  00:49:53,941 - #33 )
INFO  00:49:53,941 - #13 ;
INFO  00:49:53,941 - #45 y
INFO  00:49:53,941 - #28 =
INFO  00:49:53,941 - #9 5
INFO  00:49:53,941 - #13 ;
INFO  00:49:53,941 - #45 x
INFO  00:49:53,941 - #28 =
INFO  00:49:53,941 - #45 y
INFO  00:49:53,941 - #15 +
INFO  00:49:53,941 - #9 3
INFO  00:49:53,942 - #13 ;
INFO  00:49:53,943 - #41 print
INFO  00:49:53,943 - #32 (
INFO  00:49:53,943 - #45 x
INFO  00:49:53,943 - #33 )
INFO  00:49:53,943 - #13 ;
INFO  00:49:53,943 - #45 y
INFO  00:49:53,943 - #28 =
INFO  00:49:53,943 - #32 (
INFO  00:49:53,943 - #45 x
INFO  00:49:53,943 - #33 )
INFO  00:49:53,943 - #13 ;
INFO  00:49:53,943 - #45 x
INFO  00:49:53,943 - #29 ++
INFO  00:49:53,943 - #13 ;
INFO  00:49:53,943 - #41 print
INFO  00:49:53,943 - #32 (
INFO  00:49:53,943 - #45 x
INFO  00:49:53,943 - #33 )
INFO  00:49:53,943 - #13 ;
INFO  00:49:53,943 - #45 x
INFO  00:49:53,943 - #30 --
INFO  00:49:53,944 - #13 ;
INFO  00:49:53,944 - #41 print
INFO  00:49:53,944 - #32 (
INFO  00:49:53,944 - #32 (
INFO  00:49:53,944 - #32 (
INFO  00:49:53,944 - #45 x
INFO  00:49:53,944 - #33 )
INFO  00:49:53,944 - #33 )
INFO  00:49:53,944 - #33 )
INFO  00:49:53,944 - #13 ;
INFO  00:49:53,944 - #45 x
INFO  00:49:53,944 - #28 =
INFO  00:49:53,944 - #45 x
INFO  00:49:53,944 - #15 +
INFO  00:49:53,944 - #32 (
INFO  00:49:53,944 - #16 -
INFO  00:49:53,944 - #9 2
INFO  00:49:53,944 - #33 )
INFO  00:49:53,944 - #13 ;
INFO  00:49:53,944 - #41 print
INFO  00:49:53,944 - #32 (
INFO  00:49:53,944 - #45 x
INFO  00:49:53,945 - #33 )
INFO  00:49:53,945 - #13 ;
INFO  00:49:53,945 - #45 x
INFO  00:49:53,945 - #28 =
INFO  00:49:53,945 - #45 y
INFO  00:49:53,945 - #17 *
INFO  00:49:53,945 - #9 2
INFO  00:49:53,945 - #13 ;
INFO  00:49:53,946 - #41 print
INFO  00:49:53,946 - #32 (
INFO  00:49:53,946 - #45 x
INFO  00:49:53,946 - #33 )
INFO  00:49:53,946 - #13 ;
INFO  00:49:53,946 - #45 y
INFO  00:49:53,946 - #28 =
INFO  00:49:53,946 - #45 x
INFO  00:49:53,946 - #18 /
INFO  00:49:53,946 - #9 4
INFO  00:49:53,947 - #13 ;
INFO  00:49:53,947 - #41 print
INFO  00:49:53,947 - #32 (
INFO  00:49:53,947 - #45 y
INFO  00:49:53,947 - #33 )
INFO  00:49:53,947 - #13 ;
INFO  00:49:53,947 - #45 x
INFO  00:49:53,947 - #28 =
INFO  00:49:53,947 - #45 y
INFO  00:49:53,947 - #19 %
INFO  00:49:53,947 - #9 3
INFO  00:49:53,947 - #13 ;
INFO  00:49:53,947 - #41 print
INFO  00:49:53,947 - #32 (
INFO  00:49:53,947 - #45 x
INFO  00:49:53,947 - #33 )
INFO  00:49:53,947 - #13 ;
INFO  00:49:53,948 - #42 read
INFO  00:49:53,948 - #32 (
INFO  00:49:53,948 - #45 x
INFO  00:49:53,948 - #33 )
INFO  00:49:53,948 - #13 ;
INFO  00:49:53,948 - #45 x
INFO  00:49:53,948 - #28 =
INFO  00:49:53,948 - #45 x
INFO  00:49:53,948 - #17 *
INFO  00:49:53,948 - #45 y
INFO  00:49:53,948 - #13 ;
INFO  00:49:53,948 - #41 print
INFO  00:49:53,948 - #32 (
INFO  00:49:53,948 - #45 x
INFO  00:49:53,948 - #33 )
INFO  00:49:53,948 - #13 ;
INFO  00:49:53,948 - #41 print
INFO  00:49:53,948 - #32 (
INFO  00:49:53,948 - #11 false
INFO  00:49:53,948 - #12 ,
INFO  00:49:53,948 - #9 20
INFO  00:49:53,948 - #33 )
INFO  00:49:53,949 - #13 ;
INFO  00:49:53,949 - #8 return
INFO  00:49:53,949 - #9 0
INFO  00:49:53,949 - #13 ;
INFO  00:49:53,949 - #35 }
INFO  00:49:53,949 - #35 }
INFO  00:49:53,950 - ***Abstract tree****
INFO  00:49:53,951 - #0
DEBUG 00:49:53,959 - Variable with name x has the address of 0
DEBUG 00:49:53,959 - Variable with name y has the address of 2
DEBUG 00:49:53,959 - found constant with value 5of type 1
DEBUG 00:49:53,959 - constant factor is type 1
DEBUG 00:49:53,959 - term SingleFactorterm is type 1
DEBUG 00:49:53,959 - exprWithNoMinus is type 1
DEBUG 00:49:53,959 - term SingleFactorterm is type 3
DEBUG 00:49:53,959 - exprWithNoMinus is type 3
DEBUG 00:49:53,959 - found constant with value 0of type 1
DEBUG 00:49:53,960 - constant factor is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - exprWithNoMinus is type 1
DEBUG 00:49:53,960 - found constant with value 0of type 1
DEBUG 00:49:53,960 - constant factor is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - exprWithNoMinus is type 1
DEBUG 00:49:53,960 - found constant with value 0of type 1
DEBUG 00:49:53,960 - constant factor is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - exprWithNoMinus is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - exprWithNoMinus is type 1
DEBUG 00:49:53,960 - print statement has arg of type 1
DEBUG 00:49:53,960 - found constant with value 1of type 1
DEBUG 00:49:53,960 - constant factor is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - exprWithNoMinus is type 1
DEBUG 00:49:53,960 - found constant with value 1of type 1
DEBUG 00:49:53,960 - print statement has arg of type 1
DEBUG 00:49:53,960 - found constant with value *****of type 2
DEBUG 00:49:53,960 - found constant with value 97of type 2
DEBUG 00:49:53,960 - constant factor is type 2
DEBUG 00:49:53,960 - term SingleFactorterm is type 2
DEBUG 00:49:53,960 - exprWithNoMinus is type 2
DEBUG 00:49:53,960 - found constant with value 1of type 1
DEBUG 00:49:53,960 - print statement has arg of type 2
DEBUG 00:49:53,960 - found constant with value 5of type 1
DEBUG 00:49:53,960 - constant factor is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - exprWithNoMinus is type 1
DEBUG 00:49:53,960 - term SingleFactorterm is type 1
DEBUG 00:49:53,960 - found constant with value 3of type 1
DEBUG 00:49:53,961 - constant factor is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - print statement has arg of type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - print statement has arg of type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - print statement has arg of type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - found constant with value 2of type 1
DEBUG 00:49:53,961 - constant factor is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - ExprWithMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - term SingleFactorterm is type 1
DEBUG 00:49:53,961 - exprWithNoMinus is type 1
DEBUG 00:49:53,961 - print statement has arg of type 1
DEBUG 00:49:53,961 - found constant with value 2of type 1
DEBUG 00:49:53,961 - constant factor is type 1
DEBUG 00:49:53,961 - term element is type 1
DEBUG 00:49:53,961 - term list single is type 1
DEBUG 00:49:53,961 - term MultiFactorTerm is type 1
DEBUG 00:49:53,962 - exprWithNoMinus is type 1
DEBUG 00:49:53,962 - term SingleFactorterm is type 1
DEBUG 00:49:53,962 - exprWithNoMinus is type 1
DEBUG 00:49:53,962 - print statement has arg of type 1
DEBUG 00:49:53,962 - found constant with value 4of type 1
DEBUG 00:49:53,962 - constant factor is type 1
DEBUG 00:49:53,962 - term element is type 1
DEBUG 00:49:53,962 - term list single is type 1
DEBUG 00:49:53,962 - term MultiFactorTerm is type 1
DEBUG 00:49:53,962 - exprWithNoMinus is type 1
DEBUG 00:49:53,962 - term SingleFactorterm is type 1
DEBUG 00:49:53,962 - exprWithNoMinus is type 1
DEBUG 00:49:53,962 - print statement has arg of type 1
DEBUG 00:49:53,962 - found constant with value 3of type 1
DEBUG 00:49:53,962 - constant factor is type 1
DEBUG 00:49:53,962 - term element is type 1
DEBUG 00:49:53,962 - term list single is type 1
DEBUG 00:49:53,962 - term MultiFactorTerm is type 1
DEBUG 00:49:53,962 - exprWithNoMinus is type 1
DEBUG 00:49:53,962 - term SingleFactorterm is type 1
DEBUG 00:49:53,962 - exprWithNoMinus is type 1
DEBUG 00:49:53,962 - print statement has arg of type 1
DEBUG 00:49:53,962 - term element is type 1
DEBUG 00:49:53,963 - term list single is type 1
DEBUG 00:49:53,963 - term MultiFactorTerm is type 1
DEBUG 00:49:53,963 - exprWithNoMinus is type 1
DEBUG 00:49:53,963 - term SingleFactorterm is type 1
DEBUG 00:49:53,963 - exprWithNoMinus is type 1
DEBUG 00:49:53,963 - print statement has arg of type 1
DEBUG 00:49:53,963 - found constant with value 0of type 1
DEBUG 00:49:53,963 - constant factor is type 1
DEBUG 00:49:53,963 - term SingleFactorterm is type 1
DEBUG 00:49:53,963 - exprWithNoMinus is type 1
DEBUG 00:49:53,963 - found constant with value 20of type 1
DEBUG 00:49:53,963 - print statement has arg of type 1
DEBUG 00:49:53,963 - found constant with value 0of type 1
DEBUG 00:49:53,963 - constant factor is type 1
DEBUG 00:49:53,963 - term SingleFactorterm is type 1
DEBUG 00:49:53,963 - exprWithNoMinus is type 1
INFO  00:49:53,963 - Print calls = 0
INFO  00:49:53,965 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:49:53,975 - Parsiranje uspesno zavrseno!
INFO  00:52:17,767 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:52:17,799 - #40 program
INFO  00:52:17,799 - #45 MJProgram
INFO  00:52:17,799 - #45 int
INFO  00:52:17,799 - #45 x
INFO  00:52:17,799 - #13 ;
INFO  00:52:17,800 - #45 int
INFO  00:52:17,800 - #45 z
INFO  00:52:17,800 - #36 [
INFO  00:52:17,800 - #37 ]
INFO  00:52:17,800 - #13 ;
INFO  00:52:17,800 - #34 {
INFO  00:52:17,800 - #45 int
INFO  00:52:17,801 - #45 main
INFO  00:52:17,801 - #32 (
INFO  00:52:17,801 - #33 )
INFO  00:52:17,801 - #45 int
INFO  00:52:17,801 - #45 y
INFO  00:52:17,801 - #13 ;
INFO  00:52:17,801 - #34 {
INFO  00:52:17,802 - #45 z
INFO  00:52:17,802 - #28 =
INFO  00:52:17,802 - #31 new
INFO  00:52:17,802 - #45 int
INFO  00:52:17,802 - #36 [
INFO  00:52:17,802 - #9 5
INFO  00:52:17,802 - #37 ]
INFO  00:52:17,803 - #13 ;
INFO  00:52:17,804 - #45 z
INFO  00:52:17,804 - #36 [
INFO  00:52:17,804 - #9 0
INFO  00:52:17,804 - #37 ]
INFO  00:52:17,804 - #28 =
INFO  00:52:17,804 - #9 0
INFO  00:52:17,804 - #13 ;
INFO  00:52:17,804 - #41 print
INFO  00:52:17,804 - #32 (
INFO  00:52:17,804 - #45 z
INFO  00:52:17,804 - #36 [
INFO  00:52:17,804 - #9 0
INFO  00:52:17,804 - #37 ]
INFO  00:52:17,805 - #33 )
INFO  00:52:17,805 - #13 ;
INFO  00:52:17,805 - #41 print
INFO  00:52:17,805 - #32 (
INFO  00:52:17,805 - #9 1
INFO  00:52:17,805 - #12 ,
INFO  00:52:17,805 - #9 1
INFO  00:52:17,805 - #33 )
INFO  00:52:17,805 - #13 ;
INFO  00:52:17,805 - #41 print
INFO  00:52:17,805 - #32 (
INFO  00:52:17,805 - #10 a
INFO  00:52:17,805 - #12 ,
INFO  00:52:17,805 - #9 1
INFO  00:52:17,806 - #33 )
INFO  00:52:17,806 - #13 ;
INFO  00:52:17,806 - #45 y
INFO  00:52:17,806 - #28 =
INFO  00:52:17,806 - #9 5
INFO  00:52:17,806 - #13 ;
INFO  00:52:17,806 - #45 x
INFO  00:52:17,806 - #28 =
INFO  00:52:17,806 - #45 y
INFO  00:52:17,806 - #15 +
INFO  00:52:17,806 - #9 3
INFO  00:52:17,807 - #13 ;
INFO  00:52:17,807 - #41 print
INFO  00:52:17,807 - #32 (
INFO  00:52:17,807 - #45 x
INFO  00:52:17,807 - #33 )
INFO  00:52:17,807 - #13 ;
INFO  00:52:17,807 - #45 y
INFO  00:52:17,807 - #28 =
INFO  00:52:17,807 - #32 (
INFO  00:52:17,807 - #45 x
INFO  00:52:17,807 - #33 )
INFO  00:52:17,807 - #13 ;
INFO  00:52:17,807 - #45 x
INFO  00:52:17,807 - #29 ++
INFO  00:52:17,807 - #13 ;
INFO  00:52:17,808 - #41 print
INFO  00:52:17,808 - #32 (
INFO  00:52:17,808 - #45 x
INFO  00:52:17,808 - #33 )
INFO  00:52:17,808 - #13 ;
INFO  00:52:17,808 - #45 x
INFO  00:52:17,808 - #30 --
INFO  00:52:17,808 - #13 ;
INFO  00:52:17,808 - #41 print
INFO  00:52:17,808 - #32 (
INFO  00:52:17,808 - #32 (
INFO  00:52:17,808 - #32 (
INFO  00:52:17,808 - #45 x
INFO  00:52:17,808 - #33 )
INFO  00:52:17,808 - #33 )
INFO  00:52:17,808 - #33 )
INFO  00:52:17,808 - #13 ;
INFO  00:52:17,808 - #45 x
INFO  00:52:17,808 - #28 =
INFO  00:52:17,808 - #45 x
INFO  00:52:17,808 - #15 +
INFO  00:52:17,809 - #32 (
INFO  00:52:17,809 - #16 -
INFO  00:52:17,809 - #9 2
INFO  00:52:17,809 - #33 )
INFO  00:52:17,809 - #13 ;
INFO  00:52:17,809 - #41 print
INFO  00:52:17,809 - #32 (
INFO  00:52:17,809 - #45 x
INFO  00:52:17,809 - #33 )
INFO  00:52:17,809 - #13 ;
INFO  00:52:17,809 - #45 x
INFO  00:52:17,809 - #28 =
INFO  00:52:17,809 - #45 y
INFO  00:52:17,809 - #17 *
INFO  00:52:17,809 - #9 2
INFO  00:52:17,810 - #13 ;
INFO  00:52:17,810 - #41 print
INFO  00:52:17,810 - #32 (
INFO  00:52:17,810 - #45 x
INFO  00:52:17,810 - #33 )
INFO  00:52:17,810 - #13 ;
INFO  00:52:17,810 - #45 y
INFO  00:52:17,811 - #28 =
INFO  00:52:17,811 - #45 x
INFO  00:52:17,811 - #18 /
INFO  00:52:17,811 - #9 4
INFO  00:52:17,811 - #13 ;
INFO  00:52:17,811 - #41 print
INFO  00:52:17,811 - #32 (
INFO  00:52:17,811 - #45 y
INFO  00:52:17,811 - #33 )
INFO  00:52:17,811 - #13 ;
INFO  00:52:17,811 - #45 x
INFO  00:52:17,811 - #28 =
INFO  00:52:17,811 - #45 y
INFO  00:52:17,811 - #19 %
INFO  00:52:17,811 - #9 3
INFO  00:52:17,812 - #13 ;
INFO  00:52:17,812 - #41 print
INFO  00:52:17,812 - #32 (
INFO  00:52:17,812 - #45 x
INFO  00:52:17,812 - #33 )
INFO  00:52:17,812 - #13 ;
INFO  00:52:17,812 - #42 read
INFO  00:52:17,812 - #32 (
INFO  00:52:17,812 - #45 x
INFO  00:52:17,812 - #33 )
INFO  00:52:17,812 - #13 ;
INFO  00:52:17,812 - #45 x
INFO  00:52:17,812 - #28 =
INFO  00:52:17,812 - #45 x
INFO  00:52:17,812 - #17 *
INFO  00:52:17,812 - #45 y
INFO  00:52:17,812 - #13 ;
INFO  00:52:17,813 - #41 print
INFO  00:52:17,813 - #32 (
INFO  00:52:17,813 - #45 x
INFO  00:52:17,813 - #33 )
INFO  00:52:17,813 - #13 ;
INFO  00:52:17,813 - #41 print
INFO  00:52:17,813 - #32 (
INFO  00:52:17,813 - #11 false
INFO  00:52:17,813 - #12 ,
INFO  00:52:17,813 - #9 20
INFO  00:52:17,813 - #33 )
INFO  00:52:17,813 - #13 ;
INFO  00:52:17,813 - #8 return
INFO  00:52:17,813 - #9 0
INFO  00:52:17,813 - #13 ;
INFO  00:52:17,813 - #35 }
INFO  00:52:17,813 - #35 }
INFO  00:52:17,815 - ***Abstract tree****
INFO  00:52:17,815 - #0
DEBUG 00:52:17,824 - Variable with name x has the address of 0
DEBUG 00:52:17,825 - Variable with name y has the address of 2
DEBUG 00:52:17,825 - found constant with value 5of type 1
DEBUG 00:52:17,825 - constant factor is type 1
DEBUG 00:52:17,825 - term SingleFactorterm is type 1
DEBUG 00:52:17,825 - exprWithNoMinus is type 1
DEBUG 00:52:17,825 - term SingleFactorterm is type 3
DEBUG 00:52:17,825 - exprWithNoMinus is type 3
DEBUG 00:52:17,825 - found constant with value 0of type 1
DEBUG 00:52:17,825 - constant factor is type 1
DEBUG 00:52:17,825 - term SingleFactorterm is type 1
DEBUG 00:52:17,825 - exprWithNoMinus is type 1
DEBUG 00:52:17,825 - found constant with value 0of type 1
DEBUG 00:52:17,825 - constant factor is type 1
DEBUG 00:52:17,825 - term SingleFactorterm is type 1
DEBUG 00:52:17,825 - exprWithNoMinus is type 1
DEBUG 00:52:17,825 - found constant with value 0of type 1
DEBUG 00:52:17,825 - constant factor is type 1
DEBUG 00:52:17,825 - term SingleFactorterm is type 1
DEBUG 00:52:17,825 - exprWithNoMinus is type 1
DEBUG 00:52:17,825 - term SingleFactorterm is type 1
DEBUG 00:52:17,825 - exprWithNoMinus is type 1
DEBUG 00:52:17,825 - print statement has arg of type 1
DEBUG 00:52:17,825 - found constant with value 1of type 1
DEBUG 00:52:17,825 - constant factor is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - found constant with value 1of type 1
DEBUG 00:52:17,826 - print statement has arg of type 1
DEBUG 00:52:17,826 - found constant with value *****of type 2
DEBUG 00:52:17,826 - found constant with value 97of type 2
DEBUG 00:52:17,826 - constant factor is type 2
DEBUG 00:52:17,826 - term SingleFactorterm is type 2
DEBUG 00:52:17,826 - exprWithNoMinus is type 2
DEBUG 00:52:17,826 - found constant with value 1of type 1
DEBUG 00:52:17,826 - print statement has arg of type 2
DEBUG 00:52:17,826 - found constant with value 5of type 1
DEBUG 00:52:17,826 - constant factor is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - found constant with value 3of type 1
DEBUG 00:52:17,826 - constant factor is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - print statement has arg of type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - print statement has arg of type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,826 - term SingleFactorterm is type 1
DEBUG 00:52:17,826 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - print statement has arg of type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - found constant with value 2of type 1
DEBUG 00:52:17,827 - constant factor is type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - ExprWithMinus is type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - print statement has arg of type 1
DEBUG 00:52:17,827 - found constant with value 2of type 1
DEBUG 00:52:17,827 - constant factor is type 1
DEBUG 00:52:17,827 - term element is type 1
DEBUG 00:52:17,827 - term list single is type 1
DEBUG 00:52:17,827 - term MultiFactorTerm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - print statement has arg of type 1
DEBUG 00:52:17,827 - found constant with value 4of type 1
DEBUG 00:52:17,827 - constant factor is type 1
DEBUG 00:52:17,827 - term element is type 1
DEBUG 00:52:17,827 - term list single is type 1
DEBUG 00:52:17,827 - term MultiFactorTerm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - term SingleFactorterm is type 1
DEBUG 00:52:17,827 - exprWithNoMinus is type 1
DEBUG 00:52:17,827 - print statement has arg of type 1
DEBUG 00:52:17,827 - found constant with value 3of type 1
DEBUG 00:52:17,827 - constant factor is type 1
DEBUG 00:52:17,828 - term element is type 1
DEBUG 00:52:17,828 - term list single is type 1
DEBUG 00:52:17,828 - term MultiFactorTerm is type 1
DEBUG 00:52:17,828 - exprWithNoMinus is type 1
DEBUG 00:52:17,828 - term SingleFactorterm is type 1
DEBUG 00:52:17,828 - exprWithNoMinus is type 1
DEBUG 00:52:17,828 - print statement has arg of type 1
DEBUG 00:52:17,828 - term element is type 1
DEBUG 00:52:17,828 - term list single is type 1
DEBUG 00:52:17,828 - term MultiFactorTerm is type 1
DEBUG 00:52:17,828 - exprWithNoMinus is type 1
DEBUG 00:52:17,828 - term SingleFactorterm is type 1
DEBUG 00:52:17,828 - exprWithNoMinus is type 1
DEBUG 00:52:17,828 - print statement has arg of type 1
DEBUG 00:52:17,828 - found constant with value 0of type 1
DEBUG 00:52:17,828 - constant factor is type 1
DEBUG 00:52:17,828 - term SingleFactorterm is type 1
DEBUG 00:52:17,828 - exprWithNoMinus is type 1
DEBUG 00:52:17,828 - found constant with value 20of type 1
DEBUG 00:52:17,828 - print statement has arg of type 1
DEBUG 00:52:17,828 - found constant with value 0of type 1
DEBUG 00:52:17,828 - constant factor is type 1
DEBUG 00:52:17,828 - term SingleFactorterm is type 1
DEBUG 00:52:17,828 - exprWithNoMinus is type 1
INFO  00:52:17,828 - Print calls = 0
INFO  00:52:17,830 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:52:17,836 - Parsiranje uspesno zavrseno!
INFO  00:52:42,447 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:52:42,482 - #40 program
INFO  00:52:42,482 - #45 MJProgram
INFO  00:52:42,482 - #45 int
INFO  00:52:42,483 - #45 x
INFO  00:52:42,483 - #13 ;
INFO  00:52:42,483 - #45 int
INFO  00:52:42,483 - #45 z
INFO  00:52:42,483 - #36 [
INFO  00:52:42,483 - #37 ]
INFO  00:52:42,483 - #13 ;
INFO  00:52:42,483 - #34 {
INFO  00:52:42,484 - #45 int
INFO  00:52:42,485 - #45 main
INFO  00:52:42,485 - #32 (
INFO  00:52:42,485 - #33 )
INFO  00:52:42,485 - #45 int
INFO  00:52:42,485 - #45 y
INFO  00:52:42,485 - #13 ;
INFO  00:52:42,485 - #34 {
INFO  00:52:42,485 - #45 z
INFO  00:52:42,485 - #28 =
INFO  00:52:42,485 - #31 new
INFO  00:52:42,485 - #45 int
INFO  00:52:42,486 - #36 [
INFO  00:52:42,486 - #9 5
INFO  00:52:42,486 - #37 ]
INFO  00:52:42,487 - #13 ;
INFO  00:52:42,487 - #45 z
INFO  00:52:42,487 - #36 [
INFO  00:52:42,487 - #9 0
INFO  00:52:42,487 - #37 ]
INFO  00:52:42,487 - #28 =
INFO  00:52:42,487 - #9 0
INFO  00:52:42,487 - #13 ;
INFO  00:52:42,487 - #41 print
INFO  00:52:42,488 - #32 (
INFO  00:52:42,488 - #45 z
INFO  00:52:42,488 - #36 [
INFO  00:52:42,488 - #9 0
INFO  00:52:42,488 - #37 ]
INFO  00:52:42,488 - #33 )
INFO  00:52:42,488 - #13 ;
INFO  00:52:42,488 - #41 print
INFO  00:52:42,488 - #32 (
INFO  00:52:42,489 - #9 1
INFO  00:52:42,489 - #12 ,
INFO  00:52:42,489 - #9 1
INFO  00:52:42,489 - #33 )
INFO  00:52:42,489 - #13 ;
INFO  00:52:42,489 - #41 print
INFO  00:52:42,489 - #32 (
INFO  00:52:42,489 - #10 a
INFO  00:52:42,489 - #12 ,
INFO  00:52:42,489 - #9 1
INFO  00:52:42,489 - #33 )
INFO  00:52:42,489 - #13 ;
INFO  00:52:42,489 - #45 y
INFO  00:52:42,489 - #28 =
INFO  00:52:42,489 - #9 5
INFO  00:52:42,489 - #13 ;
INFO  00:52:42,489 - #45 x
INFO  00:52:42,489 - #28 =
INFO  00:52:42,489 - #45 y
INFO  00:52:42,489 - #15 +
INFO  00:52:42,490 - #9 3
INFO  00:52:42,490 - #13 ;
INFO  00:52:42,491 - #41 print
INFO  00:52:42,491 - #32 (
INFO  00:52:42,491 - #45 x
INFO  00:52:42,491 - #33 )
INFO  00:52:42,491 - #13 ;
INFO  00:52:42,491 - #45 y
INFO  00:52:42,491 - #28 =
INFO  00:52:42,491 - #32 (
INFO  00:52:42,491 - #45 x
INFO  00:52:42,491 - #33 )
INFO  00:52:42,491 - #13 ;
INFO  00:52:42,491 - #45 x
INFO  00:52:42,491 - #29 ++
INFO  00:52:42,491 - #13 ;
INFO  00:52:42,491 - #41 print
INFO  00:52:42,491 - #32 (
INFO  00:52:42,491 - #45 x
INFO  00:52:42,492 - #33 )
INFO  00:52:42,492 - #13 ;
INFO  00:52:42,492 - #45 x
INFO  00:52:42,492 - #30 --
INFO  00:52:42,492 - #13 ;
INFO  00:52:42,492 - #41 print
INFO  00:52:42,492 - #32 (
INFO  00:52:42,492 - #32 (
INFO  00:52:42,492 - #32 (
INFO  00:52:42,492 - #45 x
INFO  00:52:42,492 - #33 )
INFO  00:52:42,492 - #33 )
INFO  00:52:42,492 - #33 )
INFO  00:52:42,492 - #13 ;
INFO  00:52:42,492 - #45 x
INFO  00:52:42,492 - #28 =
INFO  00:52:42,492 - #45 x
INFO  00:52:42,492 - #15 +
INFO  00:52:42,492 - #32 (
INFO  00:52:42,492 - #16 -
INFO  00:52:42,492 - #9 2
INFO  00:52:42,492 - #33 )
INFO  00:52:42,493 - #13 ;
INFO  00:52:42,493 - #41 print
INFO  00:52:42,493 - #32 (
INFO  00:52:42,493 - #45 x
INFO  00:52:42,493 - #33 )
INFO  00:52:42,493 - #13 ;
INFO  00:52:42,493 - #45 x
INFO  00:52:42,493 - #28 =
INFO  00:52:42,493 - #45 y
INFO  00:52:42,493 - #17 *
INFO  00:52:42,493 - #9 2
INFO  00:52:42,494 - #13 ;
INFO  00:52:42,494 - #41 print
INFO  00:52:42,494 - #32 (
INFO  00:52:42,494 - #45 x
INFO  00:52:42,494 - #33 )
INFO  00:52:42,494 - #13 ;
INFO  00:52:42,494 - #45 y
INFO  00:52:42,494 - #28 =
INFO  00:52:42,494 - #45 x
INFO  00:52:42,494 - #18 /
INFO  00:52:42,494 - #9 4
INFO  00:52:42,495 - #13 ;
INFO  00:52:42,495 - #41 print
INFO  00:52:42,495 - #32 (
INFO  00:52:42,495 - #45 y
INFO  00:52:42,495 - #33 )
INFO  00:52:42,495 - #13 ;
INFO  00:52:42,495 - #45 x
INFO  00:52:42,495 - #28 =
INFO  00:52:42,495 - #45 y
INFO  00:52:42,496 - #19 %
INFO  00:52:42,496 - #9 3
INFO  00:52:42,496 - #13 ;
INFO  00:52:42,496 - #41 print
INFO  00:52:42,496 - #32 (
INFO  00:52:42,496 - #45 x
INFO  00:52:42,496 - #33 )
INFO  00:52:42,496 - #13 ;
INFO  00:52:42,496 - #42 read
INFO  00:52:42,496 - #32 (
INFO  00:52:42,496 - #45 x
INFO  00:52:42,496 - #33 )
INFO  00:52:42,496 - #13 ;
INFO  00:52:42,496 - #45 x
INFO  00:52:42,497 - #28 =
INFO  00:52:42,497 - #45 x
INFO  00:52:42,497 - #17 *
INFO  00:52:42,497 - #45 y
INFO  00:52:42,497 - #13 ;
INFO  00:52:42,497 - #41 print
INFO  00:52:42,497 - #32 (
INFO  00:52:42,497 - #45 x
INFO  00:52:42,497 - #33 )
INFO  00:52:42,497 - #13 ;
INFO  00:52:42,497 - #41 print
INFO  00:52:42,497 - #32 (
INFO  00:52:42,497 - #11 false
INFO  00:52:42,497 - #12 ,
INFO  00:52:42,497 - #9 20
INFO  00:52:42,497 - #33 )
INFO  00:52:42,497 - #13 ;
INFO  00:52:42,497 - #8 return
INFO  00:52:42,497 - #9 0
INFO  00:52:42,497 - #13 ;
INFO  00:52:42,497 - #35 }
INFO  00:52:42,497 - #35 }
INFO  00:52:42,500 - ***Abstract tree****
INFO  00:52:42,500 - #0
DEBUG 00:52:42,508 - Variable with name x has the address of 0
DEBUG 00:52:42,508 - Variable with name y has the address of 2
DEBUG 00:52:42,509 - found constant with value 5of type 1
DEBUG 00:52:42,509 - constant factor is type 1
DEBUG 00:52:42,509 - term SingleFactorterm is type 1
DEBUG 00:52:42,509 - exprWithNoMinus is type 1
DEBUG 00:52:42,509 - term SingleFactorterm is type 3
DEBUG 00:52:42,509 - exprWithNoMinus is type 3
DEBUG 00:52:42,509 - found constant with value 0of type 1
DEBUG 00:52:42,509 - constant factor is type 1
DEBUG 00:52:42,509 - term SingleFactorterm is type 1
DEBUG 00:52:42,509 - exprWithNoMinus is type 1
DEBUG 00:52:42,509 - found constant with value 0of type 1
DEBUG 00:52:42,509 - constant factor is type 1
DEBUG 00:52:42,509 - term SingleFactorterm is type 1
DEBUG 00:52:42,509 - exprWithNoMinus is type 1
DEBUG 00:52:42,509 - found constant with value 0of type 1
DEBUG 00:52:42,509 - constant factor is type 1
DEBUG 00:52:42,509 - term SingleFactorterm is type 1
DEBUG 00:52:42,509 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - print statement has arg of type 1
DEBUG 00:52:42,510 - found constant with value 1of type 1
DEBUG 00:52:42,510 - constant factor is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - found constant with value 1of type 1
DEBUG 00:52:42,510 - print statement has arg of type 1
DEBUG 00:52:42,510 - found constant with value *****of type 2
DEBUG 00:52:42,510 - found constant with value 97of type 2
DEBUG 00:52:42,510 - constant factor is type 2
DEBUG 00:52:42,510 - term SingleFactorterm is type 2
DEBUG 00:52:42,510 - exprWithNoMinus is type 2
DEBUG 00:52:42,510 - found constant with value 1of type 1
DEBUG 00:52:42,510 - print statement has arg of type 2
DEBUG 00:52:42,510 - found constant with value 5of type 1
DEBUG 00:52:42,510 - constant factor is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - found constant with value 3of type 1
DEBUG 00:52:42,510 - constant factor is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - print statement has arg of type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,510 - exprWithNoMinus is type 1
DEBUG 00:52:42,510 - print statement has arg of type 1
DEBUG 00:52:42,510 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - print statement has arg of type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - found constant with value 2of type 1
DEBUG 00:52:42,511 - constant factor is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - ExprWithMinus is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - print statement has arg of type 1
DEBUG 00:52:42,511 - found constant with value 2of type 1
DEBUG 00:52:42,511 - constant factor is type 1
DEBUG 00:52:42,511 - term element is type 1
DEBUG 00:52:42,511 - term list single is type 1
DEBUG 00:52:42,511 - term MultiFactorTerm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - print statement has arg of type 1
DEBUG 00:52:42,511 - found constant with value 4of type 1
DEBUG 00:52:42,511 - constant factor is type 1
DEBUG 00:52:42,511 - term element is type 1
DEBUG 00:52:42,511 - term list single is type 1
DEBUG 00:52:42,511 - term MultiFactorTerm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - term SingleFactorterm is type 1
DEBUG 00:52:42,511 - exprWithNoMinus is type 1
DEBUG 00:52:42,511 - print statement has arg of type 1
DEBUG 00:52:42,511 - found constant with value 3of type 1
DEBUG 00:52:42,511 - constant factor is type 1
DEBUG 00:52:42,511 - term element is type 1
DEBUG 00:52:42,512 - term list single is type 1
DEBUG 00:52:42,512 - term MultiFactorTerm is type 1
DEBUG 00:52:42,512 - exprWithNoMinus is type 1
DEBUG 00:52:42,512 - term SingleFactorterm is type 1
DEBUG 00:52:42,512 - exprWithNoMinus is type 1
DEBUG 00:52:42,512 - print statement has arg of type 1
DEBUG 00:52:42,512 - term element is type 1
DEBUG 00:52:42,512 - term list single is type 1
DEBUG 00:52:42,512 - term MultiFactorTerm is type 1
DEBUG 00:52:42,512 - exprWithNoMinus is type 1
DEBUG 00:52:42,512 - term SingleFactorterm is type 1
DEBUG 00:52:42,512 - exprWithNoMinus is type 1
DEBUG 00:52:42,512 - print statement has arg of type 1
DEBUG 00:52:42,512 - found constant with value 0of type 1
DEBUG 00:52:42,512 - constant factor is type 1
DEBUG 00:52:42,512 - term SingleFactorterm is type 1
DEBUG 00:52:42,512 - exprWithNoMinus is type 1
DEBUG 00:52:42,512 - found constant with value 20of type 1
DEBUG 00:52:42,512 - print statement has arg of type 1
DEBUG 00:52:42,512 - found constant with value 0of type 1
DEBUG 00:52:42,512 - constant factor is type 1
DEBUG 00:52:42,512 - term SingleFactorterm is type 1
DEBUG 00:52:42,512 - exprWithNoMinus is type 1
INFO  00:52:42,512 - Print calls = 0
INFO  00:52:42,514 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:54:07,375 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:54:07,407 - #40 program
INFO  00:54:07,407 - #45 MJProgram
INFO  00:54:07,407 - #45 int
INFO  00:54:07,407 - #45 x
INFO  00:54:07,407 - #13 ;
INFO  00:54:07,408 - #45 int
INFO  00:54:07,408 - #45 z
INFO  00:54:07,408 - #36 [
INFO  00:54:07,408 - #37 ]
INFO  00:54:07,408 - #13 ;
INFO  00:54:07,408 - #34 {
INFO  00:54:07,408 - #45 int
INFO  00:54:07,409 - #45 main
INFO  00:54:07,409 - #32 (
INFO  00:54:07,409 - #33 )
INFO  00:54:07,409 - #45 int
INFO  00:54:07,409 - #45 y
INFO  00:54:07,409 - #13 ;
INFO  00:54:07,409 - #34 {
INFO  00:54:07,409 - #45 z
INFO  00:54:07,409 - #28 =
INFO  00:54:07,409 - #31 new
INFO  00:54:07,410 - #45 int
INFO  00:54:07,410 - #36 [
INFO  00:54:07,410 - #9 5
INFO  00:54:07,410 - #37 ]
INFO  00:54:07,410 - #13 ;
INFO  00:54:07,411 - #45 z
INFO  00:54:07,411 - #36 [
INFO  00:54:07,411 - #9 0
INFO  00:54:07,411 - #37 ]
INFO  00:54:07,411 - #28 =
INFO  00:54:07,411 - #9 0
INFO  00:54:07,411 - #13 ;
INFO  00:54:07,411 - #41 print
INFO  00:54:07,411 - #32 (
INFO  00:54:07,412 - #45 z
INFO  00:54:07,412 - #36 [
INFO  00:54:07,412 - #9 0
INFO  00:54:07,412 - #37 ]
INFO  00:54:07,412 - #33 )
INFO  00:54:07,412 - #13 ;
INFO  00:54:07,412 - #41 print
INFO  00:54:07,412 - #32 (
INFO  00:54:07,412 - #9 1
INFO  00:54:07,412 - #12 ,
INFO  00:54:07,412 - #9 1
INFO  00:54:07,412 - #33 )
INFO  00:54:07,412 - #13 ;
INFO  00:54:07,412 - #41 print
INFO  00:54:07,412 - #32 (
INFO  00:54:07,412 - #10 a
INFO  00:54:07,413 - #12 ,
INFO  00:54:07,413 - #9 1
INFO  00:54:07,413 - #33 )
INFO  00:54:07,413 - #13 ;
INFO  00:54:07,413 - #45 y
INFO  00:54:07,413 - #28 =
INFO  00:54:07,413 - #9 5
INFO  00:54:07,413 - #13 ;
INFO  00:54:07,413 - #45 x
INFO  00:54:07,413 - #28 =
INFO  00:54:07,413 - #45 y
INFO  00:54:07,413 - #15 +
INFO  00:54:07,413 - #9 3
INFO  00:54:07,414 - #13 ;
INFO  00:54:07,414 - #41 print
INFO  00:54:07,414 - #32 (
INFO  00:54:07,414 - #45 x
INFO  00:54:07,414 - #33 )
INFO  00:54:07,414 - #13 ;
INFO  00:54:07,414 - #45 y
INFO  00:54:07,414 - #28 =
INFO  00:54:07,414 - #32 (
INFO  00:54:07,414 - #45 x
INFO  00:54:07,414 - #33 )
INFO  00:54:07,414 - #13 ;
INFO  00:54:07,415 - #45 x
INFO  00:54:07,415 - #29 ++
INFO  00:54:07,415 - #13 ;
INFO  00:54:07,415 - #41 print
INFO  00:54:07,415 - #32 (
INFO  00:54:07,415 - #45 x
INFO  00:54:07,415 - #33 )
INFO  00:54:07,415 - #13 ;
INFO  00:54:07,415 - #45 x
INFO  00:54:07,415 - #30 --
INFO  00:54:07,415 - #13 ;
INFO  00:54:07,415 - #41 print
INFO  00:54:07,415 - #32 (
INFO  00:54:07,415 - #32 (
INFO  00:54:07,415 - #32 (
INFO  00:54:07,415 - #45 x
INFO  00:54:07,415 - #33 )
INFO  00:54:07,415 - #33 )
INFO  00:54:07,415 - #33 )
INFO  00:54:07,415 - #13 ;
INFO  00:54:07,415 - #45 x
INFO  00:54:07,415 - #28 =
INFO  00:54:07,415 - #45 x
INFO  00:54:07,416 - #15 +
INFO  00:54:07,416 - #32 (
INFO  00:54:07,416 - #16 -
INFO  00:54:07,416 - #9 2
INFO  00:54:07,416 - #33 )
INFO  00:54:07,416 - #13 ;
INFO  00:54:07,416 - #41 print
INFO  00:54:07,416 - #32 (
INFO  00:54:07,416 - #45 x
INFO  00:54:07,416 - #33 )
INFO  00:54:07,416 - #13 ;
INFO  00:54:07,416 - #45 x
INFO  00:54:07,416 - #28 =
INFO  00:54:07,416 - #45 y
INFO  00:54:07,416 - #17 *
INFO  00:54:07,416 - #9 2
INFO  00:54:07,417 - #13 ;
INFO  00:54:07,417 - #41 print
INFO  00:54:07,417 - #32 (
INFO  00:54:07,417 - #45 x
INFO  00:54:07,417 - #33 )
INFO  00:54:07,417 - #13 ;
INFO  00:54:07,417 - #45 y
INFO  00:54:07,417 - #28 =
INFO  00:54:07,418 - #45 x
INFO  00:54:07,418 - #18 /
INFO  00:54:07,418 - #9 4
INFO  00:54:07,418 - #13 ;
INFO  00:54:07,418 - #41 print
INFO  00:54:07,418 - #32 (
INFO  00:54:07,418 - #45 y
INFO  00:54:07,418 - #33 )
INFO  00:54:07,418 - #13 ;
INFO  00:54:07,418 - #45 x
INFO  00:54:07,418 - #28 =
INFO  00:54:07,418 - #45 y
INFO  00:54:07,418 - #19 %
INFO  00:54:07,418 - #9 3
INFO  00:54:07,419 - #13 ;
INFO  00:54:07,419 - #41 print
INFO  00:54:07,419 - #32 (
INFO  00:54:07,419 - #45 x
INFO  00:54:07,419 - #33 )
INFO  00:54:07,419 - #13 ;
INFO  00:54:07,419 - #42 read
INFO  00:54:07,419 - #32 (
INFO  00:54:07,419 - #45 x
INFO  00:54:07,419 - #33 )
INFO  00:54:07,419 - #13 ;
INFO  00:54:07,419 - #45 x
INFO  00:54:07,419 - #28 =
INFO  00:54:07,419 - #45 x
INFO  00:54:07,419 - #17 *
INFO  00:54:07,419 - #45 y
INFO  00:54:07,419 - #13 ;
INFO  00:54:07,419 - #41 print
INFO  00:54:07,419 - #32 (
INFO  00:54:07,419 - #45 x
INFO  00:54:07,419 - #33 )
INFO  00:54:07,420 - #13 ;
INFO  00:54:07,420 - #41 print
INFO  00:54:07,420 - #32 (
INFO  00:54:07,420 - #11 false
INFO  00:54:07,420 - #12 ,
INFO  00:54:07,420 - #9 20
INFO  00:54:07,420 - #33 )
INFO  00:54:07,420 - #13 ;
INFO  00:54:07,420 - #8 return
INFO  00:54:07,420 - #9 0
INFO  00:54:07,420 - #13 ;
INFO  00:54:07,420 - #35 }
INFO  00:54:07,420 - #35 }
INFO  00:54:07,422 - ***Abstract tree****
INFO  00:54:07,422 - #0
DEBUG 00:54:07,431 - Variable with name x has the address of 0
DEBUG 00:54:07,432 - Variable with name y has the address of 2
DEBUG 00:54:07,432 - found constant with value 5of type 1
DEBUG 00:54:07,432 - constant factor is type 1
DEBUG 00:54:07,432 - term SingleFactorterm is type 1
DEBUG 00:54:07,432 - exprWithNoMinus is type 1
DEBUG 00:54:07,432 - term SingleFactorterm is type 3
DEBUG 00:54:07,432 - exprWithNoMinus is type 3
DEBUG 00:54:07,432 - found constant with value 0of type 1
DEBUG 00:54:07,432 - constant factor is type 1
DEBUG 00:54:07,432 - term SingleFactorterm is type 1
DEBUG 00:54:07,433 - exprWithNoMinus is type 1
DEBUG 00:54:07,433 - found constant with value 0of type 1
DEBUG 00:54:07,433 - constant factor is type 1
DEBUG 00:54:07,433 - term SingleFactorterm is type 1
DEBUG 00:54:07,433 - exprWithNoMinus is type 1
DEBUG 00:54:07,433 - found constant with value 0of type 1
DEBUG 00:54:07,433 - constant factor is type 1
DEBUG 00:54:07,433 - term SingleFactorterm is type 1
DEBUG 00:54:07,433 - exprWithNoMinus is type 1
DEBUG 00:54:07,433 - term SingleFactorterm is type 1
DEBUG 00:54:07,433 - exprWithNoMinus is type 1
DEBUG 00:54:07,433 - print statement has arg of type 1
DEBUG 00:54:07,433 - found constant with value 1of type 1
DEBUG 00:54:07,433 - constant factor is type 1
DEBUG 00:54:07,433 - term SingleFactorterm is type 1
DEBUG 00:54:07,433 - exprWithNoMinus is type 1
DEBUG 00:54:07,433 - found constant with value 1of type 1
DEBUG 00:54:07,433 - print statement has arg of type 1
DEBUG 00:54:07,433 - found constant with value *****of type 2
DEBUG 00:54:07,434 - found constant with value 97of type 2
DEBUG 00:54:07,434 - constant factor is type 2
DEBUG 00:54:07,434 - term SingleFactorterm is type 2
DEBUG 00:54:07,434 - exprWithNoMinus is type 2
DEBUG 00:54:07,434 - found constant with value 1of type 1
DEBUG 00:54:07,434 - print statement has arg of type 2
DEBUG 00:54:07,434 - found constant with value 5of type 1
DEBUG 00:54:07,434 - constant factor is type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - exprWithNoMinus is type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - found constant with value 3of type 1
DEBUG 00:54:07,434 - constant factor is type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - exprWithNoMinus is type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - exprWithNoMinus is type 1
DEBUG 00:54:07,434 - print statement has arg of type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - exprWithNoMinus is type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - exprWithNoMinus is type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,434 - exprWithNoMinus is type 1
DEBUG 00:54:07,434 - print statement has arg of type 1
DEBUG 00:54:07,434 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - print statement has arg of type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - found constant with value 2of type 1
DEBUG 00:54:07,435 - constant factor is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - ExprWithMinus is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - print statement has arg of type 1
DEBUG 00:54:07,435 - found constant with value 2of type 1
DEBUG 00:54:07,435 - constant factor is type 1
DEBUG 00:54:07,435 - term element is type 1
DEBUG 00:54:07,435 - term list single is type 1
DEBUG 00:54:07,435 - term MultiFactorTerm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - print statement has arg of type 1
DEBUG 00:54:07,435 - found constant with value 4of type 1
DEBUG 00:54:07,435 - constant factor is type 1
DEBUG 00:54:07,435 - term element is type 1
DEBUG 00:54:07,435 - term list single is type 1
DEBUG 00:54:07,435 - term MultiFactorTerm is type 1
DEBUG 00:54:07,435 - exprWithNoMinus is type 1
DEBUG 00:54:07,435 - term SingleFactorterm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
DEBUG 00:54:07,436 - print statement has arg of type 1
DEBUG 00:54:07,436 - found constant with value 3of type 1
DEBUG 00:54:07,436 - constant factor is type 1
DEBUG 00:54:07,436 - term element is type 1
DEBUG 00:54:07,436 - term list single is type 1
DEBUG 00:54:07,436 - term MultiFactorTerm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
DEBUG 00:54:07,436 - term SingleFactorterm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
DEBUG 00:54:07,436 - print statement has arg of type 1
DEBUG 00:54:07,436 - term element is type 1
DEBUG 00:54:07,436 - term list single is type 1
DEBUG 00:54:07,436 - term MultiFactorTerm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
DEBUG 00:54:07,436 - term SingleFactorterm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
DEBUG 00:54:07,436 - print statement has arg of type 1
DEBUG 00:54:07,436 - found constant with value 0of type 1
DEBUG 00:54:07,436 - constant factor is type 1
DEBUG 00:54:07,436 - term SingleFactorterm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
DEBUG 00:54:07,436 - found constant with value 20of type 1
DEBUG 00:54:07,436 - print statement has arg of type 1
DEBUG 00:54:07,436 - found constant with value 0of type 1
DEBUG 00:54:07,436 - constant factor is type 1
DEBUG 00:54:07,436 - term SingleFactorterm is type 1
DEBUG 00:54:07,436 - exprWithNoMinus is type 1
INFO  00:54:07,436 - Print calls = 0
INFO  00:54:07,438 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:54:07,444 - Parsiranje uspesno zavrseno!
INFO  01:00:32,819 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  01:00:32,849 - #40 program
INFO  01:00:32,849 - #45 MJProgram
INFO  01:00:32,849 - #45 int
INFO  01:00:32,849 - #45 x
INFO  01:00:32,849 - #13 ;
INFO  01:00:32,850 - #45 int
INFO  01:00:32,850 - #45 z
INFO  01:00:32,850 - #36 [
INFO  01:00:32,850 - #37 ]
INFO  01:00:32,850 - #13 ;
INFO  01:00:32,850 - #34 {
INFO  01:00:32,850 - #45 int
INFO  01:00:32,851 - #45 main
INFO  01:00:32,852 - #32 (
INFO  01:00:32,852 - #33 )
INFO  01:00:32,852 - #45 int
INFO  01:00:32,852 - #45 y
INFO  01:00:32,852 - #13 ;
INFO  01:00:32,852 - #34 {
INFO  01:00:32,852 - #45 z
INFO  01:00:32,852 - #28 =
INFO  01:00:32,852 - #31 new
INFO  01:00:32,852 - #45 int
INFO  01:00:32,853 - #36 [
INFO  01:00:32,853 - #9 5
INFO  01:00:32,853 - #37 ]
INFO  01:00:32,853 - #13 ;
INFO  01:00:32,854 - #45 z
INFO  01:00:32,854 - #36 [
INFO  01:00:32,854 - #9 0
INFO  01:00:32,854 - #37 ]
INFO  01:00:32,854 - #28 =
INFO  01:00:32,854 - #9 0
INFO  01:00:32,854 - #13 ;
INFO  01:00:32,854 - #41 print
INFO  01:00:32,854 - #32 (
INFO  01:00:32,855 - #45 z
INFO  01:00:32,855 - #36 [
INFO  01:00:32,855 - #9 0
INFO  01:00:32,855 - #37 ]
INFO  01:00:32,855 - #33 )
INFO  01:00:32,855 - #13 ;
INFO  01:00:32,855 - #41 print
INFO  01:00:32,855 - #32 (
INFO  01:00:32,855 - #9 1
INFO  01:00:32,855 - #12 ,
INFO  01:00:32,855 - #9 1
INFO  01:00:32,855 - #33 )
INFO  01:00:32,855 - #13 ;
INFO  01:00:32,855 - #41 print
INFO  01:00:32,855 - #32 (
INFO  01:00:32,855 - #10 a
INFO  01:00:32,855 - #12 ,
INFO  01:00:32,856 - #9 1
INFO  01:00:32,856 - #33 )
INFO  01:00:32,856 - #13 ;
INFO  01:00:32,856 - #45 y
INFO  01:00:32,856 - #28 =
INFO  01:00:32,856 - #9 5
INFO  01:00:32,856 - #13 ;
INFO  01:00:32,856 - #45 x
INFO  01:00:32,856 - #28 =
INFO  01:00:32,856 - #45 y
INFO  01:00:32,856 - #15 +
INFO  01:00:32,856 - #9 3
INFO  01:00:32,857 - #13 ;
INFO  01:00:32,857 - #41 print
INFO  01:00:32,857 - #32 (
INFO  01:00:32,857 - #45 x
INFO  01:00:32,857 - #33 )
INFO  01:00:32,857 - #13 ;
INFO  01:00:32,857 - #45 y
INFO  01:00:32,857 - #28 =
INFO  01:00:32,857 - #32 (
INFO  01:00:32,857 - #45 x
INFO  01:00:32,857 - #33 )
INFO  01:00:32,857 - #13 ;
INFO  01:00:32,858 - #45 x
INFO  01:00:32,858 - #29 ++
INFO  01:00:32,858 - #13 ;
INFO  01:00:32,858 - #41 print
INFO  01:00:32,858 - #32 (
INFO  01:00:32,858 - #45 x
INFO  01:00:32,858 - #33 )
INFO  01:00:32,858 - #13 ;
INFO  01:00:32,858 - #45 x
INFO  01:00:32,858 - #30 --
INFO  01:00:32,858 - #13 ;
INFO  01:00:32,858 - #41 print
INFO  01:00:32,858 - #32 (
INFO  01:00:32,858 - #32 (
INFO  01:00:32,858 - #32 (
INFO  01:00:32,858 - #45 x
INFO  01:00:32,858 - #33 )
INFO  01:00:32,858 - #33 )
INFO  01:00:32,858 - #33 )
INFO  01:00:32,858 - #13 ;
INFO  01:00:32,858 - #45 x
INFO  01:00:32,858 - #28 =
INFO  01:00:32,859 - #45 x
INFO  01:00:32,859 - #15 +
INFO  01:00:32,859 - #32 (
INFO  01:00:32,859 - #16 -
INFO  01:00:32,859 - #9 2
INFO  01:00:32,859 - #33 )
INFO  01:00:32,859 - #13 ;
INFO  01:00:32,859 - #41 print
INFO  01:00:32,859 - #32 (
INFO  01:00:32,859 - #45 x
INFO  01:00:32,859 - #33 )
INFO  01:00:32,859 - #13 ;
INFO  01:00:32,859 - #45 x
INFO  01:00:32,859 - #28 =
INFO  01:00:32,859 - #45 y
INFO  01:00:32,859 - #17 *
INFO  01:00:32,859 - #9 2
INFO  01:00:32,860 - #13 ;
INFO  01:00:32,860 - #41 print
INFO  01:00:32,861 - #32 (
INFO  01:00:32,861 - #45 x
INFO  01:00:32,861 - #33 )
INFO  01:00:32,861 - #13 ;
INFO  01:00:32,861 - #45 y
INFO  01:00:32,861 - #28 =
INFO  01:00:32,861 - #45 x
INFO  01:00:32,861 - #18 /
INFO  01:00:32,861 - #9 4
INFO  01:00:32,862 - #13 ;
INFO  01:00:32,862 - #41 print
INFO  01:00:32,862 - #32 (
INFO  01:00:32,862 - #45 y
INFO  01:00:32,862 - #33 )
INFO  01:00:32,862 - #13 ;
INFO  01:00:32,862 - #45 x
INFO  01:00:32,862 - #28 =
INFO  01:00:32,862 - #45 y
INFO  01:00:32,862 - #19 %
INFO  01:00:32,862 - #9 3
INFO  01:00:32,863 - #13 ;
INFO  01:00:32,863 - #41 print
INFO  01:00:32,863 - #32 (
INFO  01:00:32,863 - #45 x
INFO  01:00:32,863 - #33 )
INFO  01:00:32,863 - #13 ;
INFO  01:00:32,863 - #42 read
INFO  01:00:32,863 - #32 (
INFO  01:00:32,863 - #45 x
INFO  01:00:32,863 - #33 )
INFO  01:00:32,863 - #13 ;
INFO  01:00:32,863 - #45 x
INFO  01:00:32,863 - #28 =
INFO  01:00:32,863 - #45 x
INFO  01:00:32,863 - #17 *
INFO  01:00:32,863 - #45 y
INFO  01:00:32,863 - #13 ;
INFO  01:00:32,863 - #41 print
INFO  01:00:32,864 - #32 (
INFO  01:00:32,864 - #45 x
INFO  01:00:32,864 - #33 )
INFO  01:00:32,864 - #13 ;
INFO  01:00:32,864 - #41 print
INFO  01:00:32,864 - #32 (
INFO  01:00:32,864 - #11 false
INFO  01:00:32,864 - #12 ,
INFO  01:00:32,864 - #9 20
INFO  01:00:32,864 - #33 )
INFO  01:00:32,864 - #13 ;
INFO  01:00:32,864 - #8 return
INFO  01:00:32,864 - #9 0
INFO  01:00:32,864 - #13 ;
INFO  01:00:32,864 - #35 }
INFO  01:00:32,864 - #35 }
INFO  01:00:32,867 - ***Abstract tree****
INFO  01:00:32,867 - #0
DEBUG 01:00:32,876 - Variable with name x has the address of 0
DEBUG 01:00:32,876 - Variable with name y has the address of 2
DEBUG 01:00:32,877 - found constant with value 5of type 1
DEBUG 01:00:32,877 - constant factor is type 1
DEBUG 01:00:32,877 - term SingleFactorterm is type 1
DEBUG 01:00:32,877 - exprWithNoMinus is type 1
DEBUG 01:00:32,877 - term SingleFactorterm is type 3
DEBUG 01:00:32,877 - exprWithNoMinus is type 3
DEBUG 01:00:32,877 - found constant with value 0of type 1
DEBUG 01:00:32,877 - constant factor is type 1
DEBUG 01:00:32,877 - term SingleFactorterm is type 1
DEBUG 01:00:32,877 - exprWithNoMinus is type 1
DEBUG 01:00:32,877 - found constant with value 0of type 1
DEBUG 01:00:32,877 - constant factor is type 1
DEBUG 01:00:32,877 - term SingleFactorterm is type 1
DEBUG 01:00:32,877 - exprWithNoMinus is type 1
DEBUG 01:00:32,877 - found constant with value 0of type 1
DEBUG 01:00:32,877 - constant factor is type 1
DEBUG 01:00:32,877 - term SingleFactorterm is type 1
DEBUG 01:00:32,877 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - print statement has arg of type 1
DEBUG 01:00:32,878 - found constant with value 1of type 1
DEBUG 01:00:32,878 - constant factor is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - found constant with value 1of type 1
DEBUG 01:00:32,878 - print statement has arg of type 1
DEBUG 01:00:32,878 - found constant with value *****of type 2
DEBUG 01:00:32,878 - found constant with value 97of type 2
DEBUG 01:00:32,878 - constant factor is type 2
DEBUG 01:00:32,878 - term SingleFactorterm is type 2
DEBUG 01:00:32,878 - exprWithNoMinus is type 2
DEBUG 01:00:32,878 - found constant with value 1of type 1
DEBUG 01:00:32,878 - print statement has arg of type 2
DEBUG 01:00:32,878 - found constant with value 5of type 1
DEBUG 01:00:32,878 - constant factor is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - found constant with value 3of type 1
DEBUG 01:00:32,878 - constant factor is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - print statement has arg of type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - print statement has arg of type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,878 - exprWithNoMinus is type 1
DEBUG 01:00:32,878 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - exprWithNoMinus is type 1
DEBUG 01:00:32,879 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - exprWithNoMinus is type 1
DEBUG 01:00:32,879 - print statement has arg of type 1
DEBUG 01:00:32,879 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - found constant with value 2of type 1
DEBUG 01:00:32,879 - constant factor is type 1
DEBUG 01:00:32,879 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - ExprWithMinus is type 1
DEBUG 01:00:32,879 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - exprWithNoMinus is type 1
DEBUG 01:00:32,879 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - exprWithNoMinus is type 1
DEBUG 01:00:32,879 - print statement has arg of type 1
DEBUG 01:00:32,879 - found constant with value 2of type 1
DEBUG 01:00:32,879 - constant factor is type 1
DEBUG 01:00:32,879 - term element is type 1
DEBUG 01:00:32,879 - term list single is type 1
DEBUG 01:00:32,879 - term MultiFactorTerm is type 1
DEBUG 01:00:32,879 - exprWithNoMinus is type 1
DEBUG 01:00:32,879 - term SingleFactorterm is type 1
DEBUG 01:00:32,879 - exprWithNoMinus is type 1
DEBUG 01:00:32,879 - print statement has arg of type 1
DEBUG 01:00:32,880 - found constant with value 4of type 1
DEBUG 01:00:32,880 - constant factor is type 1
DEBUG 01:00:32,880 - term element is type 1
DEBUG 01:00:32,880 - term list single is type 1
DEBUG 01:00:32,880 - term MultiFactorTerm is type 1
DEBUG 01:00:32,880 - exprWithNoMinus is type 1
DEBUG 01:00:32,880 - term SingleFactorterm is type 1
DEBUG 01:00:32,880 - exprWithNoMinus is type 1
DEBUG 01:00:32,880 - print statement has arg of type 1
DEBUG 01:00:32,880 - found constant with value 3of type 1
DEBUG 01:00:32,880 - constant factor is type 1
DEBUG 01:00:32,880 - term element is type 1
DEBUG 01:00:32,880 - term list single is type 1
DEBUG 01:00:32,880 - term MultiFactorTerm is type 1
DEBUG 01:00:32,880 - exprWithNoMinus is type 1
DEBUG 01:00:32,880 - term SingleFactorterm is type 1
DEBUG 01:00:32,880 - exprWithNoMinus is type 1
DEBUG 01:00:32,880 - print statement has arg of type 1
DEBUG 01:00:32,880 - term element is type 1
DEBUG 01:00:32,880 - term list single is type 1
DEBUG 01:00:32,881 - term MultiFactorTerm is type 1
DEBUG 01:00:32,881 - exprWithNoMinus is type 1
DEBUG 01:00:32,881 - term SingleFactorterm is type 1
DEBUG 01:00:32,881 - exprWithNoMinus is type 1
DEBUG 01:00:32,881 - print statement has arg of type 1
DEBUG 01:00:32,881 - found constant with value 0of type 1
DEBUG 01:00:32,881 - constant factor is type 1
DEBUG 01:00:32,881 - term SingleFactorterm is type 1
DEBUG 01:00:32,881 - exprWithNoMinus is type 1
DEBUG 01:00:32,881 - found constant with value 20of type 1
DEBUG 01:00:32,881 - print statement has arg of type 1
DEBUG 01:00:32,881 - found constant with value 0of type 1
DEBUG 01:00:32,881 - constant factor is type 1
DEBUG 01:00:32,881 - term SingleFactorterm is type 1
DEBUG 01:00:32,881 - exprWithNoMinus is type 1
INFO  01:00:32,881 - Print calls = 0
INFO  01:00:32,883 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  01:00:32,891 - Parsiranje uspesno zavrseno!
INFO  01:01:17,807 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  01:01:17,835 - #40 program
INFO  01:01:17,835 - #45 MJProgram
INFO  01:01:17,835 - #45 int
INFO  01:01:17,835 - #45 x
INFO  01:01:17,835 - #13 ;
INFO  01:01:17,835 - #45 int
INFO  01:01:17,836 - #45 z
INFO  01:01:17,836 - #36 [
INFO  01:01:17,836 - #37 ]
INFO  01:01:17,836 - #13 ;
INFO  01:01:17,836 - #34 {
INFO  01:01:17,836 - #45 int
INFO  01:01:17,837 - #45 main
INFO  01:01:17,837 - #32 (
INFO  01:01:17,837 - #33 )
INFO  01:01:17,837 - #45 int
INFO  01:01:17,837 - #45 y
INFO  01:01:17,837 - #13 ;
INFO  01:01:17,837 - #34 {
INFO  01:01:17,838 - #45 z
INFO  01:01:17,838 - #28 =
INFO  01:01:17,838 - #31 new
INFO  01:01:17,838 - #45 int
INFO  01:01:17,838 - #36 [
INFO  01:01:17,838 - #9 5
INFO  01:01:17,838 - #37 ]
INFO  01:01:17,839 - #13 ;
INFO  01:01:17,839 - #45 z
INFO  01:01:17,840 - #36 [
INFO  01:01:17,840 - #9 0
INFO  01:01:17,840 - #37 ]
INFO  01:01:17,840 - #28 =
INFO  01:01:17,840 - #9 0
INFO  01:01:17,840 - #13 ;
INFO  01:01:17,840 - #41 print
INFO  01:01:17,840 - #32 (
INFO  01:01:17,840 - #45 z
INFO  01:01:17,840 - #36 [
INFO  01:01:17,840 - #9 0
INFO  01:01:17,840 - #37 ]
INFO  01:01:17,841 - #33 )
INFO  01:01:17,841 - #13 ;
INFO  01:01:17,841 - #41 print
INFO  01:01:17,841 - #32 (
INFO  01:01:17,841 - #9 1
INFO  01:01:17,841 - #12 ,
INFO  01:01:17,841 - #9 1
INFO  01:01:17,841 - #33 )
INFO  01:01:17,841 - #13 ;
INFO  01:01:17,841 - #41 print
INFO  01:01:17,841 - #32 (
INFO  01:01:17,841 - #10 a
INFO  01:01:17,841 - #12 ,
INFO  01:01:17,842 - #9 1
INFO  01:01:17,842 - #33 )
INFO  01:01:17,842 - #13 ;
INFO  01:01:17,842 - #45 y
INFO  01:01:17,842 - #28 =
INFO  01:01:17,842 - #9 5
INFO  01:01:17,842 - #13 ;
INFO  01:01:17,842 - #45 x
INFO  01:01:17,842 - #28 =
INFO  01:01:17,842 - #45 y
INFO  01:01:17,842 - #15 +
INFO  01:01:17,842 - #9 3
INFO  01:01:17,843 - #13 ;
INFO  01:01:17,843 - #41 print
INFO  01:01:17,843 - #32 (
INFO  01:01:17,843 - #45 x
INFO  01:01:17,843 - #33 )
INFO  01:01:17,843 - #13 ;
INFO  01:01:17,843 - #45 y
INFO  01:01:17,843 - #28 =
INFO  01:01:17,844 - #32 (
INFO  01:01:17,844 - #45 x
INFO  01:01:17,844 - #33 )
INFO  01:01:17,844 - #13 ;
INFO  01:01:17,844 - #45 x
INFO  01:01:17,844 - #29 ++
INFO  01:01:17,844 - #13 ;
INFO  01:01:17,844 - #41 print
INFO  01:01:17,844 - #32 (
INFO  01:01:17,844 - #45 x
INFO  01:01:17,844 - #33 )
INFO  01:01:17,844 - #13 ;
INFO  01:01:17,844 - #45 x
INFO  01:01:17,844 - #30 --
INFO  01:01:17,844 - #13 ;
INFO  01:01:17,844 - #41 print
INFO  01:01:17,844 - #32 (
INFO  01:01:17,844 - #32 (
INFO  01:01:17,845 - #32 (
INFO  01:01:17,845 - #45 x
INFO  01:01:17,845 - #33 )
INFO  01:01:17,845 - #33 )
INFO  01:01:17,845 - #33 )
INFO  01:01:17,845 - #13 ;
INFO  01:01:17,845 - #45 x
INFO  01:01:17,845 - #28 =
INFO  01:01:17,845 - #45 x
INFO  01:01:17,845 - #15 +
INFO  01:01:17,845 - #32 (
INFO  01:01:17,845 - #16 -
INFO  01:01:17,845 - #9 2
INFO  01:01:17,845 - #33 )
INFO  01:01:17,845 - #13 ;
INFO  01:01:17,845 - #41 print
INFO  01:01:17,845 - #32 (
INFO  01:01:17,845 - #45 x
INFO  01:01:17,845 - #33 )
INFO  01:01:17,845 - #13 ;
INFO  01:01:17,845 - #45 x
INFO  01:01:17,845 - #28 =
INFO  01:01:17,845 - #45 y
INFO  01:01:17,846 - #17 *
INFO  01:01:17,846 - #9 2
INFO  01:01:17,846 - #13 ;
INFO  01:01:17,847 - #41 print
INFO  01:01:17,847 - #32 (
INFO  01:01:17,847 - #45 x
INFO  01:01:17,847 - #33 )
INFO  01:01:17,847 - #13 ;
INFO  01:01:17,847 - #45 y
INFO  01:01:17,847 - #28 =
INFO  01:01:17,847 - #45 x
INFO  01:01:17,847 - #18 /
INFO  01:01:17,847 - #9 4
INFO  01:01:17,847 - #13 ;
INFO  01:01:17,848 - #41 print
INFO  01:01:17,848 - #32 (
INFO  01:01:17,848 - #45 y
INFO  01:01:17,848 - #33 )
INFO  01:01:17,848 - #13 ;
INFO  01:01:17,848 - #45 x
INFO  01:01:17,848 - #28 =
INFO  01:01:17,848 - #45 y
INFO  01:01:17,848 - #19 %
INFO  01:01:17,848 - #9 3
INFO  01:01:17,848 - #13 ;
INFO  01:01:17,848 - #41 print
INFO  01:01:17,848 - #32 (
INFO  01:01:17,848 - #45 x
INFO  01:01:17,848 - #33 )
INFO  01:01:17,849 - #13 ;
INFO  01:01:17,849 - #42 read
INFO  01:01:17,849 - #32 (
INFO  01:01:17,849 - #45 x
INFO  01:01:17,849 - #33 )
INFO  01:01:17,849 - #13 ;
INFO  01:01:17,849 - #45 x
INFO  01:01:17,849 - #28 =
INFO  01:01:17,849 - #45 x
INFO  01:01:17,849 - #17 *
INFO  01:01:17,849 - #45 y
INFO  01:01:17,849 - #13 ;
INFO  01:01:17,849 - #41 print
INFO  01:01:17,849 - #32 (
INFO  01:01:17,849 - #45 x
INFO  01:01:17,849 - #33 )
INFO  01:01:17,849 - #13 ;
INFO  01:01:17,849 - #41 print
INFO  01:01:17,849 - #32 (
INFO  01:01:17,849 - #11 false
INFO  01:01:17,850 - #12 ,
INFO  01:01:17,850 - #9 20
INFO  01:01:17,850 - #33 )
INFO  01:01:17,850 - #13 ;
INFO  01:01:17,850 - #8 return
INFO  01:01:17,850 - #9 0
INFO  01:01:17,850 - #13 ;
INFO  01:01:17,850 - #35 }
INFO  01:01:17,850 - #35 }
INFO  01:01:17,852 - ***Abstract tree****
INFO  01:01:17,852 - #0
DEBUG 01:01:17,860 - Variable with name x has the address of 0
DEBUG 01:01:17,860 - Variable with name y has the address of 2
DEBUG 01:01:17,860 - found constant with value 5of type 1
DEBUG 01:01:17,860 - constant factor is type 1
DEBUG 01:01:17,860 - term SingleFactorterm is type 1
DEBUG 01:01:17,861 - exprWithNoMinus is type 1
DEBUG 01:01:17,861 - term SingleFactorterm is type 3
DEBUG 01:01:17,861 - exprWithNoMinus is type 3
DEBUG 01:01:17,861 - found constant with value 0of type 1
DEBUG 01:01:17,861 - constant factor is type 1
DEBUG 01:01:17,861 - term SingleFactorterm is type 1
DEBUG 01:01:17,861 - exprWithNoMinus is type 1
DEBUG 01:01:17,861 - found constant with value 0of type 1
DEBUG 01:01:17,861 - constant factor is type 1
DEBUG 01:01:17,861 - term SingleFactorterm is type 1
DEBUG 01:01:17,861 - exprWithNoMinus is type 1
DEBUG 01:01:17,861 - found constant with value 0of type 1
DEBUG 01:01:17,861 - constant factor is type 1
DEBUG 01:01:17,861 - term SingleFactorterm is type 1
DEBUG 01:01:17,861 - exprWithNoMinus is type 1
DEBUG 01:01:17,861 - term SingleFactorterm is type 1
DEBUG 01:01:17,861 - exprWithNoMinus is type 1
DEBUG 01:01:17,861 - print statement has arg of type 1
DEBUG 01:01:17,861 - found constant with value 1of type 1
DEBUG 01:01:17,861 - constant factor is type 1
DEBUG 01:01:17,861 - term SingleFactorterm is type 1
DEBUG 01:01:17,861 - exprWithNoMinus is type 1
DEBUG 01:01:17,861 - found constant with value 1of type 1
DEBUG 01:01:17,861 - print statement has arg of type 1
DEBUG 01:01:17,861 - found constant with value *****of type 2
DEBUG 01:01:17,861 - found constant with value 97of type 2
DEBUG 01:01:17,861 - constant factor is type 2
DEBUG 01:01:17,861 - term SingleFactorterm is type 2
DEBUG 01:01:17,861 - exprWithNoMinus is type 2
DEBUG 01:01:17,861 - found constant with value 1of type 1
DEBUG 01:01:17,862 - print statement has arg of type 2
DEBUG 01:01:17,862 - found constant with value 5of type 1
DEBUG 01:01:17,862 - constant factor is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - found constant with value 3of type 1
DEBUG 01:01:17,862 - constant factor is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - print statement has arg of type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - print statement has arg of type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - print statement has arg of type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - found constant with value 2of type 1
DEBUG 01:01:17,862 - constant factor is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - ExprWithMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - term SingleFactorterm is type 1
DEBUG 01:01:17,862 - exprWithNoMinus is type 1
DEBUG 01:01:17,862 - print statement has arg of type 1
DEBUG 01:01:17,863 - found constant with value 2of type 1
DEBUG 01:01:17,863 - constant factor is type 1
DEBUG 01:01:17,863 - term element is type 1
DEBUG 01:01:17,863 - term list single is type 1
DEBUG 01:01:17,863 - term MultiFactorTerm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - term SingleFactorterm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - print statement has arg of type 1
DEBUG 01:01:17,863 - found constant with value 4of type 1
DEBUG 01:01:17,863 - constant factor is type 1
DEBUG 01:01:17,863 - term element is type 1
DEBUG 01:01:17,863 - term list single is type 1
DEBUG 01:01:17,863 - term MultiFactorTerm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - term SingleFactorterm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - print statement has arg of type 1
DEBUG 01:01:17,863 - found constant with value 3of type 1
DEBUG 01:01:17,863 - constant factor is type 1
DEBUG 01:01:17,863 - term element is type 1
DEBUG 01:01:17,863 - term list single is type 1
DEBUG 01:01:17,863 - term MultiFactorTerm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - term SingleFactorterm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - print statement has arg of type 1
DEBUG 01:01:17,863 - term element is type 1
DEBUG 01:01:17,863 - term list single is type 1
DEBUG 01:01:17,863 - term MultiFactorTerm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - term SingleFactorterm is type 1
DEBUG 01:01:17,863 - exprWithNoMinus is type 1
DEBUG 01:01:17,863 - print statement has arg of type 1
DEBUG 01:01:17,864 - found constant with value 0of type 1
DEBUG 01:01:17,864 - constant factor is type 1
DEBUG 01:01:17,864 - term SingleFactorterm is type 1
DEBUG 01:01:17,864 - exprWithNoMinus is type 1
DEBUG 01:01:17,864 - found constant with value 20of type 1
DEBUG 01:01:17,864 - print statement has arg of type 1
DEBUG 01:01:17,864 - found constant with value 0of type 1
DEBUG 01:01:17,864 - constant factor is type 1
DEBUG 01:01:17,864 - term SingleFactorterm is type 1
DEBUG 01:01:17,864 - exprWithNoMinus is type 1
INFO  01:01:17,864 - Print calls = 0
INFO  01:01:17,865 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  01:01:17,872 - Parsiranje uspesno zavrseno!
INFO  01:01:56,155 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  01:01:56,184 - #40 program
INFO  01:01:56,184 - #45 MJProgram
INFO  01:01:56,184 - #45 int
INFO  01:01:56,184 - #45 x
INFO  01:01:56,185 - #13 ;
INFO  01:01:56,185 - #45 int
INFO  01:01:56,185 - #45 z
INFO  01:01:56,185 - #36 [
INFO  01:01:56,185 - #37 ]
INFO  01:01:56,185 - #13 ;
INFO  01:01:56,185 - #34 {
INFO  01:01:56,185 - #45 int
INFO  01:01:56,186 - #45 main
INFO  01:01:56,186 - #32 (
INFO  01:01:56,186 - #33 )
INFO  01:01:56,186 - #45 int
INFO  01:01:56,187 - #45 y
INFO  01:01:56,187 - #13 ;
INFO  01:01:56,187 - #34 {
INFO  01:01:56,187 - #45 z
INFO  01:01:56,187 - #28 =
INFO  01:01:56,187 - #31 new
INFO  01:01:56,187 - #45 int
INFO  01:01:56,187 - #36 [
INFO  01:01:56,187 - #9 5
INFO  01:01:56,187 - #37 ]
INFO  01:01:56,188 - #13 ;
INFO  01:01:56,188 - #45 z
INFO  01:01:56,189 - #36 [
INFO  01:01:56,189 - #9 0
INFO  01:01:56,189 - #37 ]
INFO  01:01:56,189 - #28 =
INFO  01:01:56,189 - #9 0
INFO  01:01:56,189 - #13 ;
INFO  01:01:56,189 - #41 print
INFO  01:01:56,189 - #32 (
INFO  01:01:56,189 - #45 z
INFO  01:01:56,189 - #36 [
INFO  01:01:56,189 - #9 0
INFO  01:01:56,189 - #37 ]
INFO  01:01:56,189 - #33 )
INFO  01:01:56,189 - #13 ;
INFO  01:01:56,189 - #41 print
INFO  01:01:56,190 - #32 (
INFO  01:01:56,190 - #9 1
INFO  01:01:56,190 - #12 ,
INFO  01:01:56,190 - #9 1
INFO  01:01:56,190 - #33 )
INFO  01:01:56,190 - #13 ;
INFO  01:01:56,190 - #41 print
INFO  01:01:56,190 - #32 (
INFO  01:01:56,190 - #10 a
INFO  01:01:56,190 - #12 ,
INFO  01:01:56,190 - #9 1
INFO  01:01:56,190 - #33 )
INFO  01:01:56,190 - #13 ;
INFO  01:01:56,190 - #45 y
INFO  01:01:56,190 - #28 =
INFO  01:01:56,191 - #9 5
INFO  01:01:56,191 - #13 ;
INFO  01:01:56,191 - #45 x
INFO  01:01:56,191 - #28 =
INFO  01:01:56,191 - #45 y
INFO  01:01:56,191 - #15 +
INFO  01:01:56,191 - #9 3
INFO  01:01:56,191 - #13 ;
INFO  01:01:56,192 - #41 print
INFO  01:01:56,192 - #32 (
INFO  01:01:56,192 - #45 x
INFO  01:01:56,192 - #33 )
INFO  01:01:56,192 - #13 ;
INFO  01:01:56,192 - #45 y
INFO  01:01:56,192 - #28 =
INFO  01:01:56,192 - #32 (
INFO  01:01:56,192 - #45 x
INFO  01:01:56,192 - #33 )
INFO  01:01:56,192 - #13 ;
INFO  01:01:56,192 - #45 x
INFO  01:01:56,192 - #29 ++
INFO  01:01:56,192 - #13 ;
INFO  01:01:56,193 - #41 print
INFO  01:01:56,193 - #32 (
INFO  01:01:56,193 - #45 x
INFO  01:01:56,193 - #33 )
INFO  01:01:56,193 - #13 ;
INFO  01:01:56,193 - #45 x
INFO  01:01:56,193 - #30 --
INFO  01:01:56,193 - #13 ;
INFO  01:01:56,193 - #41 print
INFO  01:01:56,193 - #32 (
INFO  01:01:56,193 - #32 (
INFO  01:01:56,193 - #32 (
INFO  01:01:56,193 - #45 x
INFO  01:01:56,193 - #33 )
INFO  01:01:56,193 - #33 )
INFO  01:01:56,193 - #33 )
INFO  01:01:56,193 - #13 ;
INFO  01:01:56,193 - #45 x
INFO  01:01:56,193 - #28 =
INFO  01:01:56,194 - #45 x
INFO  01:01:56,194 - #15 +
INFO  01:01:56,194 - #32 (
INFO  01:01:56,194 - #16 -
INFO  01:01:56,194 - #9 2
INFO  01:01:56,194 - #33 )
INFO  01:01:56,194 - #13 ;
INFO  01:01:56,194 - #41 print
INFO  01:01:56,194 - #32 (
INFO  01:01:56,194 - #45 x
INFO  01:01:56,194 - #33 )
INFO  01:01:56,194 - #13 ;
INFO  01:01:56,194 - #45 x
INFO  01:01:56,194 - #28 =
INFO  01:01:56,194 - #45 y
INFO  01:01:56,194 - #17 *
INFO  01:01:56,194 - #9 2
INFO  01:01:56,195 - #13 ;
INFO  01:01:56,196 - #41 print
INFO  01:01:56,196 - #32 (
INFO  01:01:56,196 - #45 x
INFO  01:01:56,196 - #33 )
INFO  01:01:56,196 - #13 ;
INFO  01:01:56,196 - #45 y
INFO  01:01:56,196 - #28 =
INFO  01:01:56,196 - #45 x
INFO  01:01:56,196 - #18 /
INFO  01:01:56,196 - #9 4
INFO  01:01:56,196 - #13 ;
INFO  01:01:56,196 - #41 print
INFO  01:01:56,196 - #32 (
INFO  01:01:56,196 - #45 y
INFO  01:01:56,196 - #33 )
INFO  01:01:56,196 - #13 ;
INFO  01:01:56,197 - #45 x
INFO  01:01:56,197 - #28 =
INFO  01:01:56,197 - #45 y
INFO  01:01:56,197 - #19 %
INFO  01:01:56,197 - #9 3
INFO  01:01:56,197 - #13 ;
INFO  01:01:56,197 - #41 print
INFO  01:01:56,197 - #32 (
INFO  01:01:56,198 - #45 x
INFO  01:01:56,198 - #33 )
INFO  01:01:56,198 - #13 ;
INFO  01:01:56,198 - #42 read
INFO  01:01:56,198 - #32 (
INFO  01:01:56,198 - #45 x
INFO  01:01:56,198 - #33 )
INFO  01:01:56,198 - #13 ;
INFO  01:01:56,198 - #45 x
INFO  01:01:56,198 - #28 =
INFO  01:01:56,198 - #45 x
INFO  01:01:56,198 - #17 *
INFO  01:01:56,198 - #45 y
INFO  01:01:56,198 - #13 ;
INFO  01:01:56,198 - #41 print
INFO  01:01:56,198 - #32 (
INFO  01:01:56,198 - #45 x
INFO  01:01:56,198 - #33 )
INFO  01:01:56,198 - #13 ;
INFO  01:01:56,198 - #41 print
INFO  01:01:56,199 - #32 (
INFO  01:01:56,199 - #11 false
INFO  01:01:56,199 - #12 ,
INFO  01:01:56,199 - #9 20
INFO  01:01:56,199 - #33 )
INFO  01:01:56,199 - #13 ;
INFO  01:01:56,199 - #8 return
INFO  01:01:56,199 - #9 0
INFO  01:01:56,199 - #13 ;
INFO  01:01:56,199 - #35 }
INFO  01:01:56,199 - #35 }
INFO  01:01:56,201 - ***Abstract tree****
INFO  01:01:56,201 - #0
DEBUG 01:01:56,210 - Variable with name x has the address of 0
DEBUG 01:01:56,210 - Variable with name y has the address of 2
DEBUG 01:01:56,210 - found constant with value 5of type 1
DEBUG 01:01:56,210 - constant factor is type 1
DEBUG 01:01:56,210 - term SingleFactorterm is type 1
DEBUG 01:01:56,210 - exprWithNoMinus is type 1
DEBUG 01:01:56,210 - term SingleFactorterm is type 3
DEBUG 01:01:56,210 - exprWithNoMinus is type 3
DEBUG 01:01:56,210 - found constant with value 0of type 1
DEBUG 01:01:56,210 - constant factor is type 1
DEBUG 01:01:56,210 - term SingleFactorterm is type 1
DEBUG 01:01:56,210 - exprWithNoMinus is type 1
DEBUG 01:01:56,210 - found constant with value 0of type 1
DEBUG 01:01:56,210 - constant factor is type 1
DEBUG 01:01:56,210 - term SingleFactorterm is type 1
DEBUG 01:01:56,210 - exprWithNoMinus is type 1
DEBUG 01:01:56,210 - found constant with value 0of type 1
DEBUG 01:01:56,211 - constant factor is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,211 - exprWithNoMinus is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,211 - exprWithNoMinus is type 1
DEBUG 01:01:56,211 - print statement has arg of type 1
DEBUG 01:01:56,211 - found constant with value 1of type 1
DEBUG 01:01:56,211 - constant factor is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,211 - exprWithNoMinus is type 1
DEBUG 01:01:56,211 - found constant with value 1of type 1
DEBUG 01:01:56,211 - print statement has arg of type 1
DEBUG 01:01:56,211 - found constant with value *****of type 2
DEBUG 01:01:56,211 - found constant with value 97of type 2
DEBUG 01:01:56,211 - constant factor is type 2
DEBUG 01:01:56,211 - term SingleFactorterm is type 2
DEBUG 01:01:56,211 - exprWithNoMinus is type 2
DEBUG 01:01:56,211 - found constant with value 1of type 1
DEBUG 01:01:56,211 - print statement has arg of type 2
DEBUG 01:01:56,211 - found constant with value 5of type 1
DEBUG 01:01:56,211 - constant factor is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,211 - exprWithNoMinus is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,211 - found constant with value 3of type 1
DEBUG 01:01:56,211 - constant factor is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,211 - exprWithNoMinus is type 1
DEBUG 01:01:56,211 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - print statement has arg of type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - print statement has arg of type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - print statement has arg of type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - found constant with value 2of type 1
DEBUG 01:01:56,212 - constant factor is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - ExprWithMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - print statement has arg of type 1
DEBUG 01:01:56,212 - found constant with value 2of type 1
DEBUG 01:01:56,212 - constant factor is type 1
DEBUG 01:01:56,212 - term element is type 1
DEBUG 01:01:56,212 - term list single is type 1
DEBUG 01:01:56,212 - term MultiFactorTerm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,212 - term SingleFactorterm is type 1
DEBUG 01:01:56,212 - exprWithNoMinus is type 1
DEBUG 01:01:56,213 - print statement has arg of type 1
DEBUG 01:01:56,213 - found constant with value 4of type 1
DEBUG 01:01:56,213 - constant factor is type 1
DEBUG 01:01:56,213 - term element is type 1
DEBUG 01:01:56,213 - term list single is type 1
DEBUG 01:01:56,213 - term MultiFactorTerm is type 1
DEBUG 01:01:56,213 - exprWithNoMinus is type 1
DEBUG 01:01:56,213 - term SingleFactorterm is type 1
DEBUG 01:01:56,213 - exprWithNoMinus is type 1
DEBUG 01:01:56,213 - print statement has arg of type 1
DEBUG 01:01:56,213 - found constant with value 3of type 1
DEBUG 01:01:56,213 - constant factor is type 1
DEBUG 01:01:56,213 - term element is type 1
DEBUG 01:01:56,213 - term list single is type 1
DEBUG 01:01:56,213 - term MultiFactorTerm is type 1
DEBUG 01:01:56,213 - exprWithNoMinus is type 1
DEBUG 01:01:56,213 - term SingleFactorterm is type 1
DEBUG 01:01:56,213 - exprWithNoMinus is type 1
DEBUG 01:01:56,213 - print statement has arg of type 1
DEBUG 01:01:56,213 - term element is type 1
DEBUG 01:01:56,213 - term list single is type 1
DEBUG 01:01:56,213 - term MultiFactorTerm is type 1
DEBUG 01:01:56,214 - exprWithNoMinus is type 1
DEBUG 01:01:56,214 - term SingleFactorterm is type 1
DEBUG 01:01:56,214 - exprWithNoMinus is type 1
DEBUG 01:01:56,214 - print statement has arg of type 1
DEBUG 01:01:56,214 - found constant with value 0of type 1
DEBUG 01:01:56,214 - constant factor is type 1
DEBUG 01:01:56,214 - term SingleFactorterm is type 1
DEBUG 01:01:56,214 - exprWithNoMinus is type 1
DEBUG 01:01:56,214 - found constant with value 20of type 1
DEBUG 01:01:56,214 - print statement has arg of type 1
DEBUG 01:01:56,214 - found constant with value 0of type 1
DEBUG 01:01:56,214 - constant factor is type 1
DEBUG 01:01:56,214 - term SingleFactorterm is type 1
DEBUG 01:01:56,214 - exprWithNoMinus is type 1
INFO  01:01:56,214 - Print calls = 0
INFO  01:01:56,216 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  01:01:56,219 - Parsiranje uspesno zavrseno!
