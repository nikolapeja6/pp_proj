INFO  00:53:55,065 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\class.mj
INFO  00:53:55,118 - #40 program
INFO  00:53:55,118 - #45 BBB
INFO  00:53:55,118 - #38 class
INFO  00:53:55,118 - #45 A
INFO  00:53:55,118 - #34 {
INFO  00:53:55,118 - #45 int
INFO  00:53:55,118 - #45 b
INFO  00:53:55,119 - #13 ;
INFO  00:53:55,119 - #34 {
INFO  00:53:55,119 - #43 void
INFO  00:53:55,119 - #45 p1
INFO  00:53:55,120 - #32 (
INFO  00:53:55,120 - #33 )
INFO  00:53:55,120 - #34 {
INFO  00:53:55,120 - #8 return
INFO  00:53:55,121 - #13 ;
INFO  00:53:55,121 - #35 }
INFO  00:53:55,122 - #43 void
INFO  00:53:55,122 - #45 pa
INFO  00:53:55,123 - #32 (
INFO  00:53:55,123 - #33 )
INFO  00:53:55,123 - #34 {
INFO  00:53:55,123 - #8 return
INFO  00:53:55,123 - #13 ;
INFO  00:53:55,123 - #35 }
INFO  00:53:55,123 - #35 }
INFO  00:53:55,123 - #35 }
INFO  00:53:55,123 - #38 class
INFO  00:53:55,124 - #45 B
INFO  00:53:55,124 - #34 {
INFO  00:53:55,124 - #45 A
INFO  00:53:55,125 - #45 a
INFO  00:53:55,125 - #13 ;
INFO  00:53:55,125 - #45 int
INFO  00:53:55,125 - #45 x
INFO  00:53:55,125 - #13 ;
INFO  00:53:55,125 - #34 {
INFO  00:53:55,125 - #43 void
INFO  00:53:55,125 - #45 p2
INFO  00:53:55,125 - #32 (
INFO  00:53:55,125 - #33 )
INFO  00:53:55,125 - #34 {
INFO  00:53:55,125 - #8 return
INFO  00:53:55,125 - #13 ;
INFO  00:53:55,125 - #35 }
INFO  00:53:55,125 - #35 }
INFO  00:53:55,125 - #35 }
INFO  00:53:55,125 - #38 class
INFO  00:53:55,125 - #45 C
INFO  00:53:55,126 - #34 {
INFO  00:53:55,126 - #45 B
INFO  00:53:55,126 - #45 b
INFO  00:53:55,126 - #13 ;
INFO  00:53:55,126 - #34 {
INFO  00:53:55,126 - #43 void
INFO  00:53:55,126 - #45 p3
INFO  00:53:55,126 - #32 (
INFO  00:53:55,126 - #33 )
INFO  00:53:55,126 - #34 {
INFO  00:53:55,126 - #8 return
INFO  00:53:55,126 - #13 ;
INFO  00:53:55,126 - #35 }
INFO  00:53:55,126 - #35 }
INFO  00:53:55,126 - #35 }
INFO  00:53:55,126 - #34 {
INFO  00:53:55,126 - #43 void
INFO  00:53:55,127 - #45 main
INFO  00:53:55,127 - #32 (
INFO  00:53:55,127 - #33 )
INFO  00:53:55,127 - #45 C
INFO  00:53:55,127 - #45 c
INFO  00:53:55,127 - #13 ;
INFO  00:53:55,127 - #34 {
INFO  00:53:55,127 - #45 c
INFO  00:53:55,127 - #28 =
INFO  00:53:55,127 - #31 new
INFO  00:53:55,127 - #45 C
INFO  00:53:55,128 - #13 ;
INFO  00:53:55,128 - #45 c
INFO  00:53:55,129 - #14 .
INFO  00:53:55,129 - #45 b
INFO  00:53:55,129 - #28 =
INFO  00:53:55,129 - #31 new
INFO  00:53:55,129 - #45 B
INFO  00:53:55,129 - #13 ;
INFO  00:53:55,129 - #45 c
INFO  00:53:55,129 - #14 .
INFO  00:53:55,129 - #45 b
INFO  00:53:55,129 - #14 .
INFO  00:53:55,129 - #45 a
INFO  00:53:55,129 - #28 =
INFO  00:53:55,130 - #31 new
INFO  00:53:55,130 - #45 A
INFO  00:53:55,130 - #13 ;
INFO  00:53:55,130 - #41 print
INFO  00:53:55,130 - #32 (
INFO  00:53:55,130 - #45 c
INFO  00:53:55,130 - #14 .
INFO  00:53:55,130 - #45 b
INFO  00:53:55,130 - #14 .
INFO  00:53:55,130 - #45 a
INFO  00:53:55,130 - #14 .
INFO  00:53:55,130 - #45 b
INFO  00:53:55,130 - #33 )
INFO  00:53:55,130 - #13 ;
INFO  00:53:55,130 - #41 print
INFO  00:53:55,130 - #32 (
INFO  00:53:55,130 - #45 c
INFO  00:53:55,130 - #14 .
INFO  00:53:55,130 - #45 b
INFO  00:53:55,131 - #14 .
INFO  00:53:55,131 - #45 x
INFO  00:53:55,131 - #33 )
INFO  00:53:55,131 - #13 ;
INFO  00:53:55,131 - #45 c
INFO  00:53:55,131 - #14 .
INFO  00:53:55,131 - #45 b
INFO  00:53:55,131 - #14 .
INFO  00:53:55,131 - #45 a
INFO  00:53:55,131 - #14 .
INFO  00:53:55,131 - #45 b
INFO  00:53:55,131 - #28 =
INFO  00:53:55,131 - #9 5
INFO  00:53:55,131 - #13 ;
INFO  00:53:55,132 - #41 print
INFO  00:53:55,132 - #32 (
INFO  00:53:55,132 - #45 c
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 b
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 a
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 b
INFO  00:53:55,132 - #33 )
INFO  00:53:55,132 - #13 ;
INFO  00:53:55,132 - #41 print
INFO  00:53:55,132 - #32 (
INFO  00:53:55,132 - #45 c
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 b
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 x
INFO  00:53:55,132 - #33 )
INFO  00:53:55,132 - #13 ;
INFO  00:53:55,132 - #45 c
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 b
INFO  00:53:55,132 - #14 .
INFO  00:53:55,132 - #45 x
INFO  00:53:55,133 - #28 =
INFO  00:53:55,133 - #9 2
INFO  00:53:55,133 - #13 ;
INFO  00:53:55,133 - #41 print
INFO  00:53:55,133 - #32 (
INFO  00:53:55,133 - #45 c
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 b
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 a
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 b
INFO  00:53:55,133 - #33 )
INFO  00:53:55,133 - #13 ;
INFO  00:53:55,133 - #41 print
INFO  00:53:55,133 - #32 (
INFO  00:53:55,133 - #45 c
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 b
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 x
INFO  00:53:55,133 - #33 )
INFO  00:53:55,133 - #13 ;
INFO  00:53:55,133 - #45 c
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 b
INFO  00:53:55,133 - #14 .
INFO  00:53:55,133 - #45 a
INFO  00:53:55,133 - #14 .
INFO  00:53:55,134 - #45 b
INFO  00:53:55,134 - #28 =
INFO  00:53:55,134 - #9 5
INFO  00:53:55,134 - #13 ;
INFO  00:53:55,134 - #41 print
INFO  00:53:55,134 - #32 (
INFO  00:53:55,134 - #45 c
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 b
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 a
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 b
INFO  00:53:55,134 - #33 )
INFO  00:53:55,134 - #13 ;
INFO  00:53:55,134 - #41 print
INFO  00:53:55,134 - #32 (
INFO  00:53:55,134 - #45 c
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 b
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 x
INFO  00:53:55,134 - #33 )
INFO  00:53:55,134 - #13 ;
INFO  00:53:55,134 - #45 c
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 b
INFO  00:53:55,134 - #14 .
INFO  00:53:55,134 - #45 a
INFO  00:53:55,135 - #14 .
INFO  00:53:55,135 - #45 b
INFO  00:53:55,135 - #28 =
INFO  00:53:55,135 - #45 c
INFO  00:53:55,135 - #14 .
INFO  00:53:55,135 - #45 b
INFO  00:53:55,135 - #14 .
INFO  00:53:55,135 - #45 a
INFO  00:53:55,135 - #14 .
INFO  00:53:55,135 - #45 b
INFO  00:53:55,135 - #17 *
INFO  00:53:55,135 - #45 c
INFO  00:53:55,136 - #14 .
INFO  00:53:55,136 - #45 b
INFO  00:53:55,136 - #14 .
INFO  00:53:55,136 - #45 a
INFO  00:53:55,136 - #14 .
INFO  00:53:55,136 - #45 b
INFO  00:53:55,136 - #17 *
INFO  00:53:55,136 - #45 c
INFO  00:53:55,136 - #14 .
INFO  00:53:55,136 - #45 b
INFO  00:53:55,136 - #14 .
INFO  00:53:55,136 - #45 x
INFO  00:53:55,136 - #13 ;
INFO  00:53:55,136 - #41 print
INFO  00:53:55,137 - #32 (
INFO  00:53:55,137 - #45 c
INFO  00:53:55,137 - #14 .
INFO  00:53:55,137 - #45 b
INFO  00:53:55,137 - #14 .
INFO  00:53:55,137 - #45 a
INFO  00:53:55,137 - #14 .
INFO  00:53:55,137 - #45 b
INFO  00:53:55,137 - #33 )
INFO  00:53:55,137 - #13 ;
INFO  00:53:55,137 - #41 print
INFO  00:53:55,137 - #32 (
INFO  00:53:55,137 - #45 c
INFO  00:53:55,137 - #14 .
INFO  00:53:55,137 - #45 b
INFO  00:53:55,137 - #14 .
INFO  00:53:55,137 - #45 x
INFO  00:53:55,137 - #33 )
INFO  00:53:55,137 - #13 ;
INFO  00:53:55,137 - #35 }
INFO  00:53:55,137 - #35 }
INFO  00:53:55,138 - ***Abstract tree****
INFO  00:53:55,138 - #0
DEBUG 00:53:55,146 - program name
DEBUG 00:53:55,146 - ClassBegin
DEBUG 00:53:55,147 - Variable with name b has the address of 1
DEBUG 00:53:55,148 - class decl end
DEBUG 00:53:55,148 - class decl 1
DEBUG 00:53:55,148 - ClassBegin
DEBUG 00:53:55,148 - Variable with name a has the address of 1
DEBUG 00:53:55,148 - Variable with name x has the address of 2
DEBUG 00:53:55,148 - class decl end
DEBUG 00:53:55,148 - class decl 1
DEBUG 00:53:55,148 - ClassBegin
DEBUG 00:53:55,148 - Variable with name b has the address of 1
DEBUG 00:53:55,148 - class decl end
DEBUG 00:53:55,148 - class decl 1
DEBUG 00:53:55,148 - program begin
DEBUG 00:53:55,148 - Variable with name c has the address of 0
DEBUG 00:53:55,148 - designator simple at line 28: c
DEBUG 00:53:55,149 - term SingleFactorterm is type 4
DEBUG 00:53:55,149 - exprWithNoMinus is type 4
DEBUG 00:53:55,149 - designator simple at line 30: c
DEBUG 00:53:55,149 - designator simple at line 30: b
DEBUG 00:53:55,149 - term SingleFactorterm is type 4
DEBUG 00:53:55,149 - exprWithNoMinus is type 4
DEBUG 00:53:55,149 - designator simple at line 32: c
DEBUG 00:53:55,149 - designator simple at line 32: b
DEBUG 00:53:55,149 - designator simple at line 32: a
DEBUG 00:53:55,149 - term SingleFactorterm is type 4
DEBUG 00:53:55,149 - exprWithNoMinus is type 4
DEBUG 00:53:55,149 - designator simple at line 34: c
DEBUG 00:53:55,149 - designator simple at line 34: b
DEBUG 00:53:55,149 - designator simple at line 34: a
DEBUG 00:53:55,149 - designator simple at line 34: b
DEBUG 00:53:55,149 - term SingleFactorterm is type 1
DEBUG 00:53:55,149 - exprWithNoMinus is type 1
DEBUG 00:53:55,149 - print statement has arg of type 1
DEBUG 00:53:55,149 - designator simple at line 35: c
DEBUG 00:53:55,149 - designator simple at line 35: b
DEBUG 00:53:55,149 - designator simple at line 35: x
DEBUG 00:53:55,149 - term SingleFactorterm is type 1
DEBUG 00:53:55,149 - exprWithNoMinus is type 1
DEBUG 00:53:55,149 - print statement has arg of type 1
DEBUG 00:53:55,149 - designator simple at line 37: c
DEBUG 00:53:55,149 - designator simple at line 37: b
DEBUG 00:53:55,149 - designator simple at line 37: a
DEBUG 00:53:55,149 - designator simple at line 37: b
DEBUG 00:53:55,149 - found constant with value 5of type 1
DEBUG 00:53:55,150 - constant factor is type 1
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - designator simple at line 39: c
DEBUG 00:53:55,150 - designator simple at line 39: b
DEBUG 00:53:55,150 - designator simple at line 39: a
DEBUG 00:53:55,150 - designator simple at line 39: b
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - print statement has arg of type 1
DEBUG 00:53:55,150 - designator simple at line 40: c
DEBUG 00:53:55,150 - designator simple at line 40: b
DEBUG 00:53:55,150 - designator simple at line 40: x
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - print statement has arg of type 1
DEBUG 00:53:55,150 - designator simple at line 42: c
DEBUG 00:53:55,150 - designator simple at line 42: b
DEBUG 00:53:55,150 - designator simple at line 42: x
DEBUG 00:53:55,150 - found constant with value 2of type 1
DEBUG 00:53:55,150 - constant factor is type 1
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - designator simple at line 44: c
DEBUG 00:53:55,150 - designator simple at line 44: b
DEBUG 00:53:55,150 - designator simple at line 44: a
DEBUG 00:53:55,150 - designator simple at line 44: b
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - print statement has arg of type 1
DEBUG 00:53:55,150 - designator simple at line 45: c
DEBUG 00:53:55,150 - designator simple at line 45: b
DEBUG 00:53:55,150 - designator simple at line 45: x
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - print statement has arg of type 1
DEBUG 00:53:55,150 - designator simple at line 47: c
DEBUG 00:53:55,150 - designator simple at line 47: b
DEBUG 00:53:55,150 - designator simple at line 47: a
DEBUG 00:53:55,150 - designator simple at line 47: b
DEBUG 00:53:55,150 - found constant with value 5of type 1
DEBUG 00:53:55,150 - constant factor is type 1
DEBUG 00:53:55,150 - term SingleFactorterm is type 1
DEBUG 00:53:55,150 - exprWithNoMinus is type 1
DEBUG 00:53:55,150 - designator simple at line 49: c
DEBUG 00:53:55,150 - designator simple at line 49: b
DEBUG 00:53:55,150 - designator simple at line 49: a
DEBUG 00:53:55,151 - designator simple at line 49: b
DEBUG 00:53:55,151 - term SingleFactorterm is type 1
DEBUG 00:53:55,151 - exprWithNoMinus is type 1
DEBUG 00:53:55,151 - print statement has arg of type 1
DEBUG 00:53:55,151 - designator simple at line 50: c
DEBUG 00:53:55,151 - designator simple at line 50: b
DEBUG 00:53:55,151 - designator simple at line 50: x
DEBUG 00:53:55,151 - term SingleFactorterm is type 1
DEBUG 00:53:55,151 - exprWithNoMinus is type 1
DEBUG 00:53:55,151 - print statement has arg of type 1
DEBUG 00:53:55,151 - designator simple at line 52: c
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - designator simple at line 52: a
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - designator simple at line 52: c
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - designator simple at line 52: a
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - designator simple at line 52: c
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - designator simple at line 52: a
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - term element is type 1
DEBUG 00:53:55,151 - term list single is type 1
DEBUG 00:53:55,151 - designator simple at line 52: c
DEBUG 00:53:55,151 - designator simple at line 52: b
DEBUG 00:53:55,151 - designator simple at line 52: x
DEBUG 00:53:55,151 - term element is type 1
DEBUG 00:53:55,151 - term list multiple is type 1
DEBUG 00:53:55,151 - term MultiFactorTerm is type 1
DEBUG 00:53:55,151 - exprWithNoMinus is type 1
DEBUG 00:53:55,151 - designator simple at line 54: c
DEBUG 00:53:55,151 - designator simple at line 54: b
DEBUG 00:53:55,151 - designator simple at line 54: a
DEBUG 00:53:55,151 - designator simple at line 54: b
DEBUG 00:53:55,152 - term SingleFactorterm is type 1
DEBUG 00:53:55,152 - exprWithNoMinus is type 1
DEBUG 00:53:55,152 - print statement has arg of type 1
DEBUG 00:53:55,152 - designator simple at line 55: c
DEBUG 00:53:55,152 - designator simple at line 55: b
DEBUG 00:53:55,152 - designator simple at line 55: x
DEBUG 00:53:55,152 - term SingleFactorterm is type 1
DEBUG 00:53:55,152 - exprWithNoMinus is type 1
DEBUG 00:53:55,152 - print statement has arg of type 1
INFO  00:53:55,152 - Print calls = 0
DEBUG 00:53:55,152 - A
	p1(0); pa(0); 
B
	p2(0); 
C
	p3(0); 

INFO  00:53:55,154 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
DEBUG 00:53:55,156 - new called with level = 1
DEBUG 00:53:55,156 - class is 4
DEBUG 00:53:55,156 - new called with level = 2
DEBUG 00:53:55,157 - class is 4
DEBUG 00:53:55,157 - new called with level = 1
DEBUG 00:53:55,157 - class is 4
INFO  00:53:55,160 - Parsiranje uspesno zavrseno!
