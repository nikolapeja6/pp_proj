INFO  13:01:56,804 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\303.mj
INFO  13:01:57,524 - #40 program
INFO  13:01:57,524 - #45 test_303
INFO  13:01:57,525 - #44 const
INFO  13:01:57,525 - #45 int
INFO  13:01:57,525 - #45 cinilac
INFO  13:01:57,525 - #28 =
INFO  13:01:57,525 - #9 4
INFO  13:01:57,525 - #12 ,
INFO  13:01:57,526 - #45 delilac
INFO  13:01:57,526 - #28 =
INFO  13:01:57,526 - #9 3
INFO  13:01:57,526 - #13 ;
INFO  13:01:57,526 - #38 class
INFO  13:01:57,527 - #45 Predmet
INFO  13:01:57,527 - #34 {
INFO  13:01:57,527 - #45 int
INFO  13:01:57,527 - #45 tezina
INFO  13:01:57,527 - #13 ;
INFO  13:01:57,527 - #45 char
INFO  13:01:57,528 - #45 vrsta
INFO  13:01:57,528 - #13 ;
INFO  13:01:57,528 - #34 {
INFO  13:01:57,528 - #43 void
INFO  13:01:57,528 - #45 ucitajTezinu
INFO  13:01:57,558 - #32 (
INFO  13:01:57,559 - #33 )
INFO  13:01:57,559 - #34 {
INFO  13:01:57,559 - #42 read
INFO  13:01:57,576 - #32 (
INFO  13:01:57,576 - #45 tezina
INFO  13:01:57,576 - #33 )
INFO  13:01:57,576 - #13 ;
INFO  13:01:57,576 - #35 }
INFO  13:01:57,576 - #45 int
INFO  13:01:57,584 - #45 zapremina
INFO  13:01:57,584 - #32 (
INFO  13:01:57,584 - #33 )
INFO  13:01:57,584 - #34 {
INFO  13:01:57,584 - #8 return
INFO  13:01:57,584 - #9 0
INFO  13:01:57,584 - #13 ;
INFO  13:01:57,586 - #35 }
INFO  13:01:57,587 - #45 int
INFO  13:01:57,587 - #45 Q
INFO  13:01:57,587 - #32 (
INFO  13:01:57,587 - #33 )
INFO  13:01:57,587 - #34 {
INFO  13:01:57,587 - #8 return
INFO  13:01:57,587 - #45 zapremina
INFO  13:01:57,587 - #32 (
INFO  13:01:57,587 - #33 )
INFO  13:01:57,587 - #17 *
INFO  13:01:57,587 - #45 tezina
INFO  13:01:57,598 - #13 ;
INFO  13:01:57,599 - #35 }
INFO  13:01:57,599 - #35 }
INFO  13:01:57,599 - #35 }
INFO  13:01:57,599 - #38 class
INFO  13:01:57,610 - #45 Sfera
INFO  13:01:57,610 - #39 extends
INFO  13:01:57,610 - #45 Predmet
INFO  13:01:57,610 - #34 {
INFO  13:01:57,610 - #45 int
INFO  13:01:57,610 - #45 r
INFO  13:01:57,610 - #13 ;
INFO  13:01:57,610 - #34 {
INFO  13:01:57,611 - #45 int
INFO  13:01:57,611 - #45 zapremina
INFO  13:01:57,611 - #32 (
INFO  13:01:57,611 - #33 )
INFO  13:01:57,611 - #45 int
INFO  13:01:57,611 - #45 z
INFO  13:01:57,611 - #13 ;
INFO  13:01:57,611 - #34 {
INFO  13:01:57,611 - #45 z
INFO  13:01:57,611 - #28 =
INFO  13:01:57,611 - #45 cinilac
INFO  13:01:57,611 - #13 ;
INFO  13:01:57,612 - #8 return
INFO  13:01:57,612 - #45 z
INFO  13:01:57,612 - #17 *
INFO  13:01:57,612 - #32 (
INFO  13:01:57,612 - #45 r
INFO  13:01:57,612 - #18 /
INFO  13:01:57,612 - #45 delilac
INFO  13:01:57,618 - #33 )
INFO  13:01:57,618 - #13 ;
INFO  13:01:57,618 - #35 }
INFO  13:01:57,618 - #35 }
INFO  13:01:57,619 - #35 }
INFO  13:01:57,619 - #38 class
INFO  13:01:57,619 - #45 Kvadar
INFO  13:01:57,619 - #39 extends
INFO  13:01:57,619 - #45 Predmet
INFO  13:01:57,619 - #34 {
INFO  13:01:57,619 - #45 int
INFO  13:01:57,619 - #45 a
INFO  13:01:57,619 - #12 ,
INFO  13:01:57,619 - #45 b
INFO  13:01:57,619 - #12 ,
INFO  13:01:57,619 - #45 c
INFO  13:01:57,619 - #13 ;
INFO  13:01:57,619 - #34 {
INFO  13:01:57,620 - #45 int
INFO  13:01:57,620 - #45 zapremina
INFO  13:01:57,620 - #32 (
INFO  13:01:57,620 - #33 )
INFO  13:01:57,620 - #45 int
INFO  13:01:57,620 - #45 z
INFO  13:01:57,620 - #13 ;
INFO  13:01:57,620 - #34 {
INFO  13:01:57,620 - #45 z
INFO  13:01:57,620 - #28 =
INFO  13:01:57,620 - #45 a
INFO  13:01:57,620 - #17 *
INFO  13:01:57,620 - #45 b
INFO  13:01:57,620 - #17 *
INFO  13:01:57,620 - #45 c
INFO  13:01:57,620 - #13 ;
INFO  13:01:57,620 - #8 return
INFO  13:01:57,620 - #45 z
INFO  13:01:57,621 - #13 ;
INFO  13:01:57,621 - #35 }
INFO  13:01:57,621 - #35 }
INFO  13:01:57,621 - #35 }
INFO  13:01:57,621 - #45 int
INFO  13:01:57,621 - #45 zapreminaK
INFO  13:01:57,621 - #12 ,
INFO  13:01:57,621 - #45 zapreminaS
INFO  13:01:57,621 - #13 ;
INFO  13:01:57,621 - #45 int
INFO  13:01:57,621 - #45 tezinaK
INFO  13:01:57,621 - #12 ,
INFO  13:01:57,621 - #45 tezinaS
INFO  13:01:57,621 - #13 ;
INFO  13:01:57,621 - #34 {
INFO  13:01:57,621 - #43 void
INFO  13:01:57,628 - #45 ispis
INFO  13:01:57,628 - #32 (
INFO  13:01:57,628 - #45 Predmet
INFO  13:01:57,628 - #45 p
INFO  13:01:57,628 - #33 )
INFO  13:01:57,629 - #34 {
INFO  13:01:57,629 - #41 print
INFO  13:01:57,629 - #32 (
INFO  13:01:57,629 - #45 p
INFO  13:01:57,629 - #14 .
INFO  13:01:57,629 - #45 vrsta
INFO  13:01:57,629 - #33 )
INFO  13:01:57,629 - #13 ;
INFO  13:01:57,629 - #41 print
INFO  13:01:57,629 - #32 (
INFO  13:01:57,629 - #45 eol
INFO  13:01:57,629 - #33 )
INFO  13:01:57,630 - #13 ;
INFO  13:01:57,630 - #41 print
INFO  13:01:57,630 - #32 (
INFO  13:01:57,630 - #45 p
INFO  13:01:57,630 - #14 .
INFO  13:01:57,630 - #45 tezina
INFO  13:01:57,630 - #33 )
INFO  13:01:57,630 - #13 ;
INFO  13:01:57,630 - #35 }
INFO  13:01:57,630 - #43 void
INFO  13:01:57,630 - #45 main
INFO  13:01:57,630 - #32 (
INFO  13:01:57,630 - #33 )
INFO  13:01:57,630 - #45 Predmet
INFO  13:01:57,630 - #45 predmeti
INFO  13:01:57,630 - #36 [
INFO  13:01:57,630 - #37 ]
INFO  13:01:57,630 - #13 ;
INFO  13:01:57,630 - #45 int
INFO  13:01:57,630 - #45 i
INFO  13:01:57,631 - #13 ;
INFO  13:01:57,631 - #45 Sfera
INFO  13:01:57,631 - #45 s1
INFO  13:01:57,631 - #12 ,
INFO  13:01:57,631 - #45 s2
INFO  13:01:57,631 - #12 ,
INFO  13:01:57,631 - #45 s3
INFO  13:01:57,631 - #13 ;
INFO  13:01:57,631 - #45 Kvadar
INFO  13:01:57,631 - #45 k1
INFO  13:01:57,631 - #12 ,
INFO  13:01:57,631 - #45 k2
INFO  13:01:57,631 - #12 ,
INFO  13:01:57,631 - #45 k3
INFO  13:01:57,631 - #13 ;
INFO  13:01:57,631 - #45 int
INFO  13:01:57,631 - #45 t
INFO  13:01:57,631 - #13 ;
INFO  13:01:57,631 - #34 {
INFO  13:01:57,631 - #45 predmeti
INFO  13:01:57,631 - #28 =
INFO  13:01:57,631 - #31 new
INFO  13:01:57,631 - #45 Predmet
INFO  13:01:57,631 - #36 [
INFO  13:01:57,631 - #9 6
INFO  13:01:57,632 - #37 ]
INFO  13:01:57,632 - #13 ;
INFO  13:01:57,632 - #45 s1
INFO  13:01:57,632 - #28 =
INFO  13:01:57,632 - #31 new
INFO  13:01:57,632 - #45 Sfera
INFO  13:01:57,632 - #13 ;
INFO  13:01:57,632 - #45 s2
INFO  13:01:57,632 - #28 =
INFO  13:01:57,632 - #31 new
INFO  13:01:57,632 - #45 Sfera
INFO  13:01:57,632 - #13 ;
INFO  13:01:57,632 - #45 s3
INFO  13:01:57,632 - #28 =
INFO  13:01:57,632 - #31 new
INFO  13:01:57,632 - #45 Sfera
INFO  13:01:57,632 - #13 ;
INFO  13:01:57,632 - #45 k1
INFO  13:01:57,632 - #28 =
INFO  13:01:57,632 - #31 new
INFO  13:01:57,633 - #45 Kvadar
INFO  13:01:57,633 - #13 ;
INFO  13:01:57,633 - #45 k2
INFO  13:01:57,633 - #28 =
INFO  13:01:57,633 - #31 new
INFO  13:01:57,633 - #45 Kvadar
INFO  13:01:57,633 - #13 ;
INFO  13:01:57,633 - #45 k3
INFO  13:01:57,633 - #28 =
INFO  13:01:57,633 - #31 new
INFO  13:01:57,633 - #45 Kvadar
INFO  13:01:57,633 - #13 ;
INFO  13:01:57,633 - #45 predmeti
INFO  13:01:57,634 - #36 [
INFO  13:01:57,634 - #9 0
INFO  13:01:57,634 - #37 ]
INFO  13:01:57,634 - #28 =
INFO  13:01:57,634 - #45 s1
INFO  13:01:57,634 - #13 ;
INFO  13:01:57,634 - #45 predmeti
INFO  13:01:57,634 - #36 [
INFO  13:01:57,634 - #9 2
INFO  13:01:57,634 - #37 ]
INFO  13:01:57,634 - #28 =
INFO  13:01:57,634 - #45 s2
INFO  13:01:57,634 - #13 ;
INFO  13:01:57,634 - #45 predmeti
INFO  13:01:57,634 - #36 [
INFO  13:01:57,634 - #9 4
INFO  13:01:57,634 - #37 ]
INFO  13:01:57,634 - #28 =
INFO  13:01:57,635 - #45 s3
INFO  13:01:57,635 - #13 ;
INFO  13:01:57,635 - #45 predmeti
INFO  13:01:57,635 - #36 [
INFO  13:01:57,635 - #9 1
INFO  13:01:57,635 - #37 ]
INFO  13:01:57,635 - #28 =
INFO  13:01:57,635 - #45 k1
INFO  13:01:57,635 - #13 ;
INFO  13:01:57,635 - #45 predmeti
INFO  13:01:57,635 - #36 [
INFO  13:01:57,635 - #9 3
INFO  13:01:57,635 - #37 ]
INFO  13:01:57,635 - #28 =
INFO  13:01:57,635 - #45 k2
INFO  13:01:57,635 - #13 ;
INFO  13:01:57,635 - #45 predmeti
INFO  13:01:57,635 - #36 [
INFO  13:01:57,635 - #9 5
INFO  13:01:57,635 - #37 ]
INFO  13:01:57,635 - #28 =
INFO  13:01:57,635 - #45 k3
INFO  13:01:57,635 - #13 ;
INFO  13:01:57,635 - #42 read
INFO  13:01:57,636 - #32 (
INFO  13:01:57,636 - #45 t
INFO  13:01:57,636 - #33 )
INFO  13:01:57,636 - #13 ;
INFO  13:01:57,636 - #45 i
INFO  13:01:57,636 - #28 =
INFO  13:01:57,636 - #9 0
INFO  13:01:57,636 - #13 ;
INFO  13:01:57,636 - #5 do
INFO  13:01:57,636 - #34 {
INFO  13:01:57,647 - #45 i
INFO  13:01:57,647 - #29 ++
INFO  13:01:57,648 - #13 ;
INFO  13:01:57,648 - #35 }
INFO  13:01:57,648 - #6 while
INFO  13:01:57,648 - #32 (
INFO  13:01:57,648 - #45 i
INFO  13:01:57,648 - #23 <
INFO  13:01:57,648 - #9 6
INFO  13:01:57,655 - #33 )
INFO  13:01:57,655 - #13 ;
INFO  13:01:57,656 - #45 i
INFO  13:01:57,656 - #28 =
INFO  13:01:57,656 - #9 0
INFO  13:01:57,656 - #13 ;
INFO  13:01:57,656 - #45 zapreminaS
INFO  13:01:57,656 - #28 =
INFO  13:01:57,656 - #9 0
INFO  13:01:57,656 - #13 ;
INFO  13:01:57,656 - #45 tezinaS
INFO  13:01:57,656 - #28 =
INFO  13:01:57,656 - #9 0
INFO  13:01:57,656 - #13 ;
INFO  13:01:57,656 - #5 do
INFO  13:01:57,656 - #34 {
INFO  13:01:57,656 - #45 i
INFO  13:01:57,656 - #29 ++
INFO  13:01:57,656 - #13 ;
INFO  13:01:57,656 - #2 if
INFO  13:01:57,656 - #32 (
INFO  13:01:57,657 - #45 i
INFO  13:01:57,657 - #19 %
INFO  13:01:57,657 - #9 2
INFO  13:01:57,658 - #20 ==
INFO  13:01:57,658 - #9 0
INFO  13:01:57,660 - #33 )
INFO  13:01:57,660 - #7 continue
INFO  13:01:57,660 - #13 ;
INFO  13:01:57,660 - #45 zapreminaS
INFO  13:01:57,665 - #28 =
INFO  13:01:57,665 - #45 zapreminaS
INFO  13:01:57,665 - #15 +
INFO  13:01:57,665 - #45 predmeti
INFO  13:01:57,672 - #36 [
INFO  13:01:57,672 - #45 i
INFO  13:01:57,672 - #16 -
INFO  13:01:57,672 - #9 1
INFO  13:01:57,673 - #37 ]
INFO  13:01:57,674 - #14 .
INFO  13:01:57,674 - #45 zapremina
INFO  13:01:57,674 - #32 (
INFO  13:01:57,674 - #33 )
INFO  13:01:57,674 - #13 ;
INFO  13:01:57,674 - #45 tezinaS
INFO  13:01:57,674 - #28 =
INFO  13:01:57,674 - #45 tezinaS
INFO  13:01:57,674 - #15 +
INFO  13:01:57,674 - #45 predmeti
INFO  13:01:57,674 - #36 [
INFO  13:01:57,674 - #45 i
INFO  13:01:57,674 - #16 -
INFO  13:01:57,674 - #9 1
INFO  13:01:57,674 - #37 ]
INFO  13:01:57,674 - #14 .
INFO  13:01:57,675 - #45 Q
INFO  13:01:57,675 - #32 (
INFO  13:01:57,675 - #33 )
INFO  13:01:57,675 - #13 ;
INFO  13:01:57,675 - #45 ispis
INFO  13:01:57,675 - #32 (
INFO  13:01:57,675 - #45 predmeti
INFO  13:01:57,675 - #36 [
INFO  13:01:57,675 - #45 i
INFO  13:01:57,675 - #16 -
INFO  13:01:57,675 - #9 1
INFO  13:01:57,675 - #37 ]
INFO  13:01:57,675 - #33 )
INFO  13:01:57,675 - #13 ;
INFO  13:01:57,675 - #35 }
INFO  13:01:57,675 - #6 while
INFO  13:01:57,675 - #32 (
INFO  13:01:57,675 - #45 i
INFO  13:01:57,675 - #23 <
INFO  13:01:57,675 - #9 6
INFO  13:01:57,675 - #33 )
INFO  13:01:57,676 - #13 ;
INFO  13:01:57,676 - #45 i
INFO  13:01:57,676 - #28 =
INFO  13:01:57,676 - #9 0
INFO  13:01:57,676 - #13 ;
INFO  13:01:57,676 - #45 zapreminaK
INFO  13:01:57,676 - #28 =
INFO  13:01:57,676 - #9 0
INFO  13:01:57,676 - #13 ;
INFO  13:01:57,676 - #45 tezinaK
INFO  13:01:57,676 - #28 =
INFO  13:01:57,676 - #9 0
INFO  13:01:57,676 - #13 ;
INFO  13:01:57,676 - #5 do
INFO  13:01:57,676 - #34 {
INFO  13:01:57,676 - #45 i
INFO  13:01:57,676 - #29 ++
INFO  13:01:57,676 - #13 ;
INFO  13:01:57,676 - #2 if
INFO  13:01:57,676 - #32 (
INFO  13:01:57,676 - #45 i
INFO  13:01:57,676 - #19 %
INFO  13:01:57,676 - #9 2
INFO  13:01:57,676 - #20 ==
INFO  13:01:57,677 - #9 1
INFO  13:01:57,677 - #33 )
INFO  13:01:57,677 - #7 continue
INFO  13:01:57,677 - #13 ;
INFO  13:01:57,677 - #45 zapreminaK
INFO  13:01:57,677 - #28 =
INFO  13:01:57,677 - #45 zapreminaK
INFO  13:01:57,677 - #15 +
INFO  13:01:57,677 - #45 predmeti
INFO  13:01:57,677 - #36 [
INFO  13:01:57,677 - #45 i
INFO  13:01:57,677 - #16 -
INFO  13:01:57,677 - #9 1
INFO  13:01:57,677 - #37 ]
INFO  13:01:57,677 - #14 .
INFO  13:01:57,677 - #45 zapremina
INFO  13:01:57,677 - #32 (
INFO  13:01:57,678 - #33 )
INFO  13:01:57,678 - #13 ;
INFO  13:01:57,678 - #45 tezinaK
INFO  13:01:57,678 - #28 =
INFO  13:01:57,679 - #45 tezinaK
INFO  13:01:57,679 - #15 +
INFO  13:01:57,679 - #45 predmeti
INFO  13:01:57,679 - #36 [
INFO  13:01:57,679 - #45 i
INFO  13:01:57,679 - #16 -
INFO  13:01:57,679 - #9 1
INFO  13:01:57,679 - #37 ]
INFO  13:01:57,679 - #14 .
INFO  13:01:57,679 - #45 Q
INFO  13:01:57,679 - #32 (
INFO  13:01:57,679 - #33 )
INFO  13:01:57,679 - #13 ;
INFO  13:01:57,680 - #45 ispis
INFO  13:01:57,680 - #32 (
INFO  13:01:57,680 - #45 predmeti
INFO  13:01:57,680 - #36 [
INFO  13:01:57,680 - #45 i
INFO  13:01:57,680 - #16 -
INFO  13:01:57,680 - #9 1
INFO  13:01:57,680 - #37 ]
INFO  13:01:57,680 - #33 )
INFO  13:01:57,680 - #13 ;
INFO  13:01:57,680 - #35 }
INFO  13:01:57,680 - #6 while
INFO  13:01:57,680 - #32 (
INFO  13:01:57,680 - #45 i
INFO  13:01:57,680 - #23 <
INFO  13:01:57,680 - #9 6
INFO  13:01:57,680 - #33 )
INFO  13:01:57,680 - #13 ;
INFO  13:01:57,680 - #41 print
INFO  13:01:57,680 - #32 (
INFO  13:01:57,680 - #45 zapreminaS
INFO  13:01:57,680 - #33 )
INFO  13:01:57,680 - #13 ;
INFO  13:01:57,680 - #41 print
INFO  13:01:57,680 - #32 (
INFO  13:01:57,680 - #45 eol
INFO  13:01:57,680 - #33 )
INFO  13:01:57,680 - #13 ;
INFO  13:01:57,680 - #41 print
INFO  13:01:57,680 - #32 (
INFO  13:01:57,680 - #45 zapreminaK
INFO  13:01:57,680 - #33 )
INFO  13:01:57,680 - #13 ;
INFO  13:01:57,680 - #41 print
INFO  13:01:57,680 - #32 (
INFO  13:01:57,680 - #45 eol
INFO  13:01:57,681 - #33 )
INFO  13:01:57,681 - #13 ;
INFO  13:01:57,681 - #41 print
INFO  13:01:57,681 - #32 (
INFO  13:01:57,681 - #45 tezinaS
INFO  13:01:57,681 - #33 )
INFO  13:01:57,681 - #13 ;
INFO  13:01:57,681 - #41 print
INFO  13:01:57,681 - #32 (
INFO  13:01:57,681 - #45 eol
INFO  13:01:57,681 - #33 )
INFO  13:01:57,681 - #13 ;
INFO  13:01:57,681 - #41 print
INFO  13:01:57,681 - #32 (
INFO  13:01:57,681 - #45 tezinaK
INFO  13:01:57,681 - #33 )
INFO  13:01:57,681 - #13 ;
INFO  13:01:57,681 - #41 print
INFO  13:01:57,681 - #32 (
INFO  13:01:57,681 - #45 eol
INFO  13:01:57,681 - #33 )
INFO  13:01:57,681 - #13 ;
INFO  13:01:57,681 - #35 }
INFO  13:01:57,681 - #35 }
INFO  13:01:57,689 - ***Abstract tree****
INFO  13:01:57,689 - #0
DEBUG 13:01:57,715 - program name
DEBUG 13:01:57,716 - found constant with value 4of type 1
DEBUG 13:01:57,716 - found constant with value 3of type 1
DEBUG 13:01:57,716 - ClassBegin
DEBUG 13:02:20,472 - Variable with name tezina has the address of 1
DEBUG 13:02:20,472 - Variable with name vrsta has the address of 2
DEBUG 13:05:29,333 - designator simple at line 12: tezina
DEBUG 13:05:33,335 - found constant with value 0of type 1
DEBUG 13:05:33,335 - constant factor is type 1
DEBUG 13:05:33,336 - term SingleFactorterm is type 1
DEBUG 13:05:33,336 - exprWithNoMinus is type 1
DEBUG 13:05:36,376 - designator simple at line 14: zapremina
DEBUG 13:05:36,377 - designator simple at line 14: tezina
DEBUG 13:05:36,377 - term element is type 1
DEBUG 13:05:36,377 - term list single is type 1
DEBUG 13:05:36,377 - term MultiFactorTerm is type 1
DEBUG 13:05:36,377 - exprWithNoMinus is type 1
DEBUG 13:05:36,377 - class decl end
DEBUG 13:05:36,378 - class decl 1
DEBUG 13:05:36,378 - derived ClassBegin
DEBUG 13:05:54,971 - Variable with name r has the address of 1
