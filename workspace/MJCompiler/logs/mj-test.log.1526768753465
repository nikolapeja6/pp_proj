INFO  00:25:48,496 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\303.mj
INFO  00:25:49,087 - #40 program
INFO  00:25:49,087 - #45 test_303
INFO  00:25:49,087 - #44 const
INFO  00:25:49,087 - #45 int
INFO  00:25:49,087 - #45 cinilac
INFO  00:25:49,087 - #28 =
INFO  00:25:49,087 - #9 4
INFO  00:25:49,087 - #12 ,
INFO  00:25:49,088 - #45 delilac
INFO  00:25:49,088 - #28 =
INFO  00:25:49,088 - #9 3
INFO  00:25:49,088 - #13 ;
INFO  00:25:49,088 - #38 class
INFO  00:25:49,089 - #45 Predmet
INFO  00:25:49,089 - #34 {
INFO  00:25:49,089 - #45 int
INFO  00:25:49,089 - #45 tezina
INFO  00:25:49,089 - #13 ;
INFO  00:25:49,089 - #45 char
INFO  00:25:49,089 - #45 vrsta
INFO  00:25:49,089 - #13 ;
INFO  00:25:49,090 - #34 {
INFO  00:25:49,090 - #43 void
INFO  00:25:49,090 - #45 ucitajTezinu
INFO  00:25:49,111 - #32 (
INFO  00:25:49,111 - #33 )
INFO  00:25:49,111 - #34 {
INFO  00:25:49,111 - #42 read
INFO  00:25:49,122 - #32 (
INFO  00:25:49,122 - #45 tezina
INFO  00:25:49,122 - #33 )
INFO  00:25:49,122 - #13 ;
INFO  00:25:49,122 - #35 }
INFO  00:25:49,123 - #45 int
INFO  00:25:49,130 - #45 zapremina
INFO  00:25:49,130 - #32 (
INFO  00:25:49,130 - #33 )
INFO  00:25:49,130 - #34 {
INFO  00:25:49,130 - #8 return
INFO  00:25:49,130 - #9 0
INFO  00:25:49,130 - #13 ;
INFO  00:25:49,132 - #35 }
INFO  00:25:49,132 - #45 int
INFO  00:25:49,132 - #45 Q
INFO  00:25:49,132 - #32 (
INFO  00:25:49,132 - #33 )
INFO  00:25:49,132 - #34 {
INFO  00:25:49,132 - #8 return
INFO  00:25:49,132 - #45 zapremina
INFO  00:25:49,132 - #32 (
INFO  00:25:49,132 - #33 )
INFO  00:25:49,132 - #17 *
INFO  00:25:49,133 - #45 tezina
INFO  00:25:49,142 - #13 ;
INFO  00:25:49,143 - #35 }
INFO  00:25:49,143 - #35 }
INFO  00:25:49,143 - #35 }
INFO  00:25:49,143 - #38 class
INFO  00:25:49,155 - #45 Sfera
INFO  00:25:49,155 - #39 extends
INFO  00:25:49,155 - #45 Predmet
INFO  00:25:49,155 - #34 {
INFO  00:25:49,155 - #45 int
INFO  00:25:49,155 - #45 r
INFO  00:25:49,155 - #13 ;
INFO  00:25:49,155 - #34 {
INFO  00:25:49,155 - #45 int
INFO  00:25:49,156 - #45 zapremina
INFO  00:25:49,156 - #32 (
INFO  00:25:49,156 - #33 )
INFO  00:25:49,156 - #45 int
INFO  00:25:49,156 - #45 z
INFO  00:25:49,156 - #13 ;
INFO  00:25:49,156 - #34 {
INFO  00:25:49,156 - #45 z
INFO  00:25:49,156 - #28 =
INFO  00:25:49,156 - #45 cinilac
INFO  00:25:49,156 - #13 ;
INFO  00:25:49,156 - #8 return
INFO  00:25:49,156 - #45 z
INFO  00:25:49,156 - #17 *
INFO  00:25:49,156 - #32 (
INFO  00:25:49,156 - #45 r
INFO  00:25:49,156 - #18 /
INFO  00:25:49,157 - #45 delilac
INFO  00:25:49,162 - #33 )
INFO  00:25:49,162 - #13 ;
INFO  00:25:49,162 - #35 }
INFO  00:25:49,162 - #35 }
INFO  00:25:49,162 - #35 }
INFO  00:25:49,162 - #38 class
INFO  00:25:49,162 - #45 Kvadar
INFO  00:25:49,162 - #39 extends
INFO  00:25:49,162 - #45 Predmet
INFO  00:25:49,162 - #34 {
INFO  00:25:49,162 - #45 int
INFO  00:25:49,163 - #45 a
INFO  00:25:49,163 - #12 ,
INFO  00:25:49,163 - #45 b
INFO  00:25:49,163 - #12 ,
INFO  00:25:49,163 - #45 c
INFO  00:25:49,163 - #13 ;
INFO  00:25:49,163 - #34 {
INFO  00:25:49,163 - #45 int
INFO  00:25:49,163 - #45 zapremina
INFO  00:25:49,163 - #32 (
INFO  00:25:49,163 - #33 )
INFO  00:25:49,163 - #45 int
INFO  00:25:49,163 - #45 z
INFO  00:25:49,163 - #13 ;
INFO  00:25:49,163 - #34 {
INFO  00:25:49,163 - #45 z
INFO  00:25:49,163 - #28 =
INFO  00:25:49,163 - #45 a
INFO  00:25:49,163 - #17 *
INFO  00:25:49,164 - #45 b
INFO  00:25:49,164 - #17 *
INFO  00:25:49,164 - #45 c
INFO  00:25:49,164 - #13 ;
INFO  00:25:49,164 - #8 return
INFO  00:25:49,164 - #45 z
INFO  00:25:49,164 - #13 ;
INFO  00:25:49,164 - #35 }
INFO  00:25:49,164 - #35 }
INFO  00:25:49,164 - #35 }
INFO  00:25:49,164 - #45 int
INFO  00:25:49,164 - #45 zapreminaK
INFO  00:25:49,164 - #12 ,
INFO  00:25:49,164 - #45 zapreminaS
INFO  00:25:49,164 - #13 ;
INFO  00:25:49,164 - #45 int
INFO  00:25:49,165 - #45 tezinaK
INFO  00:25:49,165 - #12 ,
INFO  00:25:49,165 - #45 tezinaS
INFO  00:25:49,165 - #13 ;
INFO  00:25:49,165 - #34 {
INFO  00:25:49,165 - #43 void
INFO  00:25:49,171 - #45 ispis
INFO  00:25:49,171 - #32 (
INFO  00:25:49,171 - #45 Predmet
INFO  00:25:49,171 - #45 p
INFO  00:25:49,171 - #33 )
INFO  00:25:49,171 - #34 {
INFO  00:25:49,171 - #41 print
INFO  00:25:49,171 - #32 (
INFO  00:25:49,172 - #45 p
INFO  00:25:49,172 - #14 .
INFO  00:25:49,172 - #45 vrsta
INFO  00:25:49,172 - #33 )
INFO  00:25:49,172 - #13 ;
INFO  00:25:49,172 - #41 print
INFO  00:25:49,172 - #32 (
INFO  00:25:49,172 - #45 eol
INFO  00:25:49,172 - #33 )
INFO  00:25:49,172 - #13 ;
INFO  00:25:49,172 - #41 print
INFO  00:25:49,172 - #32 (
INFO  00:25:49,172 - #45 p
INFO  00:25:49,172 - #14 .
INFO  00:25:49,172 - #45 tezina
INFO  00:25:49,172 - #33 )
INFO  00:25:49,172 - #13 ;
INFO  00:25:49,172 - #35 }
INFO  00:25:49,173 - #43 void
INFO  00:25:49,173 - #45 main
INFO  00:25:49,173 - #32 (
INFO  00:25:49,173 - #33 )
INFO  00:25:49,173 - #45 Predmet
INFO  00:25:49,173 - #45 predmeti
INFO  00:25:49,173 - #36 [
INFO  00:25:49,173 - #37 ]
INFO  00:25:49,173 - #13 ;
INFO  00:25:49,173 - #45 int
INFO  00:25:49,173 - #45 i
INFO  00:25:49,173 - #13 ;
INFO  00:25:49,173 - #45 Sfera
INFO  00:25:49,173 - #45 s1
INFO  00:25:49,173 - #12 ,
INFO  00:25:49,173 - #45 s2
INFO  00:25:49,173 - #12 ,
INFO  00:25:49,173 - #45 s3
INFO  00:25:49,173 - #13 ;
INFO  00:25:49,173 - #45 Kvadar
INFO  00:25:49,173 - #45 k1
INFO  00:25:49,173 - #12 ,
INFO  00:25:49,174 - #45 k2
INFO  00:25:49,174 - #12 ,
INFO  00:25:49,174 - #45 k3
INFO  00:25:49,174 - #13 ;
INFO  00:25:49,174 - #45 int
INFO  00:25:49,174 - #45 t
INFO  00:25:49,174 - #13 ;
INFO  00:25:49,174 - #34 {
INFO  00:25:49,174 - #45 predmeti
INFO  00:25:49,174 - #28 =
INFO  00:25:49,174 - #31 new
INFO  00:25:49,174 - #45 Predmet
INFO  00:25:49,174 - #36 [
INFO  00:25:49,174 - #9 6
INFO  00:25:49,174 - #37 ]
INFO  00:25:49,174 - #13 ;
INFO  00:25:49,174 - #45 s1
INFO  00:25:49,175 - #28 =
INFO  00:25:49,175 - #31 new
INFO  00:25:49,175 - #45 Sfera
INFO  00:25:49,175 - #13 ;
INFO  00:25:49,175 - #45 s2
INFO  00:25:49,175 - #28 =
INFO  00:25:49,175 - #31 new
INFO  00:25:49,175 - #45 Sfera
INFO  00:25:49,175 - #13 ;
INFO  00:25:49,175 - #45 s3
INFO  00:25:49,175 - #28 =
INFO  00:25:49,175 - #31 new
INFO  00:25:49,175 - #45 Sfera
INFO  00:25:49,175 - #13 ;
INFO  00:25:49,175 - #45 k1
INFO  00:25:49,175 - #28 =
INFO  00:25:49,175 - #31 new
INFO  00:25:49,175 - #45 Kvadar
INFO  00:25:49,175 - #13 ;
INFO  00:25:49,175 - #45 k2
INFO  00:25:49,175 - #28 =
INFO  00:25:49,175 - #31 new
INFO  00:25:49,175 - #45 Kvadar
INFO  00:25:49,176 - #13 ;
INFO  00:25:49,176 - #45 k3
INFO  00:25:49,176 - #28 =
INFO  00:25:49,176 - #31 new
INFO  00:25:49,176 - #45 Kvadar
INFO  00:25:49,176 - #13 ;
INFO  00:25:49,176 - #45 predmeti
INFO  00:25:49,176 - #36 [
INFO  00:25:49,176 - #9 0
INFO  00:25:49,176 - #37 ]
INFO  00:25:49,176 - #28 =
INFO  00:25:49,176 - #45 s1
INFO  00:25:49,176 - #13 ;
INFO  00:25:49,176 - #45 predmeti
INFO  00:25:49,176 - #36 [
INFO  00:25:49,176 - #9 2
INFO  00:25:49,176 - #37 ]
INFO  00:25:49,176 - #28 =
INFO  00:25:49,176 - #45 s2
INFO  00:25:49,177 - #13 ;
INFO  00:25:49,177 - #45 predmeti
INFO  00:25:49,177 - #36 [
INFO  00:25:49,177 - #9 4
INFO  00:25:49,177 - #37 ]
INFO  00:25:49,177 - #28 =
INFO  00:25:49,177 - #45 s3
INFO  00:25:49,177 - #13 ;
INFO  00:25:49,177 - #45 predmeti
INFO  00:25:49,177 - #36 [
INFO  00:25:49,177 - #9 1
INFO  00:25:49,177 - #37 ]
INFO  00:25:49,177 - #28 =
INFO  00:25:49,177 - #45 k1
INFO  00:25:49,177 - #13 ;
INFO  00:25:49,177 - #45 predmeti
INFO  00:25:49,177 - #36 [
INFO  00:25:49,177 - #9 3
INFO  00:25:49,177 - #37 ]
INFO  00:25:49,177 - #28 =
INFO  00:25:49,177 - #45 k2
INFO  00:25:49,177 - #13 ;
INFO  00:25:49,177 - #45 predmeti
INFO  00:25:49,178 - #36 [
INFO  00:25:49,178 - #9 5
INFO  00:25:49,178 - #37 ]
INFO  00:25:49,178 - #28 =
INFO  00:25:49,178 - #45 k3
INFO  00:25:49,178 - #13 ;
INFO  00:25:49,178 - #42 read
INFO  00:25:49,178 - #32 (
INFO  00:25:49,178 - #45 t
INFO  00:25:49,178 - #33 )
INFO  00:25:49,178 - #13 ;
INFO  00:25:49,178 - #45 i
INFO  00:25:49,178 - #28 =
INFO  00:25:49,178 - #9 0
INFO  00:25:49,178 - #13 ;
INFO  00:25:49,178 - #5 do
INFO  00:25:49,178 - #34 {
INFO  00:25:49,188 - #45 i
INFO  00:25:49,188 - #29 ++
INFO  00:25:49,188 - #13 ;
INFO  00:25:49,189 - #35 }
INFO  00:25:49,189 - #6 while
INFO  00:25:49,189 - #32 (
INFO  00:25:49,189 - #45 i
INFO  00:25:49,189 - #23 <
INFO  00:25:49,189 - #9 6
INFO  00:25:49,195 - #33 )
INFO  00:25:49,195 - #13 ;
INFO  00:25:49,195 - #45 i
INFO  00:25:49,195 - #28 =
INFO  00:25:49,196 - #9 0
INFO  00:25:49,196 - #13 ;
INFO  00:25:49,196 - #45 zapreminaS
INFO  00:25:49,196 - #28 =
INFO  00:25:49,196 - #9 0
INFO  00:25:49,196 - #13 ;
INFO  00:25:49,196 - #45 tezinaS
INFO  00:25:49,196 - #28 =
INFO  00:25:49,196 - #9 0
INFO  00:25:49,196 - #13 ;
INFO  00:25:49,196 - #5 do
INFO  00:25:49,196 - #34 {
INFO  00:25:49,196 - #45 i
INFO  00:25:49,196 - #29 ++
INFO  00:25:49,196 - #13 ;
INFO  00:25:49,196 - #2 if
INFO  00:25:49,196 - #32 (
INFO  00:25:49,196 - #45 i
INFO  00:25:49,196 - #19 %
INFO  00:25:49,196 - #9 2
INFO  00:25:49,198 - #20 ==
INFO  00:25:49,198 - #9 0
INFO  00:25:49,204 - #33 )
INFO  00:25:49,204 - #7 continue
INFO  00:25:49,204 - #13 ;
INFO  00:25:49,204 - #45 zapreminaS
INFO  00:25:49,209 - #28 =
INFO  00:25:49,209 - #45 zapreminaS
INFO  00:25:49,209 - #15 +
INFO  00:25:49,210 - #45 predmeti
INFO  00:25:49,216 - #36 [
INFO  00:25:49,216 - #45 i
INFO  00:25:49,216 - #16 -
INFO  00:25:49,216 - #9 1
INFO  00:25:49,217 - #37 ]
INFO  00:25:49,218 - #14 .
INFO  00:25:49,218 - #45 zapremina
INFO  00:25:49,218 - #32 (
INFO  00:25:49,218 - #33 )
INFO  00:25:49,218 - #13 ;
INFO  00:25:49,218 - #45 tezinaS
INFO  00:25:49,218 - #28 =
INFO  00:25:49,218 - #45 tezinaS
INFO  00:25:49,218 - #15 +
INFO  00:25:49,218 - #45 predmeti
INFO  00:25:49,218 - #36 [
INFO  00:25:49,218 - #45 i
INFO  00:25:49,218 - #16 -
INFO  00:25:49,218 - #9 1
INFO  00:25:49,218 - #37 ]
INFO  00:25:49,218 - #14 .
INFO  00:25:49,218 - #45 Q
INFO  00:25:49,218 - #32 (
INFO  00:25:49,218 - #33 )
INFO  00:25:49,218 - #13 ;
INFO  00:25:49,218 - #45 ispis
INFO  00:25:49,218 - #32 (
INFO  00:25:49,218 - #45 predmeti
INFO  00:25:49,218 - #36 [
INFO  00:25:49,218 - #45 i
INFO  00:25:49,218 - #16 -
INFO  00:25:49,219 - #9 1
INFO  00:25:49,219 - #37 ]
INFO  00:25:49,219 - #33 )
INFO  00:25:49,219 - #13 ;
INFO  00:25:49,219 - #35 }
INFO  00:25:49,219 - #6 while
INFO  00:25:49,219 - #32 (
INFO  00:25:49,219 - #45 i
INFO  00:25:49,219 - #23 <
INFO  00:25:49,219 - #9 6
INFO  00:25:49,219 - #33 )
INFO  00:25:49,219 - #13 ;
INFO  00:25:49,219 - #45 i
INFO  00:25:49,219 - #28 =
INFO  00:25:49,219 - #9 0
INFO  00:25:49,219 - #13 ;
INFO  00:25:49,219 - #45 zapreminaK
INFO  00:25:49,219 - #28 =
INFO  00:25:49,219 - #9 0
INFO  00:25:49,219 - #13 ;
INFO  00:25:49,220 - #45 tezinaK
INFO  00:25:49,220 - #28 =
INFO  00:25:49,220 - #9 0
INFO  00:25:49,220 - #13 ;
INFO  00:25:49,220 - #5 do
INFO  00:25:49,220 - #34 {
INFO  00:25:49,220 - #45 i
INFO  00:25:49,220 - #29 ++
INFO  00:25:49,220 - #13 ;
INFO  00:25:49,220 - #2 if
INFO  00:25:49,220 - #32 (
INFO  00:25:49,220 - #45 i
INFO  00:25:49,220 - #19 %
INFO  00:25:49,220 - #9 2
INFO  00:25:49,220 - #20 ==
INFO  00:25:49,220 - #9 1
INFO  00:25:49,220 - #33 )
INFO  00:25:49,220 - #7 continue
INFO  00:25:49,220 - #13 ;
INFO  00:25:49,220 - #45 zapreminaK
INFO  00:25:49,220 - #28 =
INFO  00:25:49,220 - #45 zapreminaK
INFO  00:25:49,220 - #15 +
INFO  00:25:49,220 - #45 predmeti
INFO  00:25:49,220 - #36 [
INFO  00:25:49,220 - #45 i
INFO  00:25:49,220 - #16 -
INFO  00:25:49,220 - #9 1
INFO  00:25:49,220 - #37 ]
INFO  00:25:49,220 - #14 .
INFO  00:25:49,220 - #45 zapremina
INFO  00:25:49,220 - #32 (
INFO  00:25:49,220 - #33 )
INFO  00:25:49,220 - #13 ;
INFO  00:25:49,220 - #45 tezinaK
INFO  00:25:49,221 - #28 =
INFO  00:25:49,221 - #45 tezinaK
INFO  00:25:49,221 - #15 +
INFO  00:25:49,221 - #45 predmeti
INFO  00:25:49,221 - #36 [
INFO  00:25:49,221 - #45 i
INFO  00:25:49,221 - #16 -
INFO  00:25:49,221 - #9 1
INFO  00:25:49,221 - #37 ]
INFO  00:25:49,221 - #14 .
INFO  00:25:49,221 - #45 Q
INFO  00:25:49,221 - #32 (
INFO  00:25:49,221 - #33 )
INFO  00:25:49,221 - #13 ;
INFO  00:25:49,221 - #45 ispis
INFO  00:25:49,221 - #32 (
INFO  00:25:49,221 - #45 predmeti
INFO  00:25:49,221 - #36 [
INFO  00:25:49,221 - #45 i
INFO  00:25:49,221 - #16 -
INFO  00:25:49,221 - #9 1
INFO  00:25:49,221 - #37 ]
INFO  00:25:49,221 - #33 )
INFO  00:25:49,221 - #13 ;
INFO  00:25:49,221 - #35 }
INFO  00:25:49,221 - #6 while
INFO  00:25:49,221 - #32 (
INFO  00:25:49,221 - #45 i
INFO  00:25:49,221 - #23 <
INFO  00:25:49,221 - #9 6
INFO  00:25:49,221 - #33 )
INFO  00:25:49,221 - #13 ;
INFO  00:25:49,221 - #41 print
INFO  00:25:49,221 - #32 (
INFO  00:25:49,221 - #45 zapreminaS
INFO  00:25:49,221 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 eol
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 zapreminaK
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 eol
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 tezinaS
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 eol
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 tezinaK
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #41 print
INFO  00:25:49,222 - #32 (
INFO  00:25:49,222 - #45 eol
INFO  00:25:49,222 - #33 )
INFO  00:25:49,222 - #13 ;
INFO  00:25:49,222 - #35 }
INFO  00:25:49,222 - #35 }
INFO  00:25:49,229 - ***Abstract tree****
INFO  00:25:49,229 - #0
DEBUG 00:25:49,292 - program name
DEBUG 00:25:49,292 - found constant with value 4of type 1
DEBUG 00:25:49,292 - found constant with value 3of type 1
DEBUG 00:25:49,292 - ClassBegin
DEBUG 00:25:49,312 - Variable with name tezina has the address of 1
DEBUG 00:25:49,312 - Variable with name vrsta has the address of 2
DEBUG 00:25:49,318 - designator simple at line 12: tezina
DEBUG 00:25:49,318 - found constant with value 0of type 1
DEBUG 00:25:49,318 - constant factor is type 1
DEBUG 00:25:49,318 - term SingleFactorterm is type 1
DEBUG 00:25:49,318 - exprWithNoMinus is type 1
DEBUG 00:25:49,318 - designator simple at line 14: zapremina
DEBUG 00:25:49,318 - designator simple at line 14: tezina
DEBUG 00:25:49,318 - term element is type 1
DEBUG 00:25:49,318 - term list single is type 1
DEBUG 00:25:49,318 - term MultiFactorTerm is type 1
DEBUG 00:25:49,318 - exprWithNoMinus is type 1
DEBUG 00:25:49,318 - class decl end
DEBUG 00:25:49,319 - class decl 1
DEBUG 00:25:49,319 - derived ClassBegin
DEBUG 00:25:49,319 - Variable with name r has the address of 1
DEBUG 00:25:49,319 - Variable with name z has the address of 2
DEBUG 00:25:49,319 - designator simple at line 25: z
DEBUG 00:25:49,319 - designator simple at line 25: cinilac
DEBUG 00:25:49,319 - term SingleFactorterm is type 1
DEBUG 00:25:49,319 - exprWithNoMinus is type 1
DEBUG 00:25:49,319 - designator simple at line 26: z
DEBUG 00:25:49,319 - designator simple at line 26: r
DEBUG 00:25:49,319 - designator simple at line 26: delilac
DEBUG 00:25:49,319 - term element is type 1
DEBUG 00:25:49,319 - term list single is type 1
DEBUG 00:25:49,319 - term MultiFactorTerm is type 1
DEBUG 00:25:49,319 - exprWithNoMinus is type 1
DEBUG 00:25:49,319 - term element is type 1
DEBUG 00:25:49,319 - term list single is type 1
DEBUG 00:25:49,319 - term MultiFactorTerm is type 1
DEBUG 00:25:49,319 - exprWithNoMinus is type 1
DEBUG 00:25:49,319 - class decl end
DEBUG 00:25:49,320 - class decl 1
DEBUG 00:25:49,320 - derived ClassBegin
DEBUG 00:25:49,320 - Variable with name a has the address of 1
DEBUG 00:25:49,320 - Variable with name b has the address of 2
DEBUG 00:25:49,320 - Variable with name c has the address of 3
DEBUG 00:25:49,320 - Variable with name z has the address of 4
DEBUG 00:25:49,320 - designator simple at line 39: z
DEBUG 00:25:49,320 - designator simple at line 39: a
DEBUG 00:25:49,320 - designator simple at line 39: b
DEBUG 00:25:49,320 - term element is type 1
DEBUG 00:25:49,320 - term list single is type 1
DEBUG 00:25:49,320 - designator simple at line 39: c
DEBUG 00:25:49,320 - term element is type 1
DEBUG 00:25:49,320 - term list multiple is type 1
DEBUG 00:25:49,320 - term MultiFactorTerm is type 1
DEBUG 00:25:49,320 - exprWithNoMinus is type 1
DEBUG 00:25:49,320 - designator simple at line 40: z
DEBUG 00:25:49,320 - term SingleFactorterm is type 1
DEBUG 00:25:49,320 - exprWithNoMinus is type 1
DEBUG 00:25:49,320 - class decl end
DEBUG 00:25:49,320 - class decl 1
DEBUG 00:25:49,320 - Variable with name zapreminaK has the address of 1
DEBUG 00:25:49,320 - Variable with name zapreminaS has the address of 2
DEBUG 00:25:49,320 - Variable with name tezinaK has the address of 3
DEBUG 00:25:49,320 - Variable with name tezinaS has the address of 4
DEBUG 00:25:49,320 - program begin
DEBUG 00:25:49,320 - designator simple at line 51: p
DEBUG 00:25:49,320 - designator simple at line 51: vrsta
DEBUG 00:25:49,320 - term SingleFactorterm is type 2
DEBUG 00:25:49,320 - exprWithNoMinus is type 2
DEBUG 00:25:49,320 - print statement has arg of type 2
DEBUG 00:25:49,320 - designator simple at line 52: eol
DEBUG 00:25:49,320 - term SingleFactorterm is type 2
DEBUG 00:25:49,321 - exprWithNoMinus is type 2
DEBUG 00:25:49,321 - print statement has arg of type 2
DEBUG 00:25:49,321 - designator simple at line 53: p
DEBUG 00:25:49,321 - designator simple at line 53: tezina
DEBUG 00:25:49,321 - term SingleFactorterm is type 1
DEBUG 00:25:49,321 - exprWithNoMinus is type 1
DEBUG 00:25:49,321 - print statement has arg of type 1
DEBUG 00:25:49,321 - Variable with name i has the address of 1
DEBUG 00:25:49,321 - Variable with name s1 has the address of 2
DEBUG 00:25:49,321 - Variable with name s2 has the address of 3
DEBUG 00:25:49,321 - Variable with name s3 has the address of 4
DEBUG 00:25:49,321 - Variable with name k1 has the address of 5
DEBUG 00:25:49,321 - Variable with name k2 has the address of 6
DEBUG 00:25:49,321 - Variable with name k3 has the address of 7
DEBUG 00:25:49,321 - Variable with name t has the address of 8
DEBUG 00:25:49,321 - designator simple at line 59: predmeti
DEBUG 00:25:49,321 - found constant with value 6of type 1
DEBUG 00:25:49,321 - constant factor is type 1
DEBUG 00:25:49,321 - term SingleFactorterm is type 1
DEBUG 00:25:49,321 - exprWithNoMinus is type 1
DEBUG 00:25:49,321 - term SingleFactorterm is type 3
DEBUG 00:25:49,321 - exprWithNoMinus is type 3
DEBUG 00:25:49,321 - designator simple at line 60: s1
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,321 - exprWithNoMinus is type 4
DEBUG 00:25:49,321 - designator simple at line 61: s2
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,321 - exprWithNoMinus is type 4
DEBUG 00:25:49,321 - designator simple at line 62: s3
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,321 - exprWithNoMinus is type 4
DEBUG 00:25:49,321 - designator simple at line 64: k1
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,321 - exprWithNoMinus is type 4
DEBUG 00:25:49,321 - designator simple at line 65: k2
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,321 - exprWithNoMinus is type 4
DEBUG 00:25:49,321 - designator simple at line 66: k3
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,321 - exprWithNoMinus is type 4
DEBUG 00:25:49,321 - found constant with value 0of type 1
DEBUG 00:25:49,321 - constant factor is type 1
DEBUG 00:25:49,321 - term SingleFactorterm is type 1
DEBUG 00:25:49,321 - exprWithNoMinus is type 1
DEBUG 00:25:49,321 - designator simple at line 68: s1
DEBUG 00:25:49,321 - term SingleFactorterm is type 4
DEBUG 00:25:49,322 - exprWithNoMinus is type 4
DEBUG 00:25:49,323 - found constant with value 2of type 1
DEBUG 00:25:49,323 - constant factor is type 1
DEBUG 00:25:49,323 - term SingleFactorterm is type 1
DEBUG 00:25:49,323 - exprWithNoMinus is type 1
DEBUG 00:25:49,323 - designator simple at line 69: s2
DEBUG 00:25:49,323 - term SingleFactorterm is type 4
DEBUG 00:25:49,323 - exprWithNoMinus is type 4
DEBUG 00:25:49,324 - found constant with value 4of type 1
DEBUG 00:25:49,324 - constant factor is type 1
DEBUG 00:25:49,324 - term SingleFactorterm is type 1
DEBUG 00:25:49,324 - exprWithNoMinus is type 1
DEBUG 00:25:49,324 - designator simple at line 70: s3
DEBUG 00:25:49,324 - term SingleFactorterm is type 4
DEBUG 00:25:49,324 - exprWithNoMinus is type 4
DEBUG 00:25:49,324 - found constant with value 1of type 1
DEBUG 00:25:49,324 - constant factor is type 1
DEBUG 00:25:49,324 - term SingleFactorterm is type 1
DEBUG 00:25:49,324 - exprWithNoMinus is type 1
DEBUG 00:25:49,324 - designator simple at line 71: k1
DEBUG 00:25:49,324 - term SingleFactorterm is type 4
DEBUG 00:25:49,324 - exprWithNoMinus is type 4
DEBUG 00:25:49,324 - found constant with value 3of type 1
DEBUG 00:25:49,324 - constant factor is type 1
DEBUG 00:25:49,324 - term SingleFactorterm is type 1
DEBUG 00:25:49,324 - exprWithNoMinus is type 1
DEBUG 00:25:49,324 - designator simple at line 72: k2
DEBUG 00:25:49,324 - term SingleFactorterm is type 4
DEBUG 00:25:49,324 - exprWithNoMinus is type 4
DEBUG 00:25:49,324 - found constant with value 5of type 1
DEBUG 00:25:49,324 - constant factor is type 1
DEBUG 00:25:49,324 - term SingleFactorterm is type 1
DEBUG 00:25:49,324 - exprWithNoMinus is type 1
DEBUG 00:25:49,324 - designator simple at line 73: k3
DEBUG 00:25:49,324 - term SingleFactorterm is type 4
DEBUG 00:25:49,324 - exprWithNoMinus is type 4
DEBUG 00:25:49,324 - designator simple at line 75: t
DEBUG 00:25:49,324 - designator simple at line 76: i
DEBUG 00:25:49,324 - found constant with value 0of type 1
DEBUG 00:25:49,324 - constant factor is type 1
DEBUG 00:25:49,324 - term SingleFactorterm is type 1
DEBUG 00:25:49,324 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - designator simple at line 79: i
DEBUG 00:25:49,325 - designator simple at line 80: i
DEBUG 00:25:49,325 - term SingleFactorterm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - found constant with value 6of type 1
DEBUG 00:25:49,325 - constant factor is type 1
DEBUG 00:25:49,325 - term SingleFactorterm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - designator simple at line 83: i
DEBUG 00:25:49,325 - found constant with value 0of type 1
DEBUG 00:25:49,325 - constant factor is type 1
DEBUG 00:25:49,325 - term SingleFactorterm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - designator simple at line 84: zapreminaS
DEBUG 00:25:49,325 - found constant with value 0of type 1
DEBUG 00:25:49,325 - constant factor is type 1
DEBUG 00:25:49,325 - term SingleFactorterm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - designator simple at line 85: tezinaS
DEBUG 00:25:49,325 - found constant with value 0of type 1
DEBUG 00:25:49,325 - constant factor is type 1
DEBUG 00:25:49,325 - term SingleFactorterm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - designator simple at line 88: i
DEBUG 00:25:49,325 - designator simple at line 89: i
DEBUG 00:25:49,325 - found constant with value 2of type 1
DEBUG 00:25:49,325 - constant factor is type 1
DEBUG 00:25:49,325 - term element is type 1
DEBUG 00:25:49,325 - term list single is type 1
DEBUG 00:25:49,325 - term MultiFactorTerm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - found constant with value 0of type 1
DEBUG 00:25:49,325 - constant factor is type 1
DEBUG 00:25:49,325 - term SingleFactorterm is type 1
DEBUG 00:25:49,325 - exprWithNoMinus is type 1
DEBUG 00:25:49,325 - designator simple at line 90: zapreminaS
DEBUG 00:25:49,326 - designator simple at line 90: zapreminaS
DEBUG 00:25:49,326 - term SingleFactorterm is type 1
DEBUG 00:25:49,326 - designator simple at line 90: i
DEBUG 00:25:49,326 - term SingleFactorterm is type 1
DEBUG 00:25:49,326 - found constant with value 1of type 1
DEBUG 00:25:49,328 - constant factor is type 1
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - exprWithNoMinus is type 1
DEBUG 00:25:49,328 - designator simple at line 90: zapremina
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - exprWithNoMinus is type 1
DEBUG 00:25:49,328 - designator simple at line 91: tezinaS
DEBUG 00:25:49,328 - designator simple at line 91: tezinaS
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - designator simple at line 91: i
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - found constant with value 1of type 1
DEBUG 00:25:49,328 - constant factor is type 1
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - exprWithNoMinus is type 1
DEBUG 00:25:49,328 - designator simple at line 91: Q
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - exprWithNoMinus is type 1
DEBUG 00:25:49,328 - designator simple at line 92: ispis
DEBUG 00:25:49,328 - designator simple at line 92: i
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - found constant with value 1of type 1
DEBUG 00:25:49,328 - constant factor is type 1
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,328 - exprWithNoMinus is type 1
DEBUG 00:25:49,328 - term SingleFactorterm is type 4
DEBUG 00:25:49,328 - exprWithNoMinus is type 4
DEBUG 00:25:49,328 - designator simple at line 93: i
DEBUG 00:25:49,328 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - found constant with value 6of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 95: i
DEBUG 00:25:49,329 - found constant with value 0of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 96: zapreminaK
DEBUG 00:25:49,329 - found constant with value 0of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 96: tezinaK
DEBUG 00:25:49,329 - found constant with value 0of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 99: i
DEBUG 00:25:49,329 - designator simple at line 100: i
DEBUG 00:25:49,329 - found constant with value 2of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term element is type 1
DEBUG 00:25:49,329 - term list single is type 1
DEBUG 00:25:49,329 - term MultiFactorTerm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - found constant with value 1of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 101: zapreminaK
DEBUG 00:25:49,329 - designator simple at line 101: zapreminaK
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - designator simple at line 101: i
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - found constant with value 1of type 1
DEBUG 00:25:49,329 - constant factor is type 1
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 101: zapremina
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - exprWithNoMinus is type 1
DEBUG 00:25:49,329 - designator simple at line 102: tezinaK
DEBUG 00:25:49,329 - designator simple at line 102: tezinaK
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,329 - designator simple at line 102: i
DEBUG 00:25:49,329 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - found constant with value 1of type 1
DEBUG 00:25:49,330 - constant factor is type 1
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - designator simple at line 102: Q
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - designator simple at line 103: ispis
DEBUG 00:25:49,330 - designator simple at line 103: i
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - found constant with value 1of type 1
DEBUG 00:25:49,330 - constant factor is type 1
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - term SingleFactorterm is type 4
DEBUG 00:25:49,330 - exprWithNoMinus is type 4
DEBUG 00:25:49,330 - designator simple at line 104: i
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - found constant with value 6of type 1
DEBUG 00:25:49,330 - constant factor is type 1
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - designator simple at line 106: zapreminaS
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - print statement has arg of type 1
DEBUG 00:25:49,330 - designator simple at line 106: eol
DEBUG 00:25:49,330 - term SingleFactorterm is type 2
DEBUG 00:25:49,330 - exprWithNoMinus is type 2
DEBUG 00:25:49,330 - print statement has arg of type 2
DEBUG 00:25:49,330 - designator simple at line 107: zapreminaK
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - print statement has arg of type 1
DEBUG 00:25:49,330 - designator simple at line 107: eol
DEBUG 00:25:49,330 - term SingleFactorterm is type 2
DEBUG 00:25:49,330 - exprWithNoMinus is type 2
DEBUG 00:25:49,330 - print statement has arg of type 2
DEBUG 00:25:49,330 - designator simple at line 108: tezinaS
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - print statement has arg of type 1
DEBUG 00:25:49,330 - designator simple at line 108: eol
DEBUG 00:25:49,330 - term SingleFactorterm is type 2
DEBUG 00:25:49,330 - exprWithNoMinus is type 2
DEBUG 00:25:49,330 - print statement has arg of type 2
DEBUG 00:25:49,330 - designator simple at line 109: tezinaK
DEBUG 00:25:49,330 - term SingleFactorterm is type 1
DEBUG 00:25:49,330 - exprWithNoMinus is type 1
DEBUG 00:25:49,330 - print statement has arg of type 1
DEBUG 00:25:49,330 - designator simple at line 109: eol
DEBUG 00:25:49,330 - term SingleFactorterm is type 2
DEBUG 00:25:49,330 - exprWithNoMinus is type 2
DEBUG 00:25:49,330 - print statement has arg of type 2
INFO  00:25:49,330 - Print calls = 0
DEBUG 00:25:49,331 - Sfera
	ucitajTezinu(0); zapremina(0); Q(0); zapremina(0); 
Predmet
	ucitajTezinu(0); zapremina(0); Q(0); 
Kvadar
	ucitajTezinu(0); zapremina(0); Q(0); zapremina(0); 

INFO  00:25:49,350 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
DEBUG 00:25:49,388 - class methoad call zapremina
DEBUG 00:25:49,388 - updating vTableAddress by Predmet class. OldValue =  5
DEBUG 00:25:49,388 - ^new value = 34
DEBUG 00:25:49,388 - updating vTableAddress by Sfera class. OldValue =  34
DEBUG 00:25:49,388 - ^new value = 74
DEBUG 00:25:49,388 - updating vTableAddress by Kvadar class. OldValue =  74
DEBUG 00:25:49,388 - ^new value = 114
DEBUG 00:25:49,389 - new called with level = 3
DEBUG 00:25:49,389 - class is 4
DEBUG 00:25:49,389 - new called with level = 3
DEBUG 00:25:49,389 - class is 4
DEBUG 00:25:49,389 - new called with level = 3
DEBUG 00:25:49,389 - class is 4
DEBUG 00:25:49,389 - new called with level = 5
DEBUG 00:25:49,389 - class is 4
DEBUG 00:25:49,389 - new called with level = 5
DEBUG 00:25:49,389 - class is 4
DEBUG 00:25:49,389 - new called with level = 5
DEBUG 00:25:49,389 - class is 4
DEBUG 00:25:49,405 - class methoad call zapremina
DEBUG 00:25:49,405 - class methoad call Q
DEBUG 00:25:49,405 - class methoad call ispis
DEBUG 00:25:49,405 - class methoad call zapremina
DEBUG 00:25:49,406 - class methoad call Q
DEBUG 00:25:49,406 - class methoad call ispis
INFO  00:25:49,410 - Finished code generation
INFO  00:25:49,411 - Parsiranje uspesno zavrseno!
