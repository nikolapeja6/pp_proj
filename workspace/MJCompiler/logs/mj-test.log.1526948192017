INFO  02:12:10,120 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\test302.mj
INFO  02:12:10,176 - #40 program
INFO  02:12:10,176 - #45 test302
INFO  02:12:10,176 - #45 int
INFO  02:12:10,177 - #45 i
INFO  02:12:10,177 - #13 ;
INFO  02:12:10,177 - #45 bool
INFO  02:12:10,177 - #45 ibool
INFO  02:12:10,178 - #13 ;
INFO  02:12:10,178 - #45 int
INFO  02:12:10,178 - #45 niz
INFO  02:12:10,178 - #36 [
INFO  02:12:10,178 - #37 ]
INFO  02:12:10,178 - #13 ;
INFO  02:12:10,178 - #34 {
INFO  02:12:10,178 - #45 int
INFO  02:12:10,179 - #45 sum
INFO  02:12:10,179 - #32 (
INFO  02:12:10,179 - #45 int
INFO  02:12:10,179 - #45 z
INFO  02:12:10,179 - #12 ,
INFO  02:12:10,180 - #45 int
INFO  02:12:10,180 - #45 d
INFO  02:12:10,180 - #33 )
INFO  02:12:10,180 - #34 {
INFO  02:12:10,180 - #8 return
INFO  02:12:10,181 - #45 z
INFO  02:12:10,181 - #15 +
INFO  02:12:10,182 - #45 d
INFO  02:12:10,183 - #13 ;
INFO  02:12:10,183 - #35 }
INFO  02:12:10,184 - #45 int
INFO  02:12:10,185 - #45 inkrement
INFO  02:12:10,185 - #32 (
INFO  02:12:10,185 - #45 int
INFO  02:12:10,185 - #45 a
INFO  02:12:10,185 - #33 )
INFO  02:12:10,185 - #45 int
INFO  02:12:10,185 - #45 pom
INFO  02:12:10,185 - #13 ;
INFO  02:12:10,185 - #34 {
INFO  02:12:10,186 - #45 pom
INFO  02:12:10,186 - #28 =
INFO  02:12:10,186 - #9 1
INFO  02:12:10,186 - #13 ;
INFO  02:12:10,186 - #8 return
INFO  02:12:10,187 - #45 sum
INFO  02:12:10,187 - #32 (
INFO  02:12:10,187 - #45 a
INFO  02:12:10,187 - #12 ,
INFO  02:12:10,187 - #45 pom
INFO  02:12:10,188 - #33 )
INFO  02:12:10,188 - #13 ;
INFO  02:12:10,188 - #35 }
INFO  02:12:10,188 - #43 void
INFO  02:12:10,189 - #45 main
INFO  02:12:10,190 - #32 (
INFO  02:12:10,190 - #33 )
INFO  02:12:10,190 - #34 {
INFO  02:12:10,190 - #2 if
INFO  02:12:10,190 - #32 (
INFO  02:12:10,190 - #9 1
INFO  02:12:10,190 - #21 !=
INFO  02:12:10,190 - #9 1
INFO  02:12:10,191 - #33 )
INFO  02:12:10,192 - #41 print
INFO  02:12:10,192 - #32 (
INFO  02:12:10,192 - #16 -
INFO  02:12:10,192 - #9 6
INFO  02:12:10,192 - #33 )
INFO  02:12:10,192 - #13 ;
INFO  02:12:10,192 - #3 else
INFO  02:12:10,192 - #41 print
INFO  02:12:10,192 - #32 (
INFO  02:12:10,192 - #9 0
INFO  02:12:10,192 - #33 )
INFO  02:12:10,192 - #13 ;
INFO  02:12:10,192 - #45 ibool
INFO  02:12:10,193 - #28 =
INFO  02:12:10,193 - #11 false
INFO  02:12:10,193 - #13 ;
INFO  02:12:10,193 - #45 i
INFO  02:12:10,193 - #28 =
INFO  02:12:10,193 - #9 0
INFO  02:12:10,193 - #13 ;
INFO  02:12:10,193 - #5 do
INFO  02:12:10,193 - #34 {
INFO  02:12:10,194 - #2 if
INFO  02:12:10,194 - #32 (
INFO  02:12:10,194 - #45 i
INFO  02:12:10,194 - #20 ==
INFO  02:12:10,194 - #9 2
INFO  02:12:10,194 - #33 )
INFO  02:12:10,194 - #45 ibool
INFO  02:12:10,194 - #28 =
INFO  02:12:10,194 - #11 true
INFO  02:12:10,194 - #13 ;
INFO  02:12:10,194 - #45 i
INFO  02:12:10,195 - #29 ++
INFO  02:12:10,195 - #13 ;
INFO  02:12:10,195 - #35 }
INFO  02:12:10,195 - #6 while
INFO  02:12:10,195 - #32 (
INFO  02:12:10,195 - #45 i
INFO  02:12:10,195 - #23 <
INFO  02:12:10,195 - #9 5
INFO  02:12:10,196 - #33 )
INFO  02:12:10,196 - #13 ;
INFO  02:12:10,196 - #2 if
INFO  02:12:10,196 - #32 (
INFO  02:12:10,196 - #45 ibool
INFO  02:12:10,196 - #33 )
INFO  02:12:10,196 - #2 if
INFO  02:12:10,196 - #32 (
INFO  02:12:10,196 - #45 i
INFO  02:12:10,197 - #20 ==
INFO  02:12:10,197 - #9 5
INFO  02:12:10,197 - #33 )
INFO  02:12:10,197 - #41 print
INFO  02:12:10,197 - #32 (
INFO  02:12:10,197 - #9 1
INFO  02:12:10,197 - #33 )
INFO  02:12:10,197 - #13 ;
INFO  02:12:10,197 - #3 else
INFO  02:12:10,197 - #41 print
INFO  02:12:10,197 - #32 (
INFO  02:12:10,197 - #16 -
INFO  02:12:10,197 - #9 1
INFO  02:12:10,197 - #33 )
INFO  02:12:10,197 - #13 ;
INFO  02:12:10,197 - #45 niz
INFO  02:12:10,198 - #28 =
INFO  02:12:10,198 - #31 new
INFO  02:12:10,198 - #45 int
INFO  02:12:10,198 - #36 [
INFO  02:12:10,198 - #9 3
INFO  02:12:10,198 - #37 ]
INFO  02:12:10,198 - #13 ;
INFO  02:12:10,198 - #45 niz
INFO  02:12:10,198 - #36 [
INFO  02:12:10,198 - #9 0
INFO  02:12:10,198 - #37 ]
INFO  02:12:10,198 - #28 =
INFO  02:12:10,198 - #9 1
INFO  02:12:10,199 - #13 ;
INFO  02:12:10,199 - #45 niz
INFO  02:12:10,199 - #36 [
INFO  02:12:10,199 - #9 1
INFO  02:12:10,199 - #37 ]
INFO  02:12:10,199 - #28 =
INFO  02:12:10,199 - #9 2
INFO  02:12:10,199 - #13 ;
INFO  02:12:10,200 - #45 niz
INFO  02:12:10,200 - #36 [
INFO  02:12:10,200 - #9 2
INFO  02:12:10,200 - #37 ]
INFO  02:12:10,200 - #28 =
INFO  02:12:10,200 - #45 sum
INFO  02:12:10,200 - #32 (
INFO  02:12:10,200 - #45 niz
INFO  02:12:10,200 - #36 [
INFO  02:12:10,200 - #9 1
INFO  02:12:10,200 - #37 ]
INFO  02:12:10,200 - #12 ,
INFO  02:12:10,200 - #45 niz
INFO  02:12:10,200 - #36 [
INFO  02:12:10,200 - #9 0
INFO  02:12:10,200 - #37 ]
INFO  02:12:10,200 - #33 )
INFO  02:12:10,200 - #15 +
INFO  02:12:10,200 - #9 1
INFO  02:12:10,200 - #13 ;
INFO  02:12:10,200 - #2 if
INFO  02:12:10,200 - #32 (
INFO  02:12:10,200 - #45 niz
INFO  02:12:10,201 - #36 [
INFO  02:12:10,201 - #9 2
INFO  02:12:10,201 - #37 ]
INFO  02:12:10,201 - #20 ==
INFO  02:12:10,201 - #9 4
INFO  02:12:10,201 - #33 )
INFO  02:12:10,201 - #41 print
INFO  02:12:10,201 - #32 (
INFO  02:12:10,201 - #45 ord
INFO  02:12:10,201 - #32 (
INFO  02:12:10,201 - #10 A
INFO  02:12:10,201 - #33 )
INFO  02:12:10,201 - #33 )
INFO  02:12:10,201 - #13 ;
INFO  02:12:10,201 - #3 else
INFO  02:12:10,201 - #41 print
INFO  02:12:10,201 - #32 (
INFO  02:12:10,201 - #45 ord
INFO  02:12:10,201 - #32 (
INFO  02:12:10,202 - #10 a
INFO  02:12:10,202 - #33 )
INFO  02:12:10,202 - #33 )
INFO  02:12:10,202 - #13 ;
INFO  02:12:10,202 - #41 print
INFO  02:12:10,202 - #32 (
INFO  02:12:10,202 - #45 eol
INFO  02:12:10,202 - #33 )
INFO  02:12:10,202 - #13 ;
INFO  02:12:10,202 - #45 i
INFO  02:12:10,202 - #28 =
INFO  02:12:10,202 - #9 0
INFO  02:12:10,202 - #13 ;
INFO  02:12:10,202 - #5 do
INFO  02:12:10,202 - #34 {
INFO  02:12:10,202 - #2 if
INFO  02:12:10,202 - #32 (
INFO  02:12:10,202 - #45 i
INFO  02:12:10,202 - #20 ==
INFO  02:12:10,202 - #9 3
INFO  02:12:10,202 - #33 )
INFO  02:12:10,202 - #34 {
INFO  02:12:10,202 - #45 i
INFO  02:12:10,202 - #29 ++
INFO  02:12:10,203 - #13 ;
INFO  02:12:10,203 - #7 continue
INFO  02:12:10,203 - #13 ;
INFO  02:12:10,203 - #35 }
INFO  02:12:10,204 - #2 if
INFO  02:12:10,204 - #32 (
INFO  02:12:10,204 - #45 i
INFO  02:12:10,204 - #20 ==
INFO  02:12:10,204 - #9 4
INFO  02:12:10,204 - #33 )
INFO  02:12:10,204 - #4 break
INFO  02:12:10,204 - #13 ;
INFO  02:12:10,204 - #45 i
INFO  02:12:10,205 - #28 =
INFO  02:12:10,205 - #45 inkrement
INFO  02:12:10,205 - #32 (
INFO  02:12:10,205 - #45 i
INFO  02:12:10,205 - #33 )
INFO  02:12:10,205 - #13 ;
INFO  02:12:10,205 - #35 }
INFO  02:12:10,205 - #6 while
INFO  02:12:10,205 - #32 (
INFO  02:12:10,205 - #11 true
INFO  02:12:10,205 - #33 )
INFO  02:12:10,205 - #13 ;
INFO  02:12:10,205 - #2 if
INFO  02:12:10,206 - #32 (
INFO  02:12:10,206 - #45 i
INFO  02:12:10,206 - #20 ==
INFO  02:12:10,206 - #9 3
INFO  02:12:10,206 - #33 )
INFO  02:12:10,206 - #41 print
INFO  02:12:10,206 - #32 (
INFO  02:12:10,206 - #9 4
INFO  02:12:10,206 - #33 )
INFO  02:12:10,206 - #13 ;
INFO  02:12:10,206 - #3 else
INFO  02:12:10,206 - #41 print
INFO  02:12:10,206 - #32 (
INFO  02:12:10,206 - #16 -
INFO  02:12:10,206 - #9 4
INFO  02:12:10,207 - #33 )
INFO  02:12:10,207 - #13 ;
INFO  02:12:10,207 - #42 read
INFO  02:12:10,207 - #32 (
INFO  02:12:10,207 - #45 niz
INFO  02:12:10,207 - #36 [
INFO  02:12:10,207 - #9 0
INFO  02:12:10,207 - #37 ]
INFO  02:12:10,207 - #33 )
INFO  02:12:10,207 - #13 ;
INFO  02:12:10,207 - #42 read
INFO  02:12:10,207 - #32 (
INFO  02:12:10,207 - #45 niz
INFO  02:12:10,207 - #36 [
INFO  02:12:10,207 - #9 1
INFO  02:12:10,207 - #37 ]
INFO  02:12:10,207 - #33 )
INFO  02:12:10,207 - #13 ;
INFO  02:12:10,207 - #42 read
INFO  02:12:10,207 - #32 (
INFO  02:12:10,207 - #45 niz
INFO  02:12:10,207 - #36 [
INFO  02:12:10,208 - #9 2
INFO  02:12:10,208 - #37 ]
INFO  02:12:10,208 - #33 )
INFO  02:12:10,208 - #13 ;
INFO  02:12:10,208 - #41 print
INFO  02:12:10,208 - #32 (
INFO  02:12:10,208 - #45 eol
INFO  02:12:10,208 - #33 )
INFO  02:12:10,208 - #13 ;
INFO  02:12:10,208 - #41 print
INFO  02:12:10,208 - #32 (
INFO  02:12:10,208 - #45 sum
INFO  02:12:10,208 - #32 (
INFO  02:12:10,208 - #45 sum
INFO  02:12:10,208 - #32 (
INFO  02:12:10,208 - #45 niz
INFO  02:12:10,208 - #36 [
INFO  02:12:10,208 - #9 0
INFO  02:12:10,208 - #37 ]
INFO  02:12:10,208 - #12 ,
INFO  02:12:10,208 - #45 niz
INFO  02:12:10,209 - #36 [
INFO  02:12:10,209 - #9 1
INFO  02:12:10,209 - #37 ]
INFO  02:12:10,209 - #33 )
INFO  02:12:10,209 - #12 ,
INFO  02:12:10,209 - #45 niz
INFO  02:12:10,209 - #36 [
INFO  02:12:10,209 - #9 2
INFO  02:12:10,209 - #37 ]
INFO  02:12:10,209 - #33 )
INFO  02:12:10,209 - #33 )
INFO  02:12:10,209 - #13 ;
INFO  02:12:10,209 - #35 }
INFO  02:12:10,209 - #35 }
INFO  02:12:10,210 - ***Abstract tree****
INFO  02:12:10,211 - #0
DEBUG 02:12:10,219 - program name
DEBUG 02:12:10,219 - Variable with name i has the address of 1
DEBUG 02:12:10,219 - Variable with name ibool has the address of 2
DEBUG 02:12:10,219 - program begin
DEBUG 02:12:10,219 - designator simple at line 14: z
DEBUG 02:12:10,219 - term SingleFactorterm is type 1
DEBUG 02:12:10,219 - designator simple at line 14: d
DEBUG 02:12:10,219 - term SingleFactorterm is type 1
DEBUG 02:12:10,219 - exprWithNoMinus
DEBUG 02:12:10,219 - Variable with name pom has the address of 0
DEBUG 02:12:10,219 - designator simple at line 19: pom
DEBUG 02:12:10,220 - found constant with value 1of type 1
DEBUG 02:12:10,220 - constant factor is type 1
DEBUG 02:12:10,220 - term SingleFactorterm is type 1
DEBUG 02:12:10,220 - exprWithNoMinus
DEBUG 02:12:10,220 - designator simple at line 20: sum
DEBUG 02:12:10,220 - designator simple at line 20: a
DEBUG 02:12:10,220 - term SingleFactorterm is type 1
DEBUG 02:12:10,220 - exprWithNoMinus
DEBUG 02:12:10,220 - designator simple at line 20: pom
DEBUG 02:12:10,220 - term SingleFactorterm is type 1
DEBUG 02:12:10,220 - exprWithNoMinus
DEBUG 02:12:10,220 - term SingleFactorterm is type 1
DEBUG 02:12:10,220 - exprWithNoMinus
DEBUG 02:12:10,220 - found constant with value 1of type 1
DEBUG 02:12:10,220 - constant factor is type 1
DEBUG 02:12:10,220 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - found constant with value 1of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - found constant with value 6of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - ExprWithMinus is type 1
DEBUG 02:12:10,221 - print statement has arg of type 1
DEBUG 02:12:10,221 - found constant with value 0of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - print statement has arg of type 1
DEBUG 02:12:10,221 - designator simple at line 31: ibool
DEBUG 02:12:10,221 - found constant with value 0of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - designator simple at line 32: i
DEBUG 02:12:10,221 - found constant with value 0of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - designator simple at line 35: i
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - found constant with value 2of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,221 - designator simple at line 35: ibool
DEBUG 02:12:10,221 - found constant with value 1of type 1
DEBUG 02:12:10,221 - constant factor is type 1
DEBUG 02:12:10,221 - term SingleFactorterm is type 1
DEBUG 02:12:10,221 - exprWithNoMinus
DEBUG 02:12:10,222 - designator simple at line 36: i
DEBUG 02:12:10,222 - designator simple at line 37: i
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - found constant with value 5of type 1
DEBUG 02:12:10,222 - constant factor is type 1
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - designator simple at line 39: ibool
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - designator simple at line 40: i
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - found constant with value 5of type 1
DEBUG 02:12:10,222 - constant factor is type 1
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - found constant with value 1of type 1
DEBUG 02:12:10,222 - constant factor is type 1
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - print statement has arg of type 1
DEBUG 02:12:10,222 - found constant with value 1of type 1
DEBUG 02:12:10,222 - constant factor is type 1
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - ExprWithMinus is type 1
DEBUG 02:12:10,222 - print statement has arg of type 1
DEBUG 02:12:10,222 - designator simple at line 44: niz
DEBUG 02:12:10,222 - found constant with value 3of type 1
DEBUG 02:12:10,222 - constant factor is type 1
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - term SingleFactorterm is type 3
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,222 - found constant with value 0of type 1
DEBUG 02:12:10,222 - constant factor is type 1
DEBUG 02:12:10,222 - term SingleFactorterm is type 1
DEBUG 02:12:10,222 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 1of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 1of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 2of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 2of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - designator simple at line 47: sum
DEBUG 02:12:10,223 - found constant with value 1of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 0of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - found constant with value 1of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 2of type 1
DEBUG 02:12:10,223 - constant factor is type 1
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - term SingleFactorterm is type 1
DEBUG 02:12:10,223 - exprWithNoMinus
DEBUG 02:12:10,223 - found constant with value 4of type 1
DEBUG 02:12:10,224 - constant factor is type 1
DEBUG 02:12:10,224 - term SingleFactorterm is type 1
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - designator simple at line 48: ord
DEBUG 02:12:10,224 - found constant with value *****of type 2
DEBUG 02:12:10,224 - found constant with value 65of type 2
DEBUG 02:12:10,224 - constant factor is type 2
DEBUG 02:12:10,224 - term SingleFactorterm is type 2
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - term SingleFactorterm is type 1
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - print statement has arg of type 1
DEBUG 02:12:10,224 - designator simple at line 49: ord
DEBUG 02:12:10,224 - found constant with value *****of type 2
DEBUG 02:12:10,224 - found constant with value 97of type 2
DEBUG 02:12:10,224 - constant factor is type 2
DEBUG 02:12:10,224 - term SingleFactorterm is type 2
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - term SingleFactorterm is type 1
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - print statement has arg of type 1
DEBUG 02:12:10,224 - designator simple at line 51: eol
DEBUG 02:12:10,224 - term SingleFactorterm is type 2
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - print statement has arg of type 2
DEBUG 02:12:10,224 - designator simple at line 52: i
DEBUG 02:12:10,224 - found constant with value 0of type 1
DEBUG 02:12:10,224 - constant factor is type 1
DEBUG 02:12:10,224 - term SingleFactorterm is type 1
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - designator simple at line 55: i
DEBUG 02:12:10,224 - term SingleFactorterm is type 1
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - found constant with value 3of type 1
DEBUG 02:12:10,224 - constant factor is type 1
DEBUG 02:12:10,224 - term SingleFactorterm is type 1
DEBUG 02:12:10,224 - exprWithNoMinus
DEBUG 02:12:10,224 - designator simple at line 57: i
DEBUG 02:12:10,224 - designator simple at line 60: i
DEBUG 02:12:10,225 - term SingleFactorterm is type 1
DEBUG 02:12:10,225 - exprWithNoMinus
DEBUG 02:12:10,225 - found constant with value 4of type 1
DEBUG 02:12:10,225 - constant factor is type 1
DEBUG 02:12:10,225 - term SingleFactorterm is type 1
DEBUG 02:12:10,225 - exprWithNoMinus
DEBUG 02:12:10,225 - designator simple at line 61: i
DEBUG 02:12:10,225 - designator simple at line 61: inkrement
DEBUG 02:12:10,225 - designator simple at line 61: i
DEBUG 02:12:10,225 - term SingleFactorterm is type 1
DEBUG 02:12:10,225 - exprWithNoMinus
DEBUG 02:12:10,225 - term SingleFactorterm is type 1
DEBUG 02:12:10,225 - exprWithNoMinus
DEBUG 02:12:10,225 - found constant with value 1of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - designator simple at line 64: i
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - found constant with value 3of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - found constant with value 4of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - print statement has arg of type 1
DEBUG 02:12:10,226 - found constant with value 4of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - ExprWithMinus is type 1
DEBUG 02:12:10,226 - print statement has arg of type 1
DEBUG 02:12:10,226 - found constant with value 0of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - found constant with value 1of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - found constant with value 2of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - designator simple at line 70: eol
DEBUG 02:12:10,226 - term SingleFactorterm is type 2
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - print statement has arg of type 2
DEBUG 02:12:10,226 - designator simple at line 72: sum
DEBUG 02:12:10,226 - designator simple at line 72: sum
DEBUG 02:12:10,226 - found constant with value 0of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - found constant with value 1of type 1
DEBUG 02:12:10,226 - constant factor is type 1
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,226 - exprWithNoMinus
DEBUG 02:12:10,226 - term SingleFactorterm is type 1
DEBUG 02:12:10,227 - exprWithNoMinus
DEBUG 02:12:10,227 - term SingleFactorterm is type 1
DEBUG 02:12:10,227 - exprWithNoMinus
DEBUG 02:12:10,227 - found constant with value 2of type 1
DEBUG 02:12:10,227 - constant factor is type 1
DEBUG 02:12:10,227 - term SingleFactorterm is type 1
DEBUG 02:12:10,227 - exprWithNoMinus
DEBUG 02:12:10,227 - term SingleFactorterm is type 1
DEBUG 02:12:10,227 - exprWithNoMinus
DEBUG 02:12:10,227 - term SingleFactorterm is type 1
DEBUG 02:12:10,227 - exprWithNoMinus
DEBUG 02:12:10,227 - print statement has arg of type 1
INFO  02:12:10,227 - Print calls = 0
DEBUG 02:12:10,228 - 
INFO  02:12:10,229 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
INFO  02:12:10,236 - Finished code generation
DEBUG 02:12:10,236 - 
INFO  02:12:10,236 - Parsiranje uspesno zavrseno!
