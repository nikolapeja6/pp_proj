INFO  00:25:53,468 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\303.mj
INFO  00:25:53,531 - #40 program
INFO  00:25:53,532 - #45 test_303
INFO  00:25:53,532 - #44 const
INFO  00:25:53,532 - #45 int
INFO  00:25:53,532 - #45 cinilac
INFO  00:25:53,532 - #28 =
INFO  00:25:53,532 - #9 4
INFO  00:25:53,532 - #12 ,
INFO  00:25:53,533 - #45 delilac
INFO  00:25:53,533 - #28 =
INFO  00:25:53,533 - #9 3
INFO  00:25:53,533 - #13 ;
INFO  00:25:53,533 - #38 class
INFO  00:25:53,533 - #45 Predmet
INFO  00:25:53,534 - #34 {
INFO  00:25:53,534 - #45 int
INFO  00:25:53,534 - #45 tezina
INFO  00:25:53,534 - #13 ;
INFO  00:25:53,534 - #45 char
INFO  00:25:53,535 - #45 vrsta
INFO  00:25:53,535 - #13 ;
INFO  00:25:53,535 - #34 {
INFO  00:25:53,535 - #43 void
INFO  00:25:53,536 - #45 ucitajTezinu
INFO  00:25:53,537 - #32 (
INFO  00:25:53,537 - #33 )
INFO  00:25:53,537 - #34 {
INFO  00:25:53,537 - #42 read
INFO  00:25:53,538 - #32 (
INFO  00:25:53,538 - #45 tezina
INFO  00:25:53,538 - #33 )
INFO  00:25:53,538 - #13 ;
INFO  00:25:53,538 - #35 }
INFO  00:25:53,539 - #45 int
INFO  00:25:53,540 - #45 zapremina
INFO  00:25:53,540 - #32 (
INFO  00:25:53,540 - #33 )
INFO  00:25:53,540 - #34 {
INFO  00:25:53,540 - #8 return
INFO  00:25:53,540 - #9 0
INFO  00:25:53,540 - #13 ;
INFO  00:25:53,541 - #35 }
INFO  00:25:53,541 - #45 int
INFO  00:25:53,541 - #45 Q
INFO  00:25:53,541 - #32 (
INFO  00:25:53,541 - #33 )
INFO  00:25:53,541 - #34 {
INFO  00:25:53,541 - #8 return
INFO  00:25:53,542 - #45 zapremina
INFO  00:25:53,542 - #32 (
INFO  00:25:53,542 - #33 )
INFO  00:25:53,542 - #17 *
INFO  00:25:53,542 - #45 tezina
INFO  00:25:53,543 - #13 ;
INFO  00:25:53,543 - #35 }
INFO  00:25:53,543 - #35 }
INFO  00:25:53,543 - #35 }
INFO  00:25:53,543 - #38 class
INFO  00:25:53,544 - #45 Sfera
INFO  00:25:53,544 - #39 extends
INFO  00:25:53,544 - #45 Predmet
INFO  00:25:53,544 - #34 {
INFO  00:25:53,544 - #45 int
INFO  00:25:53,544 - #45 r
INFO  00:25:53,544 - #13 ;
INFO  00:25:53,544 - #34 {
INFO  00:25:53,545 - #45 int
INFO  00:25:53,545 - #45 zapremina
INFO  00:25:53,545 - #32 (
INFO  00:25:53,545 - #33 )
INFO  00:25:53,545 - #45 int
INFO  00:25:53,545 - #45 z
INFO  00:25:53,545 - #13 ;
INFO  00:25:53,545 - #34 {
INFO  00:25:53,545 - #45 z
INFO  00:25:53,545 - #28 =
INFO  00:25:53,545 - #45 cinilac
INFO  00:25:53,545 - #13 ;
INFO  00:25:53,545 - #8 return
INFO  00:25:53,545 - #45 z
INFO  00:25:53,545 - #17 *
INFO  00:25:53,545 - #32 (
INFO  00:25:53,545 - #45 r
INFO  00:25:53,546 - #18 /
INFO  00:25:53,546 - #45 delilac
INFO  00:25:53,547 - #33 )
INFO  00:25:53,547 - #13 ;
INFO  00:25:53,547 - #35 }
INFO  00:25:53,547 - #35 }
INFO  00:25:53,547 - #35 }
INFO  00:25:53,547 - #38 class
INFO  00:25:53,547 - #45 Kvadar
INFO  00:25:53,547 - #39 extends
INFO  00:25:53,547 - #45 Predmet
INFO  00:25:53,547 - #34 {
INFO  00:25:53,548 - #45 int
INFO  00:25:53,548 - #45 a
INFO  00:25:53,548 - #12 ,
INFO  00:25:53,548 - #45 b
INFO  00:25:53,548 - #12 ,
INFO  00:25:53,548 - #45 c
INFO  00:25:53,548 - #13 ;
INFO  00:25:53,548 - #34 {
INFO  00:25:53,548 - #45 int
INFO  00:25:53,548 - #45 zapremina
INFO  00:25:53,548 - #32 (
INFO  00:25:53,548 - #33 )
INFO  00:25:53,548 - #45 int
INFO  00:25:53,548 - #45 z
INFO  00:25:53,548 - #13 ;
INFO  00:25:53,548 - #34 {
INFO  00:25:53,548 - #45 z
INFO  00:25:53,548 - #28 =
INFO  00:25:53,548 - #45 a
INFO  00:25:53,548 - #17 *
INFO  00:25:53,548 - #45 b
INFO  00:25:53,548 - #17 *
INFO  00:25:53,548 - #45 c
INFO  00:25:53,549 - #13 ;
INFO  00:25:53,549 - #8 return
INFO  00:25:53,549 - #45 z
INFO  00:25:53,549 - #13 ;
INFO  00:25:53,549 - #35 }
INFO  00:25:53,549 - #35 }
INFO  00:25:53,549 - #35 }
INFO  00:25:53,549 - #45 int
INFO  00:25:53,549 - #45 zapreminaK
INFO  00:25:53,549 - #12 ,
INFO  00:25:53,549 - #45 zapreminaS
INFO  00:25:53,549 - #13 ;
INFO  00:25:53,549 - #45 int
INFO  00:25:53,549 - #45 tezinaK
INFO  00:25:53,549 - #12 ,
INFO  00:25:53,549 - #45 tezinaS
INFO  00:25:53,549 - #13 ;
INFO  00:25:53,549 - #34 {
INFO  00:25:53,549 - #43 void
INFO  00:25:53,550 - #45 ispis
INFO  00:25:53,550 - #32 (
INFO  00:25:53,550 - #45 Predmet
INFO  00:25:53,550 - #45 p
INFO  00:25:53,550 - #33 )
INFO  00:25:53,551 - #34 {
INFO  00:25:53,551 - #41 print
INFO  00:25:53,551 - #32 (
INFO  00:25:53,551 - #45 p
INFO  00:25:53,551 - #14 .
INFO  00:25:53,551 - #45 vrsta
INFO  00:25:53,551 - #33 )
INFO  00:25:53,551 - #13 ;
INFO  00:25:53,551 - #41 print
INFO  00:25:53,551 - #32 (
INFO  00:25:53,551 - #45 eol
INFO  00:25:53,551 - #33 )
INFO  00:25:53,551 - #13 ;
INFO  00:25:53,551 - #41 print
INFO  00:25:53,551 - #32 (
INFO  00:25:53,551 - #45 p
INFO  00:25:53,551 - #14 .
INFO  00:25:53,552 - #45 tezina
INFO  00:25:53,552 - #33 )
INFO  00:25:53,552 - #13 ;
INFO  00:25:53,552 - #35 }
INFO  00:25:53,552 - #43 void
INFO  00:25:53,552 - #45 main
INFO  00:25:53,552 - #32 (
INFO  00:25:53,552 - #33 )
INFO  00:25:53,552 - #45 Predmet
INFO  00:25:53,552 - #45 predmeti
INFO  00:25:53,552 - #36 [
INFO  00:25:53,552 - #37 ]
INFO  00:25:53,552 - #13 ;
INFO  00:25:53,552 - #45 int
INFO  00:25:53,552 - #45 i
INFO  00:25:53,552 - #13 ;
INFO  00:25:53,552 - #45 Sfera
INFO  00:25:53,552 - #45 s1
INFO  00:25:53,552 - #12 ,
INFO  00:25:53,552 - #45 s2
INFO  00:25:53,552 - #12 ,
INFO  00:25:53,552 - #45 s3
INFO  00:25:53,552 - #13 ;
INFO  00:25:53,553 - #45 Kvadar
INFO  00:25:53,553 - #45 k1
INFO  00:25:53,553 - #12 ,
INFO  00:25:53,553 - #45 k2
INFO  00:25:53,553 - #12 ,
INFO  00:25:53,553 - #45 k3
INFO  00:25:53,553 - #13 ;
INFO  00:25:53,553 - #45 int
INFO  00:25:53,553 - #45 t
INFO  00:25:53,553 - #13 ;
INFO  00:25:53,553 - #34 {
INFO  00:25:53,553 - #45 predmeti
INFO  00:25:53,553 - #28 =
INFO  00:25:53,553 - #31 new
INFO  00:25:53,553 - #45 Predmet
INFO  00:25:53,553 - #36 [
INFO  00:25:53,553 - #9 6
INFO  00:25:53,553 - #37 ]
INFO  00:25:53,553 - #13 ;
INFO  00:25:53,553 - #45 s1
INFO  00:25:53,554 - #28 =
INFO  00:25:53,554 - #31 new
INFO  00:25:53,554 - #45 Sfera
INFO  00:25:53,554 - #13 ;
INFO  00:25:53,554 - #45 s2
INFO  00:25:53,554 - #28 =
INFO  00:25:53,554 - #31 new
INFO  00:25:53,554 - #45 Sfera
INFO  00:25:53,554 - #13 ;
INFO  00:25:53,554 - #45 s3
INFO  00:25:53,554 - #28 =
INFO  00:25:53,554 - #31 new
INFO  00:25:53,554 - #45 Sfera
INFO  00:25:53,555 - #13 ;
INFO  00:25:53,555 - #45 k1
INFO  00:25:53,555 - #28 =
INFO  00:25:53,555 - #31 new
INFO  00:25:53,555 - #45 Kvadar
INFO  00:25:53,555 - #13 ;
INFO  00:25:53,555 - #45 k2
INFO  00:25:53,555 - #28 =
INFO  00:25:53,555 - #31 new
INFO  00:25:53,555 - #45 Kvadar
INFO  00:25:53,555 - #13 ;
INFO  00:25:53,555 - #45 k3
INFO  00:25:53,555 - #28 =
INFO  00:25:53,555 - #31 new
INFO  00:25:53,555 - #45 Kvadar
INFO  00:25:53,555 - #13 ;
INFO  00:25:53,555 - #45 predmeti
INFO  00:25:53,556 - #36 [
INFO  00:25:53,556 - #9 0
INFO  00:25:53,556 - #37 ]
INFO  00:25:53,556 - #28 =
INFO  00:25:53,556 - #45 s1
INFO  00:25:53,556 - #13 ;
INFO  00:25:53,556 - #45 predmeti
INFO  00:25:53,556 - #36 [
INFO  00:25:53,556 - #9 2
INFO  00:25:53,556 - #37 ]
INFO  00:25:53,556 - #28 =
INFO  00:25:53,556 - #45 s2
INFO  00:25:53,556 - #13 ;
INFO  00:25:53,556 - #45 predmeti
INFO  00:25:53,556 - #36 [
INFO  00:25:53,556 - #9 4
INFO  00:25:53,557 - #37 ]
INFO  00:25:53,557 - #28 =
INFO  00:25:53,557 - #45 s3
INFO  00:25:53,557 - #13 ;
INFO  00:25:53,557 - #45 predmeti
INFO  00:25:53,557 - #36 [
INFO  00:25:53,557 - #9 1
INFO  00:25:53,557 - #37 ]
INFO  00:25:53,557 - #28 =
INFO  00:25:53,557 - #45 k1
INFO  00:25:53,557 - #13 ;
INFO  00:25:53,557 - #45 predmeti
INFO  00:25:53,557 - #36 [
INFO  00:25:53,557 - #9 3
INFO  00:25:53,557 - #37 ]
INFO  00:25:53,557 - #28 =
INFO  00:25:53,557 - #45 k2
INFO  00:25:53,557 - #13 ;
INFO  00:25:53,557 - #45 predmeti
INFO  00:25:53,557 - #36 [
INFO  00:25:53,557 - #9 5
INFO  00:25:53,558 - #37 ]
INFO  00:25:53,558 - #28 =
INFO  00:25:53,558 - #45 k3
INFO  00:25:53,558 - #13 ;
INFO  00:25:53,558 - #42 read
INFO  00:25:53,558 - #32 (
INFO  00:25:53,558 - #45 t
INFO  00:25:53,558 - #33 )
INFO  00:25:53,558 - #13 ;
INFO  00:25:53,558 - #45 i
INFO  00:25:53,558 - #28 =
INFO  00:25:53,558 - #9 0
INFO  00:25:53,558 - #13 ;
INFO  00:25:53,558 - #5 do
INFO  00:25:53,558 - #34 {
INFO  00:25:53,559 - #45 i
INFO  00:25:53,559 - #29 ++
INFO  00:25:53,559 - #13 ;
INFO  00:25:53,559 - #35 }
INFO  00:25:53,559 - #6 while
INFO  00:25:53,560 - #32 (
INFO  00:25:53,560 - #45 i
INFO  00:25:53,560 - #23 <
INFO  00:25:53,560 - #9 6
INFO  00:25:53,561 - #33 )
INFO  00:25:53,562 - #13 ;
INFO  00:25:53,562 - #45 i
INFO  00:25:53,562 - #28 =
INFO  00:25:53,562 - #9 0
INFO  00:25:53,562 - #13 ;
INFO  00:25:53,562 - #45 zapreminaS
INFO  00:25:53,562 - #28 =
INFO  00:25:53,562 - #9 0
INFO  00:25:53,562 - #13 ;
INFO  00:25:53,563 - #45 tezinaS
INFO  00:25:53,563 - #28 =
INFO  00:25:53,563 - #9 0
INFO  00:25:53,563 - #13 ;
INFO  00:25:53,563 - #5 do
INFO  00:25:53,563 - #34 {
INFO  00:25:53,563 - #45 i
INFO  00:25:53,563 - #29 ++
INFO  00:25:53,563 - #13 ;
INFO  00:25:53,563 - #2 if
INFO  00:25:53,563 - #32 (
INFO  00:25:53,563 - #45 i
INFO  00:25:53,563 - #19 %
INFO  00:25:53,563 - #9 2
INFO  00:25:53,564 - #20 ==
INFO  00:25:53,564 - #9 0
INFO  00:25:53,564 - #33 )
INFO  00:25:53,565 - #7 continue
INFO  00:25:53,565 - #13 ;
INFO  00:25:53,565 - #45 zapreminaS
INFO  00:25:53,565 - #28 =
INFO  00:25:53,565 - #45 zapreminaS
INFO  00:25:53,565 - #15 +
INFO  00:25:53,565 - #45 predmeti
INFO  00:25:53,566 - #36 [
INFO  00:25:53,566 - #45 i
INFO  00:25:53,567 - #16 -
INFO  00:25:53,567 - #9 1
INFO  00:25:53,567 - #37 ]
INFO  00:25:53,567 - #14 .
INFO  00:25:53,568 - #45 zapremina
INFO  00:25:53,568 - #32 (
INFO  00:25:53,568 - #33 )
INFO  00:25:53,568 - #13 ;
INFO  00:25:53,568 - #45 tezinaS
INFO  00:25:53,568 - #28 =
INFO  00:25:53,568 - #45 tezinaS
INFO  00:25:53,568 - #15 +
INFO  00:25:53,568 - #45 predmeti
INFO  00:25:53,568 - #36 [
INFO  00:25:53,568 - #45 i
INFO  00:25:53,568 - #16 -
INFO  00:25:53,568 - #9 1
INFO  00:25:53,568 - #37 ]
INFO  00:25:53,568 - #14 .
INFO  00:25:53,568 - #45 Q
INFO  00:25:53,568 - #32 (
INFO  00:25:53,568 - #33 )
INFO  00:25:53,568 - #13 ;
INFO  00:25:53,568 - #45 ispis
INFO  00:25:53,568 - #32 (
INFO  00:25:53,568 - #45 predmeti
INFO  00:25:53,568 - #36 [
INFO  00:25:53,568 - #45 i
INFO  00:25:53,568 - #16 -
INFO  00:25:53,568 - #9 1
INFO  00:25:53,568 - #37 ]
INFO  00:25:53,569 - #33 )
INFO  00:25:53,569 - #13 ;
INFO  00:25:53,569 - #35 }
INFO  00:25:53,569 - #6 while
INFO  00:25:53,569 - #32 (
INFO  00:25:53,569 - #45 i
INFO  00:25:53,569 - #23 <
INFO  00:25:53,569 - #9 6
INFO  00:25:53,569 - #33 )
INFO  00:25:53,569 - #13 ;
INFO  00:25:53,569 - #45 i
INFO  00:25:53,569 - #28 =
INFO  00:25:53,569 - #9 0
INFO  00:25:53,569 - #13 ;
INFO  00:25:53,569 - #45 zapreminaK
INFO  00:25:53,569 - #28 =
INFO  00:25:53,569 - #9 0
INFO  00:25:53,569 - #13 ;
INFO  00:25:53,570 - #45 tezinaK
INFO  00:25:53,570 - #28 =
INFO  00:25:53,570 - #9 0
INFO  00:25:53,570 - #13 ;
INFO  00:25:53,570 - #5 do
INFO  00:25:53,570 - #34 {
INFO  00:25:53,570 - #45 i
INFO  00:25:53,570 - #29 ++
INFO  00:25:53,570 - #13 ;
INFO  00:25:53,570 - #2 if
INFO  00:25:53,570 - #32 (
INFO  00:25:53,570 - #45 i
INFO  00:25:53,570 - #19 %
INFO  00:25:53,570 - #9 2
INFO  00:25:53,570 - #20 ==
INFO  00:25:53,570 - #9 1
INFO  00:25:53,570 - #33 )
INFO  00:25:53,570 - #7 continue
INFO  00:25:53,570 - #13 ;
INFO  00:25:53,570 - #45 zapreminaK
INFO  00:25:53,570 - #28 =
INFO  00:25:53,570 - #45 zapreminaK
INFO  00:25:53,570 - #15 +
INFO  00:25:53,570 - #45 predmeti
INFO  00:25:53,570 - #36 [
INFO  00:25:53,570 - #45 i
INFO  00:25:53,570 - #16 -
INFO  00:25:53,570 - #9 1
INFO  00:25:53,570 - #37 ]
INFO  00:25:53,570 - #14 .
INFO  00:25:53,570 - #45 zapremina
INFO  00:25:53,571 - #32 (
INFO  00:25:53,571 - #33 )
INFO  00:25:53,571 - #13 ;
INFO  00:25:53,571 - #45 tezinaK
INFO  00:25:53,571 - #28 =
INFO  00:25:53,571 - #45 tezinaK
INFO  00:25:53,571 - #15 +
INFO  00:25:53,571 - #45 predmeti
INFO  00:25:53,571 - #36 [
INFO  00:25:53,571 - #45 i
INFO  00:25:53,571 - #16 -
INFO  00:25:53,571 - #9 1
INFO  00:25:53,571 - #37 ]
INFO  00:25:53,571 - #14 .
INFO  00:25:53,571 - #45 Q
INFO  00:25:53,571 - #32 (
INFO  00:25:53,571 - #33 )
INFO  00:25:53,571 - #13 ;
INFO  00:25:53,571 - #45 ispis
INFO  00:25:53,571 - #32 (
INFO  00:25:53,571 - #45 predmeti
INFO  00:25:53,571 - #36 [
INFO  00:25:53,571 - #45 i
INFO  00:25:53,571 - #16 -
INFO  00:25:53,571 - #9 1
INFO  00:25:53,571 - #37 ]
INFO  00:25:53,571 - #33 )
INFO  00:25:53,571 - #13 ;
INFO  00:25:53,571 - #35 }
INFO  00:25:53,571 - #6 while
INFO  00:25:53,571 - #32 (
INFO  00:25:53,571 - #45 i
INFO  00:25:53,571 - #23 <
INFO  00:25:53,571 - #9 6
INFO  00:25:53,571 - #33 )
INFO  00:25:53,571 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 zapreminaS
INFO  00:25:53,572 - #33 )
INFO  00:25:53,572 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 eol
INFO  00:25:53,572 - #33 )
INFO  00:25:53,572 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 zapreminaK
INFO  00:25:53,572 - #33 )
INFO  00:25:53,572 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 eol
INFO  00:25:53,572 - #33 )
INFO  00:25:53,572 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 tezinaS
INFO  00:25:53,572 - #33 )
INFO  00:25:53,572 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 eol
INFO  00:25:53,572 - #33 )
INFO  00:25:53,572 - #13 ;
INFO  00:25:53,572 - #41 print
INFO  00:25:53,572 - #32 (
INFO  00:25:53,572 - #45 tezinaK
INFO  00:25:53,572 - #33 )
INFO  00:25:53,573 - #13 ;
INFO  00:25:53,573 - #41 print
INFO  00:25:53,573 - #32 (
INFO  00:25:53,573 - #45 eol
INFO  00:25:53,573 - #33 )
INFO  00:25:53,573 - #13 ;
INFO  00:25:53,573 - #35 }
INFO  00:25:53,573 - #35 }
INFO  00:25:53,574 - ***Abstract tree****
INFO  00:25:53,574 - #0
DEBUG 00:25:53,582 - program name
DEBUG 00:25:53,582 - found constant with value 4of type 1
DEBUG 00:25:53,582 - found constant with value 3of type 1
DEBUG 00:25:53,582 - ClassBegin
DEBUG 00:25:53,583 - Variable with name tezina has the address of 1
DEBUG 00:25:53,583 - Variable with name vrsta has the address of 2
DEBUG 00:25:53,583 - designator simple at line 12: tezina
DEBUG 00:25:53,583 - found constant with value 0of type 1
DEBUG 00:25:53,583 - constant factor is type 1
DEBUG 00:25:53,583 - term SingleFactorterm is type 1
DEBUG 00:25:53,584 - exprWithNoMinus is type 1
DEBUG 00:25:53,584 - designator simple at line 14: zapremina
DEBUG 00:25:53,584 - designator simple at line 14: tezina
DEBUG 00:25:53,584 - term element is type 1
DEBUG 00:25:53,584 - term list single is type 1
DEBUG 00:25:53,584 - term MultiFactorTerm is type 1
DEBUG 00:25:53,584 - exprWithNoMinus is type 1
DEBUG 00:25:53,584 - class decl end
DEBUG 00:25:53,584 - class decl 1
DEBUG 00:25:53,584 - derived ClassBegin
DEBUG 00:25:53,584 - Variable with name r has the address of 1
DEBUG 00:25:53,584 - Variable with name z has the address of 2
DEBUG 00:25:53,584 - designator simple at line 25: z
DEBUG 00:25:53,584 - designator simple at line 25: cinilac
DEBUG 00:25:53,584 - term SingleFactorterm is type 1
DEBUG 00:25:53,584 - exprWithNoMinus is type 1
DEBUG 00:25:53,584 - designator simple at line 26: z
DEBUG 00:25:53,584 - designator simple at line 26: r
DEBUG 00:25:53,585 - designator simple at line 26: delilac
DEBUG 00:25:53,585 - term element is type 1
DEBUG 00:25:53,585 - term list single is type 1
DEBUG 00:25:53,585 - term MultiFactorTerm is type 1
DEBUG 00:25:53,585 - exprWithNoMinus is type 1
DEBUG 00:25:53,585 - term element is type 1
DEBUG 00:25:53,585 - term list single is type 1
DEBUG 00:25:53,585 - term MultiFactorTerm is type 1
DEBUG 00:25:53,585 - exprWithNoMinus is type 1
DEBUG 00:25:53,585 - class decl end
DEBUG 00:25:53,585 - class decl 1
DEBUG 00:25:53,585 - derived ClassBegin
DEBUG 00:25:53,585 - Variable with name a has the address of 1
DEBUG 00:25:53,585 - Variable with name b has the address of 2
DEBUG 00:25:53,585 - Variable with name c has the address of 3
DEBUG 00:25:53,585 - Variable with name z has the address of 4
DEBUG 00:25:53,585 - designator simple at line 39: z
DEBUG 00:25:53,586 - designator simple at line 39: a
DEBUG 00:25:53,586 - designator simple at line 39: b
DEBUG 00:25:53,586 - term element is type 1
DEBUG 00:25:53,586 - term list single is type 1
DEBUG 00:25:53,586 - designator simple at line 39: c
DEBUG 00:25:53,586 - term element is type 1
DEBUG 00:25:53,586 - term list multiple is type 1
DEBUG 00:25:53,586 - term MultiFactorTerm is type 1
DEBUG 00:25:53,586 - exprWithNoMinus is type 1
DEBUG 00:25:53,586 - designator simple at line 40: z
DEBUG 00:25:53,586 - term SingleFactorterm is type 1
DEBUG 00:25:53,586 - exprWithNoMinus is type 1
DEBUG 00:25:53,586 - class decl end
DEBUG 00:25:53,586 - class decl 1
DEBUG 00:25:53,586 - Variable with name zapreminaK has the address of 1
DEBUG 00:25:53,586 - Variable with name zapreminaS has the address of 2
DEBUG 00:25:53,586 - Variable with name tezinaK has the address of 3
DEBUG 00:25:53,586 - Variable with name tezinaS has the address of 4
DEBUG 00:25:53,586 - program begin
DEBUG 00:25:53,586 - designator simple at line 51: p
DEBUG 00:25:53,586 - designator simple at line 51: vrsta
DEBUG 00:25:53,586 - term SingleFactorterm is type 2
DEBUG 00:25:53,586 - exprWithNoMinus is type 2
DEBUG 00:25:53,586 - print statement has arg of type 2
DEBUG 00:25:53,586 - designator simple at line 52: eol
DEBUG 00:25:53,586 - term SingleFactorterm is type 2
DEBUG 00:25:53,586 - exprWithNoMinus is type 2
DEBUG 00:25:53,586 - print statement has arg of type 2
DEBUG 00:25:53,586 - designator simple at line 53: p
DEBUG 00:25:53,586 - designator simple at line 53: tezina
DEBUG 00:25:53,586 - term SingleFactorterm is type 1
DEBUG 00:25:53,586 - exprWithNoMinus is type 1
DEBUG 00:25:53,586 - print statement has arg of type 1
DEBUG 00:25:53,586 - Variable with name i has the address of 1
DEBUG 00:25:53,586 - Variable with name s1 has the address of 2
DEBUG 00:25:53,586 - Variable with name s2 has the address of 3
DEBUG 00:25:53,586 - Variable with name s3 has the address of 4
DEBUG 00:25:53,586 - Variable with name k1 has the address of 5
DEBUG 00:25:53,587 - Variable with name k2 has the address of 6
DEBUG 00:25:53,587 - Variable with name k3 has the address of 7
DEBUG 00:25:53,587 - Variable with name t has the address of 8
DEBUG 00:25:53,587 - designator simple at line 59: predmeti
DEBUG 00:25:53,587 - found constant with value 6of type 1
DEBUG 00:25:53,587 - constant factor is type 1
DEBUG 00:25:53,587 - term SingleFactorterm is type 1
DEBUG 00:25:53,587 - exprWithNoMinus is type 1
DEBUG 00:25:53,587 - term SingleFactorterm is type 3
DEBUG 00:25:53,587 - exprWithNoMinus is type 3
DEBUG 00:25:53,587 - designator simple at line 60: s1
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,587 - designator simple at line 61: s2
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,587 - designator simple at line 62: s3
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,587 - designator simple at line 64: k1
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,587 - designator simple at line 65: k2
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,587 - designator simple at line 66: k3
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,587 - found constant with value 0of type 1
DEBUG 00:25:53,587 - constant factor is type 1
DEBUG 00:25:53,587 - term SingleFactorterm is type 1
DEBUG 00:25:53,587 - exprWithNoMinus is type 1
DEBUG 00:25:53,587 - designator simple at line 68: s1
DEBUG 00:25:53,587 - term SingleFactorterm is type 4
DEBUG 00:25:53,587 - exprWithNoMinus is type 4
DEBUG 00:25:53,588 - found constant with value 2of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - designator simple at line 69: s2
DEBUG 00:25:53,588 - term SingleFactorterm is type 4
DEBUG 00:25:53,588 - exprWithNoMinus is type 4
DEBUG 00:25:53,588 - found constant with value 4of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - designator simple at line 70: s3
DEBUG 00:25:53,588 - term SingleFactorterm is type 4
DEBUG 00:25:53,588 - exprWithNoMinus is type 4
DEBUG 00:25:53,588 - found constant with value 1of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - designator simple at line 71: k1
DEBUG 00:25:53,588 - term SingleFactorterm is type 4
DEBUG 00:25:53,588 - exprWithNoMinus is type 4
DEBUG 00:25:53,588 - found constant with value 3of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - designator simple at line 72: k2
DEBUG 00:25:53,588 - term SingleFactorterm is type 4
DEBUG 00:25:53,588 - exprWithNoMinus is type 4
DEBUG 00:25:53,588 - found constant with value 5of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - designator simple at line 73: k3
DEBUG 00:25:53,588 - term SingleFactorterm is type 4
DEBUG 00:25:53,588 - exprWithNoMinus is type 4
DEBUG 00:25:53,588 - designator simple at line 75: t
DEBUG 00:25:53,588 - designator simple at line 76: i
DEBUG 00:25:53,588 - found constant with value 0of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - designator simple at line 79: i
DEBUG 00:25:53,588 - designator simple at line 80: i
DEBUG 00:25:53,588 - term SingleFactorterm is type 1
DEBUG 00:25:53,588 - exprWithNoMinus is type 1
DEBUG 00:25:53,588 - found constant with value 6of type 1
DEBUG 00:25:53,588 - constant factor is type 1
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - exprWithNoMinus is type 1
DEBUG 00:25:53,589 - designator simple at line 83: i
DEBUG 00:25:53,589 - found constant with value 0of type 1
DEBUG 00:25:53,589 - constant factor is type 1
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - exprWithNoMinus is type 1
DEBUG 00:25:53,589 - designator simple at line 84: zapreminaS
DEBUG 00:25:53,589 - found constant with value 0of type 1
DEBUG 00:25:53,589 - constant factor is type 1
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - exprWithNoMinus is type 1
DEBUG 00:25:53,589 - designator simple at line 85: tezinaS
DEBUG 00:25:53,589 - found constant with value 0of type 1
DEBUG 00:25:53,589 - constant factor is type 1
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - exprWithNoMinus is type 1
DEBUG 00:25:53,589 - designator simple at line 88: i
DEBUG 00:25:53,589 - designator simple at line 89: i
DEBUG 00:25:53,589 - found constant with value 2of type 1
DEBUG 00:25:53,589 - constant factor is type 1
DEBUG 00:25:53,589 - term element is type 1
DEBUG 00:25:53,589 - term list single is type 1
DEBUG 00:25:53,589 - term MultiFactorTerm is type 1
DEBUG 00:25:53,589 - exprWithNoMinus is type 1
DEBUG 00:25:53,589 - found constant with value 0of type 1
DEBUG 00:25:53,589 - constant factor is type 1
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - exprWithNoMinus is type 1
DEBUG 00:25:53,589 - designator simple at line 90: zapreminaS
DEBUG 00:25:53,589 - designator simple at line 90: zapreminaS
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - designator simple at line 90: i
DEBUG 00:25:53,589 - term SingleFactorterm is type 1
DEBUG 00:25:53,589 - found constant with value 1of type 1
DEBUG 00:25:53,592 - constant factor is type 1
DEBUG 00:25:53,592 - term SingleFactorterm is type 1
DEBUG 00:25:53,592 - exprWithNoMinus is type 1
DEBUG 00:25:53,592 - designator simple at line 90: zapremina
DEBUG 00:25:53,592 - term SingleFactorterm is type 1
DEBUG 00:25:53,592 - exprWithNoMinus is type 1
DEBUG 00:25:53,592 - designator simple at line 91: tezinaS
DEBUG 00:25:53,593 - designator simple at line 91: tezinaS
DEBUG 00:25:53,593 - term SingleFactorterm is type 1
DEBUG 00:25:53,593 - designator simple at line 91: i
DEBUG 00:25:53,593 - term SingleFactorterm is type 1
DEBUG 00:25:53,593 - found constant with value 1of type 1
DEBUG 00:25:53,593 - constant factor is type 1
DEBUG 00:25:53,593 - term SingleFactorterm is type 1
DEBUG 00:25:53,593 - exprWithNoMinus is type 1
DEBUG 00:25:53,593 - designator simple at line 91: Q
DEBUG 00:25:53,593 - term SingleFactorterm is type 1
DEBUG 00:25:53,593 - exprWithNoMinus is type 1
DEBUG 00:25:53,593 - designator simple at line 92: ispis
DEBUG 00:25:53,593 - designator simple at line 92: i
DEBUG 00:25:53,593 - term SingleFactorterm is type 1
DEBUG 00:25:53,593 - found constant with value 1of type 1
DEBUG 00:25:53,593 - constant factor is type 1
DEBUG 00:25:53,593 - term SingleFactorterm is type 1
DEBUG 00:25:53,593 - exprWithNoMinus is type 1
DEBUG 00:25:53,593 - term SingleFactorterm is type 4
DEBUG 00:25:53,593 - exprWithNoMinus is type 4
DEBUG 00:25:53,594 - designator simple at line 93: i
DEBUG 00:25:53,594 - term SingleFactorterm is type 1
DEBUG 00:25:53,594 - exprWithNoMinus is type 1
DEBUG 00:25:53,594 - found constant with value 6of type 1
DEBUG 00:25:53,594 - constant factor is type 1
DEBUG 00:25:53,594 - term SingleFactorterm is type 1
DEBUG 00:25:53,594 - exprWithNoMinus is type 1
DEBUG 00:25:53,594 - designator simple at line 95: i
DEBUG 00:25:53,594 - found constant with value 0of type 1
DEBUG 00:25:53,594 - constant factor is type 1
DEBUG 00:25:53,594 - term SingleFactorterm is type 1
DEBUG 00:25:53,594 - exprWithNoMinus is type 1
DEBUG 00:25:53,594 - designator simple at line 96: zapreminaK
DEBUG 00:25:53,594 - found constant with value 0of type 1
DEBUG 00:25:53,594 - constant factor is type 1
DEBUG 00:25:53,594 - term SingleFactorterm is type 1
DEBUG 00:25:53,594 - exprWithNoMinus is type 1
DEBUG 00:25:53,594 - designator simple at line 96: tezinaK
DEBUG 00:25:53,595 - found constant with value 0of type 1
DEBUG 00:25:53,595 - constant factor is type 1
DEBUG 00:25:53,595 - term SingleFactorterm is type 1
DEBUG 00:25:53,595 - exprWithNoMinus is type 1
DEBUG 00:25:53,595 - designator simple at line 99: i
DEBUG 00:25:53,595 - designator simple at line 100: i
DEBUG 00:25:53,595 - found constant with value 2of type 1
DEBUG 00:25:53,595 - constant factor is type 1
DEBUG 00:25:53,595 - term element is type 1
DEBUG 00:25:53,595 - term list single is type 1
DEBUG 00:25:53,595 - term MultiFactorTerm is type 1
DEBUG 00:25:53,595 - exprWithNoMinus is type 1
DEBUG 00:25:53,595 - found constant with value 1of type 1
DEBUG 00:25:53,595 - constant factor is type 1
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - exprWithNoMinus is type 1
DEBUG 00:25:53,596 - designator simple at line 101: zapreminaK
DEBUG 00:25:53,596 - designator simple at line 101: zapreminaK
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - designator simple at line 101: i
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - found constant with value 1of type 1
DEBUG 00:25:53,596 - constant factor is type 1
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - exprWithNoMinus is type 1
DEBUG 00:25:53,596 - designator simple at line 101: zapremina
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - exprWithNoMinus is type 1
DEBUG 00:25:53,596 - designator simple at line 102: tezinaK
DEBUG 00:25:53,596 - designator simple at line 102: tezinaK
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - designator simple at line 102: i
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - found constant with value 1of type 1
DEBUG 00:25:53,596 - constant factor is type 1
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - exprWithNoMinus is type 1
DEBUG 00:25:53,596 - designator simple at line 102: Q
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - exprWithNoMinus is type 1
DEBUG 00:25:53,596 - designator simple at line 103: ispis
DEBUG 00:25:53,596 - designator simple at line 103: i
DEBUG 00:25:53,596 - term SingleFactorterm is type 1
DEBUG 00:25:53,596 - found constant with value 1of type 1
DEBUG 00:25:53,596 - constant factor is type 1
DEBUG 00:25:53,597 - term SingleFactorterm is type 1
DEBUG 00:25:53,597 - exprWithNoMinus is type 1
DEBUG 00:25:53,597 - term SingleFactorterm is type 4
DEBUG 00:25:53,597 - exprWithNoMinus is type 4
DEBUG 00:25:53,597 - designator simple at line 104: i
DEBUG 00:25:53,597 - term SingleFactorterm is type 1
DEBUG 00:25:53,597 - exprWithNoMinus is type 1
DEBUG 00:25:53,597 - found constant with value 6of type 1
DEBUG 00:25:53,597 - constant factor is type 1
DEBUG 00:25:53,597 - term SingleFactorterm is type 1
DEBUG 00:25:53,597 - exprWithNoMinus is type 1
DEBUG 00:25:53,597 - designator simple at line 106: zapreminaS
DEBUG 00:25:53,597 - term SingleFactorterm is type 1
DEBUG 00:25:53,597 - exprWithNoMinus is type 1
DEBUG 00:25:53,597 - print statement has arg of type 1
DEBUG 00:25:53,598 - designator simple at line 106: eol
DEBUG 00:25:53,598 - term SingleFactorterm is type 2
DEBUG 00:25:53,598 - exprWithNoMinus is type 2
DEBUG 00:25:53,598 - print statement has arg of type 2
DEBUG 00:25:53,598 - designator simple at line 107: zapreminaK
DEBUG 00:25:53,598 - term SingleFactorterm is type 1
DEBUG 00:25:53,598 - exprWithNoMinus is type 1
DEBUG 00:25:53,598 - print statement has arg of type 1
DEBUG 00:25:53,598 - designator simple at line 107: eol
DEBUG 00:25:53,598 - term SingleFactorterm is type 2
DEBUG 00:25:53,598 - exprWithNoMinus is type 2
DEBUG 00:25:53,598 - print statement has arg of type 2
DEBUG 00:25:53,598 - designator simple at line 108: tezinaS
DEBUG 00:25:53,598 - term SingleFactorterm is type 1
DEBUG 00:25:53,598 - exprWithNoMinus is type 1
DEBUG 00:25:53,598 - print statement has arg of type 1
DEBUG 00:25:53,598 - designator simple at line 108: eol
DEBUG 00:25:53,598 - term SingleFactorterm is type 2
DEBUG 00:25:53,598 - exprWithNoMinus is type 2
DEBUG 00:25:53,598 - print statement has arg of type 2
DEBUG 00:25:53,598 - designator simple at line 109: tezinaK
DEBUG 00:25:53,598 - term SingleFactorterm is type 1
DEBUG 00:25:53,598 - exprWithNoMinus is type 1
DEBUG 00:25:53,598 - print statement has arg of type 1
DEBUG 00:25:53,598 - designator simple at line 109: eol
DEBUG 00:25:53,598 - term SingleFactorterm is type 2
DEBUG 00:25:53,598 - exprWithNoMinus is type 2
DEBUG 00:25:53,598 - print statement has arg of type 2
INFO  00:25:53,598 - Print calls = 0
DEBUG 00:25:53,599 - Sfera
	ucitajTezinu(0); zapremina(0); Q(0); zapremina(0); 
Predmet
	ucitajTezinu(0); zapremina(0); Q(0); 
Kvadar
	ucitajTezinu(0); zapremina(0); Q(0); zapremina(0); 

INFO  00:25:53,601 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\program.obj
DEBUG 00:25:53,604 - class methoad call zapremina
DEBUG 00:25:53,604 - updating vTableAddress by Predmet class. OldValue =  5
DEBUG 00:25:53,604 - ^new value = 34
DEBUG 00:25:53,604 - updating vTableAddress by Sfera class. OldValue =  34
DEBUG 00:25:53,604 - ^new value = 74
DEBUG 00:25:53,604 - updating vTableAddress by Kvadar class. OldValue =  74
DEBUG 00:25:53,604 - ^new value = 114
DEBUG 00:25:53,605 - new called with level = 3
DEBUG 00:25:53,605 - class is 4
DEBUG 00:25:53,605 - new called with level = 3
DEBUG 00:25:53,605 - class is 4
DEBUG 00:25:53,605 - new called with level = 3
DEBUG 00:25:53,605 - class is 4
DEBUG 00:25:53,605 - new called with level = 5
DEBUG 00:25:53,605 - class is 4
DEBUG 00:25:53,605 - new called with level = 5
DEBUG 00:25:53,605 - class is 4
DEBUG 00:25:53,605 - new called with level = 5
DEBUG 00:25:53,605 - class is 4
DEBUG 00:25:53,606 - class methoad call zapremina
DEBUG 00:25:53,606 - class methoad call Q
DEBUG 00:25:53,606 - class methoad call ispis
DEBUG 00:25:53,606 - class methoad call zapremina
DEBUG 00:25:53,606 - class methoad call Q
DEBUG 00:25:53,606 - class methoad call ispis
INFO  00:25:53,607 - Finished code generation
INFO  00:25:53,608 - Parsiranje uspesno zavrseno!
