INFO  00:10:22,719 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:10:22,750 - #40 program
INFO  00:10:22,751 - #45 MJProgram
INFO  00:10:22,751 - #45 int
INFO  00:10:22,751 - #45 x
INFO  00:10:22,751 - #13 ;
INFO  00:10:22,751 - #45 int
INFO  00:10:22,752 - #45 z
INFO  00:10:22,752 - #36 [
INFO  00:10:22,752 - #37 ]
INFO  00:10:22,752 - #13 ;
INFO  00:10:22,752 - #34 {
INFO  00:10:22,752 - #45 int
INFO  00:10:22,753 - #45 main
INFO  00:10:22,753 - #32 (
INFO  00:10:22,753 - #33 )
INFO  00:10:22,753 - #45 int
INFO  00:10:22,753 - #45 y
INFO  00:10:22,753 - #13 ;
INFO  00:10:22,753 - #34 {
INFO  00:10:22,753 - #41 print
INFO  00:10:22,753 - #32 (
INFO  00:10:22,753 - #9 1
INFO  00:10:22,754 - #12 ,
INFO  00:10:22,755 - #9 1
INFO  00:10:22,755 - #33 )
INFO  00:10:22,755 - #13 ;
INFO  00:10:22,755 - #41 print
INFO  00:10:22,756 - #32 (
INFO  00:10:22,756 - #10 a
INFO  00:10:22,756 - #12 ,
INFO  00:10:22,756 - #9 1
INFO  00:10:22,756 - #33 )
INFO  00:10:22,756 - #13 ;
INFO  00:10:22,756 - #45 z
INFO  00:10:22,756 - #28 =
INFO  00:10:22,756 - #31 new
INFO  00:10:22,756 - #45 int
INFO  00:10:22,756 - #36 [
INFO  00:10:22,756 - #9 5
INFO  00:10:22,757 - #37 ]
INFO  00:10:22,757 - #13 ;
INFO  00:10:22,757 - #45 z
INFO  00:10:22,757 - #36 [
INFO  00:10:22,757 - #9 0
INFO  00:10:22,757 - #37 ]
INFO  00:10:22,757 - #28 =
INFO  00:10:22,757 - #9 0
INFO  00:10:22,757 - #13 ;
INFO  00:10:22,757 - #41 print
INFO  00:10:22,757 - #32 (
INFO  00:10:22,758 - #45 z
INFO  00:10:22,758 - #36 [
INFO  00:10:22,758 - #9 0
INFO  00:10:22,758 - #37 ]
INFO  00:10:22,758 - #33 )
INFO  00:10:22,758 - #13 ;
INFO  00:10:22,758 - #45 y
INFO  00:10:22,758 - #28 =
INFO  00:10:22,758 - #9 5
INFO  00:10:22,758 - #13 ;
INFO  00:10:22,758 - #45 x
INFO  00:10:22,758 - #28 =
INFO  00:10:22,758 - #45 y
INFO  00:10:22,758 - #15 +
INFO  00:10:22,758 - #9 3
INFO  00:10:22,759 - #13 ;
INFO  00:10:22,759 - #41 print
INFO  00:10:22,760 - #32 (
INFO  00:10:22,760 - #45 x
INFO  00:10:22,760 - #33 )
INFO  00:10:22,760 - #13 ;
INFO  00:10:22,760 - #45 y
INFO  00:10:22,760 - #28 =
INFO  00:10:22,760 - #32 (
INFO  00:10:22,760 - #45 x
INFO  00:10:22,760 - #33 )
INFO  00:10:22,760 - #13 ;
INFO  00:10:22,760 - #45 x
INFO  00:10:22,760 - #29 ++
INFO  00:10:22,760 - #13 ;
INFO  00:10:22,760 - #41 print
INFO  00:10:22,760 - #32 (
INFO  00:10:22,760 - #45 x
INFO  00:10:22,760 - #33 )
INFO  00:10:22,761 - #13 ;
INFO  00:10:22,761 - #45 x
INFO  00:10:22,761 - #30 --
INFO  00:10:22,761 - #13 ;
INFO  00:10:22,761 - #41 print
INFO  00:10:22,761 - #32 (
INFO  00:10:22,761 - #32 (
INFO  00:10:22,761 - #32 (
INFO  00:10:22,761 - #45 x
INFO  00:10:22,761 - #33 )
INFO  00:10:22,761 - #33 )
INFO  00:10:22,761 - #33 )
INFO  00:10:22,761 - #13 ;
INFO  00:10:22,761 - #45 x
INFO  00:10:22,761 - #28 =
INFO  00:10:22,761 - #45 x
INFO  00:10:22,761 - #15 +
INFO  00:10:22,761 - #32 (
INFO  00:10:22,761 - #16 -
INFO  00:10:22,761 - #9 2
INFO  00:10:22,761 - #33 )
INFO  00:10:22,761 - #13 ;
INFO  00:10:22,762 - #41 print
INFO  00:10:22,762 - #32 (
INFO  00:10:22,762 - #45 x
INFO  00:10:22,762 - #33 )
INFO  00:10:22,762 - #13 ;
INFO  00:10:22,762 - #45 x
INFO  00:10:22,762 - #28 =
INFO  00:10:22,762 - #45 y
INFO  00:10:22,762 - #17 *
INFO  00:10:22,762 - #9 2
INFO  00:10:22,763 - #13 ;
INFO  00:10:22,763 - #41 print
INFO  00:10:22,763 - #32 (
INFO  00:10:22,763 - #45 x
INFO  00:10:22,763 - #33 )
INFO  00:10:22,763 - #13 ;
INFO  00:10:22,763 - #45 y
INFO  00:10:22,763 - #28 =
INFO  00:10:22,763 - #45 x
INFO  00:10:22,763 - #18 /
INFO  00:10:22,763 - #9 4
INFO  00:10:22,764 - #13 ;
INFO  00:10:22,764 - #41 print
INFO  00:10:22,764 - #32 (
INFO  00:10:22,764 - #45 y
INFO  00:10:22,764 - #33 )
INFO  00:10:22,764 - #13 ;
INFO  00:10:22,764 - #45 x
INFO  00:10:22,764 - #28 =
INFO  00:10:22,764 - #45 y
INFO  00:10:22,764 - #19 %
INFO  00:10:22,764 - #9 3
INFO  00:10:22,764 - #13 ;
INFO  00:10:22,765 - #41 print
INFO  00:10:22,765 - #32 (
INFO  00:10:22,765 - #45 x
INFO  00:10:22,765 - #33 )
INFO  00:10:22,765 - #13 ;
INFO  00:10:22,765 - #42 read
INFO  00:10:22,765 - #32 (
INFO  00:10:22,765 - #45 x
INFO  00:10:22,765 - #33 )
INFO  00:10:22,765 - #13 ;
INFO  00:10:22,765 - #45 x
INFO  00:10:22,765 - #28 =
INFO  00:10:22,765 - #45 x
INFO  00:10:22,765 - #17 *
INFO  00:10:22,765 - #45 y
INFO  00:10:22,765 - #13 ;
INFO  00:10:22,765 - #41 print
INFO  00:10:22,765 - #32 (
INFO  00:10:22,765 - #45 x
INFO  00:10:22,765 - #33 )
INFO  00:10:22,765 - #13 ;
INFO  00:10:22,765 - #41 print
INFO  00:10:22,765 - #32 (
INFO  00:10:22,766 - #11 false
INFO  00:10:22,766 - #12 ,
INFO  00:10:22,766 - #9 20
INFO  00:10:22,766 - #33 )
INFO  00:10:22,766 - #13 ;
INFO  00:10:22,766 - #8 return
INFO  00:10:22,766 - #9 0
INFO  00:10:22,766 - #13 ;
INFO  00:10:22,766 - #35 }
INFO  00:10:22,766 - #35 }
INFO  00:10:22,768 - ***Abstract tree****
INFO  00:10:22,768 - #0
DEBUG 00:10:22,778 - Variable with name x has the address of 0
DEBUG 00:10:22,778 - Variable with name y has the address of 2
DEBUG 00:10:22,779 - found constant with value 1of type 1
DEBUG 00:10:22,779 - constant factor is type 1
DEBUG 00:10:22,779 - term SingleFactorterm is type 1
DEBUG 00:10:22,779 - exprWithNoMinus is type 1
DEBUG 00:10:22,779 - found constant with value 1of type 1
DEBUG 00:10:22,779 - print statement has arg of type 1
DEBUG 00:10:22,779 - found constant with value *****of type 2
DEBUG 00:10:22,779 - found constant with value 97of type 2
DEBUG 00:10:22,779 - constant factor is type 2
DEBUG 00:10:22,779 - term SingleFactorterm is type 2
DEBUG 00:10:22,779 - exprWithNoMinus is type 2
DEBUG 00:10:22,779 - found constant with value 1of type 1
DEBUG 00:10:22,779 - print statement has arg of type 2
DEBUG 00:10:22,779 - found constant with value 5of type 1
DEBUG 00:10:22,779 - constant factor is type 1
DEBUG 00:10:22,779 - term SingleFactorterm is type 1
DEBUG 00:10:22,779 - exprWithNoMinus is type 1
DEBUG 00:10:22,779 - term SingleFactorterm is type 3
DEBUG 00:10:22,779 - exprWithNoMinus is type 3
DEBUG 00:10:22,779 - found constant with value 0of type 1
DEBUG 00:10:22,779 - constant factor is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - found constant with value 0of type 1
DEBUG 00:10:22,780 - constant factor is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - found constant with value 0of type 1
DEBUG 00:10:22,780 - constant factor is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - print statement has arg of type 1
DEBUG 00:10:22,780 - found constant with value 5of type 1
DEBUG 00:10:22,780 - constant factor is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - found constant with value 3of type 1
DEBUG 00:10:22,780 - constant factor is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - print statement has arg of type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - term SingleFactorterm is type 1
DEBUG 00:10:22,780 - exprWithNoMinus is type 1
DEBUG 00:10:22,780 - print statement has arg of type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - print statement has arg of type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - found constant with value 2of type 1
DEBUG 00:10:22,781 - constant factor is type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - ExprWithMinus is type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - print statement has arg of type 1
DEBUG 00:10:22,781 - found constant with value 2of type 1
DEBUG 00:10:22,781 - constant factor is type 1
DEBUG 00:10:22,781 - term element is type 1
DEBUG 00:10:22,781 - term list single is type 1
DEBUG 00:10:22,781 - term MultiFactorTerm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - term SingleFactorterm is type 1
DEBUG 00:10:22,781 - exprWithNoMinus is type 1
DEBUG 00:10:22,781 - print statement has arg of type 1
DEBUG 00:10:22,781 - found constant with value 4of type 1
DEBUG 00:10:22,781 - constant factor is type 1
DEBUG 00:10:22,781 - term element is type 1
DEBUG 00:10:22,781 - term list single is type 1
DEBUG 00:10:22,782 - term MultiFactorTerm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - term SingleFactorterm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - print statement has arg of type 1
DEBUG 00:10:22,782 - found constant with value 3of type 1
DEBUG 00:10:22,782 - constant factor is type 1
DEBUG 00:10:22,782 - term element is type 1
DEBUG 00:10:22,782 - term list single is type 1
DEBUG 00:10:22,782 - term MultiFactorTerm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - term SingleFactorterm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - print statement has arg of type 1
DEBUG 00:10:22,782 - term element is type 1
DEBUG 00:10:22,782 - term list single is type 1
DEBUG 00:10:22,782 - term MultiFactorTerm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - term SingleFactorterm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - print statement has arg of type 1
DEBUG 00:10:22,782 - found constant with value 0of type 1
DEBUG 00:10:22,782 - constant factor is type 1
DEBUG 00:10:22,782 - term SingleFactorterm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
DEBUG 00:10:22,782 - found constant with value 20of type 1
DEBUG 00:10:22,782 - print statement has arg of type 1
DEBUG 00:10:22,782 - found constant with value 0of type 1
DEBUG 00:10:22,782 - constant factor is type 1
DEBUG 00:10:22,782 - term SingleFactorterm is type 1
DEBUG 00:10:22,782 - exprWithNoMinus is type 1
INFO  00:10:22,783 - Print calls = 0
INFO  00:10:22,784 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:10:22,790 - Parsiranje uspesno zavrseno!
