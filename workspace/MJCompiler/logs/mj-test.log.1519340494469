INFO  00:01:31,418 - Compiling source file: F:\GitHub\pp_proj\workspace\MJCompiler\test\simple.mj
INFO  00:01:31,446 - #40 program
INFO  00:01:31,447 - #45 MJProgram
INFO  00:01:31,447 - #45 int
INFO  00:01:31,447 - #45 x
INFO  00:01:31,447 - #13 ;
INFO  00:01:31,447 - #45 int
INFO  00:01:31,447 - #45 z
INFO  00:01:31,448 - #36 [
INFO  00:01:31,448 - #37 ]
INFO  00:01:31,448 - #13 ;
INFO  00:01:31,448 - #34 {
INFO  00:01:31,448 - #45 int
INFO  00:01:31,449 - #45 main
INFO  00:01:31,449 - #32 (
INFO  00:01:31,449 - #33 )
INFO  00:01:31,449 - #45 int
INFO  00:01:31,449 - #45 y
INFO  00:01:31,449 - #13 ;
INFO  00:01:31,449 - #34 {
INFO  00:01:31,449 - #41 print
INFO  00:01:31,449 - #32 (
INFO  00:01:31,449 - #9 1
INFO  00:01:31,450 - #12 ,
INFO  00:01:31,451 - #9 1
INFO  00:01:31,451 - #33 )
INFO  00:01:31,451 - #13 ;
INFO  00:01:31,451 - #41 print
INFO  00:01:31,452 - #32 (
INFO  00:01:31,452 - #10 a
INFO  00:01:31,452 - #12 ,
INFO  00:01:31,452 - #9 1
INFO  00:01:31,452 - #33 )
INFO  00:01:31,452 - #13 ;
INFO  00:01:31,452 - #45 z
INFO  00:01:31,452 - #28 =
INFO  00:01:31,452 - #31 new
INFO  00:01:31,453 - #45 int
INFO  00:01:31,453 - #36 [
INFO  00:01:31,453 - #9 5
INFO  00:01:31,453 - #37 ]
INFO  00:01:31,453 - #13 ;
INFO  00:01:31,453 - #45 z
INFO  00:01:31,453 - #36 [
INFO  00:01:31,453 - #9 0
INFO  00:01:31,453 - #37 ]
INFO  00:01:31,453 - #28 =
INFO  00:01:31,453 - #9 0
INFO  00:01:31,453 - #13 ;
INFO  00:01:31,453 - #41 print
INFO  00:01:31,454 - #32 (
INFO  00:01:31,454 - #45 z
INFO  00:01:31,454 - #36 [
INFO  00:01:31,454 - #9 0
INFO  00:01:31,454 - #37 ]
INFO  00:01:31,454 - #33 )
INFO  00:01:31,454 - #13 ;
INFO  00:01:31,454 - #45 y
INFO  00:01:31,454 - #28 =
INFO  00:01:31,454 - #9 5
INFO  00:01:31,454 - #13 ;
INFO  00:01:31,454 - #45 x
INFO  00:01:31,454 - #28 =
INFO  00:01:31,454 - #45 y
INFO  00:01:31,454 - #15 +
INFO  00:01:31,454 - #9 3
INFO  00:01:31,455 - #13 ;
INFO  00:01:31,455 - #41 print
INFO  00:01:31,455 - #32 (
INFO  00:01:31,455 - #45 x
INFO  00:01:31,456 - #33 )
INFO  00:01:31,456 - #13 ;
INFO  00:01:31,456 - #45 y
INFO  00:01:31,456 - #28 =
INFO  00:01:31,456 - #32 (
INFO  00:01:31,456 - #45 x
INFO  00:01:31,456 - #33 )
INFO  00:01:31,456 - #13 ;
INFO  00:01:31,456 - #45 x
INFO  00:01:31,456 - #29 ++
INFO  00:01:31,456 - #13 ;
INFO  00:01:31,456 - #41 print
INFO  00:01:31,456 - #32 (
INFO  00:01:31,456 - #45 x
INFO  00:01:31,456 - #33 )
INFO  00:01:31,456 - #13 ;
INFO  00:01:31,456 - #45 x
INFO  00:01:31,456 - #30 --
INFO  00:01:31,456 - #13 ;
INFO  00:01:31,457 - #41 print
INFO  00:01:31,457 - #32 (
INFO  00:01:31,457 - #32 (
INFO  00:01:31,457 - #32 (
INFO  00:01:31,457 - #45 x
INFO  00:01:31,457 - #33 )
INFO  00:01:31,457 - #33 )
INFO  00:01:31,457 - #33 )
INFO  00:01:31,457 - #13 ;
INFO  00:01:31,457 - #45 x
INFO  00:01:31,457 - #28 =
INFO  00:01:31,457 - #45 x
INFO  00:01:31,457 - #15 +
INFO  00:01:31,457 - #32 (
INFO  00:01:31,457 - #16 -
INFO  00:01:31,457 - #9 2
INFO  00:01:31,457 - #33 )
INFO  00:01:31,457 - #13 ;
INFO  00:01:31,458 - #41 print
INFO  00:01:31,458 - #32 (
INFO  00:01:31,458 - #45 x
INFO  00:01:31,458 - #33 )
INFO  00:01:31,458 - #13 ;
INFO  00:01:31,458 - #45 x
INFO  00:01:31,458 - #28 =
INFO  00:01:31,458 - #45 y
INFO  00:01:31,458 - #17 *
INFO  00:01:31,458 - #9 2
INFO  00:01:31,459 - #13 ;
INFO  00:01:31,459 - #41 print
INFO  00:01:31,459 - #32 (
INFO  00:01:31,459 - #45 x
INFO  00:01:31,459 - #33 )
INFO  00:01:31,459 - #13 ;
INFO  00:01:31,459 - #45 y
INFO  00:01:31,460 - #28 =
INFO  00:01:31,460 - #45 x
INFO  00:01:31,460 - #18 /
INFO  00:01:31,460 - #9 4
INFO  00:01:31,460 - #13 ;
INFO  00:01:31,460 - #41 print
INFO  00:01:31,460 - #32 (
INFO  00:01:31,460 - #45 y
INFO  00:01:31,460 - #33 )
INFO  00:01:31,460 - #13 ;
INFO  00:01:31,460 - #45 x
INFO  00:01:31,460 - #28 =
INFO  00:01:31,460 - #45 y
INFO  00:01:31,460 - #19 %
INFO  00:01:31,460 - #9 3
INFO  00:01:31,461 - #13 ;
INFO  00:01:31,461 - #41 print
INFO  00:01:31,461 - #32 (
INFO  00:01:31,461 - #45 x
INFO  00:01:31,461 - #33 )
INFO  00:01:31,461 - #13 ;
INFO  00:01:31,461 - #42 read
INFO  00:01:31,461 - #32 (
INFO  00:01:31,461 - #45 x
INFO  00:01:31,461 - #33 )
INFO  00:01:31,461 - #13 ;
INFO  00:01:31,461 - #45 x
INFO  00:01:31,461 - #28 =
INFO  00:01:31,461 - #45 x
INFO  00:01:31,461 - #17 *
INFO  00:01:31,461 - #45 y
INFO  00:01:31,461 - #13 ;
INFO  00:01:31,462 - #41 print
INFO  00:01:31,462 - #32 (
INFO  00:01:31,462 - #45 x
INFO  00:01:31,462 - #33 )
INFO  00:01:31,462 - #13 ;
INFO  00:01:31,462 - #41 print
INFO  00:01:31,462 - #32 (
INFO  00:01:31,462 - #11 false
INFO  00:01:31,462 - #12 ,
INFO  00:01:31,462 - #9 20
INFO  00:01:31,462 - #33 )
INFO  00:01:31,462 - #13 ;
INFO  00:01:31,462 - #8 return
INFO  00:01:31,462 - #9 0
INFO  00:01:31,462 - #13 ;
INFO  00:01:31,462 - #35 }
INFO  00:01:31,462 - #35 }
INFO  00:01:31,464 - ***Abstract tree****
INFO  00:01:31,464 - #0
DEBUG 00:01:31,472 - Variable with name x has the address of 0
DEBUG 00:01:31,473 - Variable with name y has the address of 0
DEBUG 00:01:31,473 - found constant with value 1of type 1
DEBUG 00:01:31,473 - constant factor is type 1
DEBUG 00:01:31,473 - term SingleFactorterm is type 1
DEBUG 00:01:31,473 - exprWithNoMinus is type 1
DEBUG 00:01:31,473 - found constant with value 1of type 1
DEBUG 00:01:31,473 - print statement has arg of type 1
DEBUG 00:01:31,473 - found constant with value *****of type 2
DEBUG 00:01:31,473 - found constant with value 97of type 2
DEBUG 00:01:31,473 - constant factor is type 2
DEBUG 00:01:31,473 - term SingleFactorterm is type 2
DEBUG 00:01:31,473 - exprWithNoMinus is type 2
DEBUG 00:01:31,473 - found constant with value 1of type 1
DEBUG 00:01:31,473 - print statement has arg of type 2
DEBUG 00:01:31,473 - found constant with value 5of type 1
DEBUG 00:01:31,473 - constant factor is type 1
DEBUG 00:01:31,473 - term SingleFactorterm is type 1
DEBUG 00:01:31,473 - exprWithNoMinus is type 1
DEBUG 00:01:31,473 - term SingleFactorterm is type 3
DEBUG 00:01:31,473 - exprWithNoMinus is type 3
DEBUG 00:01:31,474 - found constant with value 0of type 1
DEBUG 00:01:31,474 - constant factor is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - found constant with value 0of type 1
DEBUG 00:01:31,474 - constant factor is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - found constant with value 0of type 1
DEBUG 00:01:31,474 - constant factor is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - print statement has arg of type 1
DEBUG 00:01:31,474 - found constant with value 5of type 1
DEBUG 00:01:31,474 - constant factor is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - found constant with value 3of type 1
DEBUG 00:01:31,474 - constant factor is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - print statement has arg of type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,474 - term SingleFactorterm is type 1
DEBUG 00:01:31,474 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - print statement has arg of type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - print statement has arg of type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - found constant with value 2of type 1
DEBUG 00:01:31,475 - constant factor is type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - ExprWithMinus is type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - print statement has arg of type 1
DEBUG 00:01:31,475 - found constant with value 2of type 1
DEBUG 00:01:31,475 - constant factor is type 1
DEBUG 00:01:31,475 - term element is type 1
DEBUG 00:01:31,475 - term list single is type 1
DEBUG 00:01:31,475 - term MultiFactorTerm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - term SingleFactorterm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,475 - print statement has arg of type 1
DEBUG 00:01:31,475 - found constant with value 4of type 1
DEBUG 00:01:31,475 - constant factor is type 1
DEBUG 00:01:31,475 - term element is type 1
DEBUG 00:01:31,475 - term list single is type 1
DEBUG 00:01:31,475 - term MultiFactorTerm is type 1
DEBUG 00:01:31,475 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - term SingleFactorterm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - print statement has arg of type 1
DEBUG 00:01:31,476 - found constant with value 3of type 1
DEBUG 00:01:31,476 - constant factor is type 1
DEBUG 00:01:31,476 - term element is type 1
DEBUG 00:01:31,476 - term list single is type 1
DEBUG 00:01:31,476 - term MultiFactorTerm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - term SingleFactorterm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - print statement has arg of type 1
DEBUG 00:01:31,476 - term element is type 1
DEBUG 00:01:31,476 - term list single is type 1
DEBUG 00:01:31,476 - term MultiFactorTerm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - term SingleFactorterm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - print statement has arg of type 1
DEBUG 00:01:31,476 - found constant with value 0of type 1
DEBUG 00:01:31,476 - constant factor is type 1
DEBUG 00:01:31,476 - term SingleFactorterm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
DEBUG 00:01:31,476 - found constant with value 20of type 1
DEBUG 00:01:31,476 - print statement has arg of type 1
DEBUG 00:01:31,476 - found constant with value 0of type 1
DEBUG 00:01:31,476 - constant factor is type 1
DEBUG 00:01:31,476 - term SingleFactorterm is type 1
DEBUG 00:01:31,476 - exprWithNoMinus is type 1
INFO  00:01:31,476 - Print calls = 0
INFO  00:01:31,478 - Generating bytecode file: F:\GitHub\pp_proj\workspace\MJCompiler\out\simple.obj
INFO  00:01:31,482 - Parsiranje uspesno zavrseno!
